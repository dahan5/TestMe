-- phpMyAdmin SQL Dump
-- version 5.1.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Mar 30, 2022 at 01:27 PM
-- Server version: 10.4.22-MariaDB
-- PHP Version: 7.4.27

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `feqracom_quiz`
--

-- --------------------------------------------------------

--
-- Table structure for table `quiz_admins`
--

CREATE TABLE `quiz_admins` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `username` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `password` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `role_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '2'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_admins`
--

INSERT INTO `quiz_admins` (`id`, `username`, `password`, `created_at`, `updated_at`, `role_id`) VALUES
('a1cc3f60-4490-44d6-9c10-3ee9bbbc8e75', 'taleb.dahan@feqra.com', '$2y$10$pp.GHqnYbr9kMJv.nSOmxe38CAxcY5SBYcGy0auY.VNy/1pLWWmHm', NULL, NULL, '1'),
('c9fcbd2b-a0a4-4721-aaae-ea908992e40b', 'christoph.drescher@trimetis.com', '$2y$10$K94/Iji0JFotpWqYRxtUAOIkxVHXRGxSRuFQ38rWYg1zjdG2ra9KW', NULL, NULL, '1'),
('d34778d8-8293-487d-87e4-6d1dcbad9b6b', 'Examiner2', '$2y$10$EN/nEmECFvATORXl2qp4ReS9itImQ01Ig8RtLxy6zPRejnSKZy3ha', '2021-02-20 16:55:13', '2021-02-20 16:55:13', '2'),
('f6fd71da-84d2-4dc7-b280-0342dfb09088', 'Examiner1', '$2y$10$XWLJXmHkF5ma6Q7Np8pLEOC9JYDQCy38FbQUKcHQUYQ8ghsTuzwiO', '2021-03-10 05:40:23', '2021-03-10 05:40:23', '2');

-- --------------------------------------------------------

--
-- Table structure for table `quiz_adminsubject_class`
--

CREATE TABLE `quiz_adminsubject_class` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `adminsubject_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `class_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_adminsubject_class`
--

INSERT INTO `quiz_adminsubject_class` (`id`, `adminsubject_id`, `class_id`) VALUES
('92e9e84c-e347-4673-815e-9b0e36527f4c', 'ceb966d8-4c22-43bc-a01a-99fe7792d681', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84c-ec0a-4c2c-9988-be9b76b90793', '450cd725-b1e7-4f1f-987b-7db5e018c9a2', 'f747353d-5060-47c6-bd38-5e7f4c63f182'),
('92e9e84c-edbe-495c-bed0-cd2e4c5f75e6', 'f20929aa-1e05-4430-9c37-8bf024999ad5', 'f747353d-5060-47c6-bd38-5e7f4c63f182'),
('92e9e84c-ef83-4702-8cfd-e9b6e6c77474', '2ba86ead-4622-449d-bc96-da0f4bfa5d12', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f'),
('92e9e84c-f121-490e-8ada-7bb004bf1f26', '0d2c2733-1952-43e3-b902-30617ed11ea9', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84c-f2b7-469a-93d6-a08a676e5326', '52beb6bb-7ca6-4c73-9378-00685126c08f', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84c-f43e-4a9b-bc0e-de0d74d57592', 'c0027170-7ead-4481-8e83-1fb3e2ddf17c', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84c-f5cc-4adc-8e14-f3c10526740d', '380143f5-7d37-4f10-ac97-4e0f1704213d', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f'),
('92e9e84c-f768-4120-875e-8e301ee7513d', '46c1b951-52b6-4244-94da-bf7839f7567a', 'f747353d-5060-47c6-bd38-5e7f4c63f182'),
('92e9e84c-f901-4bcf-a750-0167c45e20c5', '40d678b6-11fd-4a40-be89-0b1050d18997', 'f747353d-5060-47c6-bd38-5e7f4c63f182'),
('92e9e84c-fa93-420c-bca3-ee383c419925', 'a1db26ec-cf32-4760-a372-f677ae2ee829', 'f747353d-5060-47c6-bd38-5e7f4c63f182'),
('92e9e84c-fc24-4dad-8993-9f0ddaafef2e', '41705e5a-7a05-4614-9884-9f6184e93696', 'f747353d-5060-47c6-bd38-5e7f4c63f182'),
('92e9e84c-fda9-4ec9-b26b-b016a42f19c6', '41d86a2a-35bd-45c6-90b4-4685e55911dd', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f'),
('92e9e84c-ff37-461e-80be-0dd1171e9f5f', '6dc492e9-9e2c-4e61-90c4-58f35f6cf63b', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84d-00c1-4d4d-a1a3-d11f9c086edb', '826a6e76-16d6-456c-b247-fb927a939d77', 'f747353d-5060-47c6-bd38-5e7f4c63f182'),
('92e9e84d-0265-402d-aafd-24d2dea20964', '36958d2e-1f34-44e4-ae86-f4bbc34036a6', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f'),
('92e9e84d-03f4-4d88-842d-31f71870ebdb', '925e7983-9067-4238-9ff2-fb22d9ea0946', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f'),
('92e9e84d-0588-469c-b755-6e83b616c8b8', '7d5ef3bc-0aad-4dc3-b6c8-21364fb67c99', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84d-070f-4080-bc8b-3d7de7956f33', 'f5d61d26-37df-4eb8-a57e-95391b4a9cea', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84d-0890-451b-96d0-4dfb42d1cf3e', '2808226d-36f3-4a11-b9aa-3afcd94ce49b', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84d-0a19-4937-892d-ca558ee6bf6a', 'b1809687-1b1c-4c7d-8eef-7824bb3a9a3c', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f'),
('92e9e84d-0ba7-40e4-8d43-e81d987e8cac', 'd2fc0f6a-924e-48fe-b46c-31ff1d031609', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84d-0d38-46d8-b70c-6b7f6d5905b7', 'f19f2415-ec37-42a7-a175-3910e076dd46', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84d-0ebc-4247-929f-d6f8022bf051', '78f30f30-58f2-412f-a255-0b3e003e3cc7', 'f747353d-5060-47c6-bd38-5e7f4c63f182'),
('92e9e84d-1053-4e9b-a615-48029c3b1867', '62be3766-73ff-4265-bd24-8e45be54adeb', 'f747353d-5060-47c6-bd38-5e7f4c63f182'),
('92e9e84d-11d5-4d97-9a28-1c2e3eab2778', '08ee1bda-e8de-4d73-ab9b-e7f3137e163f', 'f747353d-5060-47c6-bd38-5e7f4c63f182'),
('92e9e84d-135d-42aa-bb11-e658a9f9b307', '25b4af33-7645-4586-b9b8-aa3e227b6f31', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f'),
('92e9e84d-14e2-4632-a628-cd73ba253305', '7d5b69d6-3a1f-49f3-a8fb-1d8201aa8310', '1587cd47-c3d8-4a68-baed-110d91af8696'),
('92e9e84d-1677-4fd8-bcbf-36f4de303b7d', '8188b2cb-aea6-40f0-807b-cc1c89fab922', '2b197733-876d-4a00-9fba-ada8a986a610'),
('92e9e84d-1701-4f49-8d51-45bfdb181451', '8188b2cb-aea6-40f0-807b-cc1c89fab922', '810ec191-3aff-4340-b236-7e6c22015da4');

-- --------------------------------------------------------

--
-- Table structure for table `quiz_admin_subject`
--

CREATE TABLE `quiz_admin_subject` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `admin_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `subject_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_admin_subject`
--

INSERT INTO `quiz_admin_subject` (`id`, `admin_id`, `subject_id`) VALUES
('08ee1bda-e8de-4d73-ab9b-e7f3137e163f', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', 'd95af45c-8027-49a6-bf65-a1fe4f114a1c'),
('0d2c2733-1952-43e3-b902-30617ed11ea9', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '241c792c-c2df-4c6b-a2c9-fa0652392a8a'),
('25b4af33-7645-4586-b9b8-aa3e227b6f31', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', 'd99cdba4-17b7-4be9-b6fe-b3cfe30e32f5'),
('2808226d-36f3-4a11-b9aa-3afcd94ce49b', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', 'a71eccb4-13bf-4bf7-a72d-f599b1171e76'),
('2ba86ead-4622-449d-bc96-da0f4bfa5d12', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '0a6b3679-a498-4d37-aebf-a5e9c6fd8043'),
('36958d2e-1f34-44e4-ae86-f4bbc34036a6', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '736099c0-a3c8-43b8-9203-de3bdc9908de'),
('380143f5-7d37-4f10-ac97-4e0f1704213d', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '32b7f4a2-5e7a-4b0d-8017-d0b6388f2ac3'),
('40d678b6-11fd-4a40-be89-0b1050d18997', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '418dd337-345d-4571-9abc-87fbcc3ec603'),
('41705e5a-7a05-4614-9884-9f6184e93696', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '5b9785a3-3f37-4b7b-8dd4-d428c3334502'),
('41d86a2a-35bd-45c6-90b4-4685e55911dd', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '659cf545-6016-464c-bb4b-ce098a3e60d3'),
('450cd725-b1e7-4f1f-987b-7db5e018c9a2', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '01313b9f-22e8-4661-a574-20884ef4e0f8'),
('46c1b951-52b6-4244-94da-bf7839f7567a', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '3723a8a1-35d1-4eeb-887e-e0406a0d151f'),
('52beb6bb-7ca6-4c73-9378-00685126c08f', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '2ba709ad-e718-47a3-b969-634dee694b81'),
('62be3766-73ff-4265-bd24-8e45be54adeb', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', 'd38f3e45-9b58-426e-9b0c-f6a7663a454f'),
('6dc492e9-9e2c-4e61-90c4-58f35f6cf63b', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '66d40433-4278-499c-b6db-c6485c2ccc20'),
('78f30f30-58f2-412f-a255-0b3e003e3cc7', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', 'cc0a9e44-e255-4f5e-8c9a-f6e138780c34'),
('7d5b69d6-3a1f-49f3-a8fb-1d8201aa8310', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', 'e55a00de-65c5-41dd-80fe-a36db9870bc7'),
('7d5ef3bc-0aad-4dc3-b6c8-21364fb67c99', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '884fca6b-c74c-47c6-b08d-90622059005d'),
('8188b2cb-aea6-40f0-807b-cc1c89fab922', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', 'e90b3ae2-1110-4319-b2b4-672917d6474a'),
('826a6e76-16d6-456c-b247-fb927a939d77', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '696f989e-c404-4130-aaab-53904f29c2c5'),
('925e7983-9067-4238-9ff2-fb22d9ea0946', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '74767b14-f5a2-4b8a-a824-fc430e66b317'),
('a1db26ec-cf32-4760-a372-f677ae2ee829', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '56eaa75e-9f55-46f9-9552-5033d8753f1c'),
('b1809687-1b1c-4c7d-8eef-7824bb3a9a3c', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', 'a755caba-53d6-4cf4-8d7f-3641a29e3689'),
('c0027170-7ead-4481-8e83-1fb3e2ddf17c', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '2e4c50d1-5518-4f39-8608-a8580cce7b6f'),
('ceb966d8-4c22-43bc-a01a-99fe7792d681', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '00576857-89bf-4347-a472-57e2fbb7a3d1'),
('d2fc0f6a-924e-48fe-b46c-31ff1d031609', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', 'b7afe183-c5da-4215-9a58-85d990a4ce2d'),
('f19f2415-ec37-42a7-a175-3910e076dd46', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', 'c4d4bd7a-5b8f-492d-9b38-9cef4b367ee4'),
('f20929aa-1e05-4430-9c37-8bf024999ad5', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '09cb2cfc-e71e-4591-bd3e-1845b48ae436'),
('f5d61d26-37df-4eb8-a57e-95391b4a9cea', 'f6fd71da-84d2-4dc7-b280-0342dfb09088', '8ad54152-fa0a-4ced-b8fa-ae9a9a3fb3f8');

-- --------------------------------------------------------

--
-- Table structure for table `quiz_classes`
--

CREATE TABLE `quiz_classes` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `display_order` smallint(5) UNSIGNED NOT NULL,
  `class` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_classes`
--

INSERT INTO `quiz_classes` (`id`, `display_order`, `class`) VALUES
('0a72915d-596a-4858-bc33-a0487284e58d', 21, 'Apache-Tomcat'),
('0e4c0ead-1d0d-4230-af8c-bcb4103c2dec', 27, 'MySQL'),
('1587cd47-c3d8-4a68-baed-110d91af8696', 53, 'SAAS-B'),
('210003b6-d6b8-47b4-a4f0-e21707f3bbe7', 49, 'Scrum-Master'),
('24065890-7b64-417e-8700-077c543bda39', 12, 'Python'),
('2a57cb0e-56cf-4a6d-a9de-8ed8de9e695c', 29, 'Oracle'),
('2b197733-876d-4a00-9fba-ada8a986a610', 55, 'QA-Hacking'),
('2b8cfacd-53c8-41e5-90cb-f0d79346e822', 37, 'Tableau'),
('35922bb1-3fd9-4ef7-a53e-3c03a69490bf', 6, 'Mob-RN'),
('3a473c37-eb36-4507-a7ee-e9f7c80c993b', 20, 'NodeJS'),
('3c315e63-3619-4c37-b0a3-18fc07fb1260', 50, 'Marketing'),
('3c44482b-0612-4c72-92c9-bd9074ffa817', 33, 'AWS'),
('3f33c978-da37-4671-a3c8-229ca20515d6', 51, 'HR'),
('427f10b1-cf1c-4aa3-a101-5c547ad5898f', 45, 'QA-Hacking'),
('4f0b52cb-62b2-48bd-8ef7-52cc2ee86a39', 2, 'Front-PHP'),
('5588cd1f-4002-4901-a601-dbee94f308c7', 4, 'Front-Vue'),
('58367ff2-9479-44b3-8da6-f77dc7bc3a65', 44, 'Cryptography'),
('59f543fd-3ce3-488a-886a-a74eb47679c4', 18, '.Net'),
('5f5dfbbd-8094-40fa-a0e9-5c99b3a7bbfb', 32, 'DevOps'),
('6acffce4-da91-4219-8e64-f838e4bdac6c', 40, 'Cloud-Computing'),
('71313c2e-1ed6-4ee6-ab0b-83db6338fb11', 3, 'Front-React'),
('74969c49-584e-4d44-9634-971d8b363316', 24, 'Apache-Lucene-Solr'),
('7750f1b0-1830-4c3c-a383-6ecf9dfa3e81', 13, 'R'),
('7e15ef4c-e9ef-4d37-8313-f034bc7be725', 16, 'C++'),
('810ec191-3aff-4340-b236-7e6c22015da4', 56, 'QA-Testing'),
('832f52ef-cd67-4e43-a703-12fb4c53d086', 34, 'GCP'),
('8821242c-92c9-49a8-abaf-1132c2f4d7e4', 43, 'Linux-OS'),
('886fd417-6341-407b-9b48-6781d05de9dd', 14, 'PHP-8'),
('89393a6d-b824-4436-a4a5-42952ee9bd39', 9, 'Spring-Boot'),
('9195dd26-505d-4449-a175-332e14fb3548', 26, 'Apache-Maven'),
('93de31af-7b59-4b0f-9ecf-9865a63b87c7', 48, 'Product-Owner'),
('94374e4a-e134-4eba-b34f-9779e109c0d9', 10, 'Spring-Cloud'),
('a1b722a8-043f-4bef-9aa2-c1496067dfb6', 46, 'QA-Testing'),
('a8a9e936-4a44-4c36-b202-6e3a674d7513', 1, 'Front-Angular'),
('a9aefa6f-676e-458a-84e7-9a80f1c7f98d', 54, 'SAAS-F'),
('aaba860b-eb38-426f-91bf-53561fa7a8ec', 42, 'Gradle'),
('b789b516-4521-4285-bdf9-34be0d2fd811', 25, 'Apache-CouchDB'),
('bbfb48cf-3ce8-4d14-85f5-ecb6b1d1d415', 39, 'Data-Science'),
('bfc6dc2f-a981-4c05-82f6-b686aa483860', 11, 'Java-17'),
('c03921df-9807-4488-890a-624046ae56be', 7, 'Mob-Android'),
('cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 52, 'Cryptography'),
('cd1957d3-7ecd-460c-8c16-780ffc10c93d', 8, 'Mob-iOS'),
('cff7c574-f74c-4ebc-9a8b-dbd7ea8bc9b1', 5, 'Mob-Flutter'),
('d2ee618d-00d1-4029-9cf9-5f37b9b0b420', 22, 'Apache-Kafka'),
('d3e23cdf-b6f8-4548-b822-0edb8762ab85', 19, '.Net-Core'),
('d76eeabe-875f-49fc-ba13-4bcef90da8b1', 15, 'C#'),
('da0db15b-b184-411a-87d9-7be99b0cbfcb', 23, 'Apache-Spark'),
('dc7631ab-371c-4c47-ac08-c0cb29cffc08', 47, 'Project-Manager'),
('dca337c2-ebcc-4b49-837b-4c2366176d77', 41, 'Git'),
('dd7726ca-c3e8-457e-a0f0-81373d1668be', 30, 'MongoDB'),
('e6137bcd-d5d9-46de-82f2-f5e9f58c30e3', 36, 'Hadoop'),
('e7e911ef-4c1a-464a-8e5f-3f413a16271b', 38, 'Qlik'),
('e8d0044d-64e5-4126-83f0-e2ec7ac0803d', 28, 'SQL-Server'),
('e8d2cea2-7312-49ca-913b-7ed8bcfc7b3e', 35, 'BigData'),
('f34a13a9-ead3-4411-a691-b7b44e558fff', 17, 'Rust'),
('f57ddbf0-8123-4cf5-a2d7-b64b490ca130', 31, 'SAP-Hana'),
('f747353d-5060-47c6-bd38-5e7f4c63f181', 57, 'Marketing'),
('f747353d-5060-47c6-bd38-5e7f4c63f182', 58, 'Developer');

-- --------------------------------------------------------

--
-- Table structure for table `quiz_class_subject`
--

CREATE TABLE `quiz_class_subject` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `class_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `subject_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_class_subject`
--

INSERT INTO `quiz_class_subject` (`id`, `class_id`, `subject_id`) VALUES
('92c73999-f6fe-4e53-ac13-b55056d2964b', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', '0a6b3679-a498-4d37-aebf-a5e9c6fd8043'),
('92c739ac-1cb8-4594-b06f-06fa54d7ca75', 'f747353d-5060-47c6-bd38-5e7f4c63f181', 'fe7f52b6-ebfb-4928-afa1-cc3aa7b45718'),
('92c739b7-93f4-44e0-a11f-8157523cc088', '2b197733-876d-4a00-9fba-ada8a986a610', 'e90b3ae2-1110-4319-b2b4-672917d6474a'),
('92c739b7-97d1-4fd7-8f73-ddbfbbd00401', '810ec191-3aff-4340-b236-7e6c22015da4', 'e90b3ae2-1110-4319-b2b4-672917d6474a'),
('92c739c1-249a-421d-8958-403ef6cc3fe0', '1587cd47-c3d8-4a68-baed-110d91af8696', 'b7afe183-c5da-4215-9a58-85d990a4ce2d'),
('92c75d49-08d0-4370-a952-c99e72e9b133', '1587cd47-c3d8-4a68-baed-110d91af8696', '884fca6b-c74c-47c6-b08d-90622059005d'),
('92c8ab49-cae7-458f-986d-b483ccff7bf9', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', '32b7f4a2-5e7a-4b0d-8017-d0b6388f2ac3'),
('92c8abc5-1e28-473a-820e-3fbf0efea1ca', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'a755caba-53d6-4cf4-8d7f-3641a29e3689'),
('92c9701e-dd30-401f-bff1-4b75d5e566c6', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', '736099c0-a3c8-43b8-9203-de3bdc9908de'),
('92ca5085-29ec-492f-a251-2203548732ae', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', '659cf545-6016-464c-bb4b-ce098a3e60d3'),
('92ca5415-dbc5-45fd-9900-31ffd57bc939', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'd99cdba4-17b7-4be9-b6fe-b3cfe30e32f5'),
('92cac7a7-f77e-41f3-86e8-b569be6f9eee', 'f747353d-5060-47c6-bd38-5e7f4c63f181', '7c56d9fa-cdb8-40d3-924d-8b7c00688167'),
('92cadf14-d3d0-414d-b5b8-fd6acd100c7f', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', '74767b14-f5a2-4b8a-a824-fc430e66b317'),
('92cb8b1a-c5ac-4cb1-9f33-8a0d97b4b42c', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '696f989e-c404-4130-aaab-53904f29c2c5'),
('92cb8b66-c470-41cb-aaed-bcfb85d8e681', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'd95af45c-8027-49a6-bf65-a1fe4f114a1c'),
('92cb8b7a-fc70-4b20-b4c0-2d4be6b5996f', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '5b9785a3-3f37-4b7b-8dd4-d428c3334502'),
('92cb8b91-5e3d-4fe5-bca7-5422609d9d9a', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '01313b9f-22e8-4661-a574-20884ef4e0f8'),
('92cb8bb2-e81d-4730-817c-ffef15a3ed07', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '3723a8a1-35d1-4eeb-887e-e0406a0d151f'),
('92cc7d28-156a-4b8a-9536-76c5beb644c9', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '418dd337-345d-4571-9abc-87fbcc3ec603'),
('92cc7d4d-8fea-4beb-8a30-4cf4ae314926', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '09cb2cfc-e71e-4591-bd3e-1845b48ae436'),
('92cc7d78-5b1d-475e-8e39-febd855df54a', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'cc0a9e44-e255-4f5e-8c9a-f6e138780c34'),
('92cc7d99-b615-4cf0-a209-7977b9095b19', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'd38f3e45-9b58-426e-9b0c-f6a7663a454f'),
('92cc7da9-a54c-4afc-b5fd-7c41c33988c9', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '56eaa75e-9f55-46f9-9552-5033d8753f1c'),
('92ccc9e0-99fd-46e0-973b-1795727dd9ff', '1587cd47-c3d8-4a68-baed-110d91af8696', '2e4c50d1-5518-4f39-8608-a8580cce7b6f'),
('92ccca0c-935c-4349-ac4b-902082f21ab1', '1587cd47-c3d8-4a68-baed-110d91af8696', 'a71eccb4-13bf-4bf7-a72d-f599b1171e76'),
('92ccca50-c0e5-4f98-a80e-5c5184aacae4', '1587cd47-c3d8-4a68-baed-110d91af8696', '66d40433-4278-499c-b6db-c6485c2ccc20'),
('92ccca67-b335-4a26-bc25-cab92a11b28c', '1587cd47-c3d8-4a68-baed-110d91af8696', 'c4d4bd7a-5b8f-492d-9b38-9cef4b367ee4'),
('92cccabb-0838-467d-b971-9c35658781a3', '1587cd47-c3d8-4a68-baed-110d91af8696', '00576857-89bf-4347-a472-57e2fbb7a3d1'),
('92cccad7-b51d-49fb-9e84-f075ed456a34', '1587cd47-c3d8-4a68-baed-110d91af8696', '8ad54152-fa0a-4ced-b8fa-ae9a9a3fb3f8'),
('92cccae9-87d9-46a9-8a23-fa962add08ed', '1587cd47-c3d8-4a68-baed-110d91af8696', '241c792c-c2df-4c6b-a2c9-fa0652392a8a'),
('92cccafc-69f4-4c4c-9e45-b6b7a3f80bb6', '1587cd47-c3d8-4a68-baed-110d91af8696', '2ba709ad-e718-47a3-b969-634dee694b81'),
('92cccb19-52ab-4197-872f-06b5ddcd5015', '1587cd47-c3d8-4a68-baed-110d91af8696', 'e55a00de-65c5-41dd-80fe-a36db9870bc7');

-- --------------------------------------------------------

--
-- Table structure for table `quiz_exams`
--

CREATE TABLE `quiz_exams` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `class_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `subject_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `base_score` int(11) NOT NULL,
  `date` date NOT NULL,
  `hours` int(11) NOT NULL,
  `minutes` int(11) NOT NULL,
  `hasStarted` tinyint(1) NOT NULL DEFAULT 0,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_exams`
--

INSERT INTO `quiz_exams` (`id`, `class_id`, `subject_id`, `base_score`, `date`, `hours`, `minutes`, `hasStarted`, `created_at`, `updated_at`) VALUES
('06395d29-e646-42b7-b1a4-4b5eabfb8e09', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'cc0a9e44-e255-4f5e-8c9a-f6e138780c34', 13, '2021-02-23', 0, 15, 1, '2021-02-23 15:15:11', '2021-02-23 15:46:07'),
('137cb6ee-d459-4a0d-956d-94b26c97a592', '1587cd47-c3d8-4a68-baed-110d91af8696', 'b7afe183-c5da-4215-9a58-85d990a4ce2d', 10, '2021-02-24', 0, 10, 1, '2021-02-20 17:29:36', '2021-02-25 03:23:08'),
('2999216c-4ca4-4e01-b37d-6a24879fa329', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '5b9785a3-3f37-4b7b-8dd4-d428c3334502', 12, '2021-02-23', 0, 15, 1, '2021-02-23 14:13:45', '2021-02-23 15:45:49'),
('2ac55e0a-9465-497e-a756-0cee16244c10', '1587cd47-c3d8-4a68-baed-110d91af8696', 'e55a00de-65c5-41dd-80fe-a36db9870bc7', 10, '2021-02-24', 0, 10, 1, '2021-02-25 03:12:17', '2021-02-25 03:25:04'),
('316d30e3-6061-4be0-af33-f4ee4aef3bfb', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', '74767b14-f5a2-4b8a-a824-fc430e66b317', 12, '2021-02-24', 0, 10, 1, '2021-02-22 19:24:26', '2021-02-25 00:11:41'),
('453208b8-3ea2-4a94-9d91-002fd97bffda', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '09cb2cfc-e71e-4591-bd3e-1845b48ae436', 17, '2021-02-23', 0, 15, 1, '2021-02-23 15:04:00', '2021-02-23 15:46:03'),
('4a2db9d2-f00d-4c54-89ac-5b133200511b', 'f747353d-5060-47c6-bd38-5e7f4c63f181', '7c56d9fa-cdb8-40d3-924d-8b7c00688167', 5, '2021-02-22', 0, 5, 1, '2021-02-22 18:18:48', '2021-02-22 18:19:07'),
('4c7c4664-b2a6-47e1-869f-35f1d74d9aba', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', '0a6b3679-a498-4d37-aebf-a5e9c6fd8043', 40, '2021-02-21', 0, 20, 1, '2021-02-20 19:32:06', '2021-02-21 09:32:27'),
('5118424b-7611-415a-ae13-a1659bb974c0', '1587cd47-c3d8-4a68-baed-110d91af8696', '2e4c50d1-5518-4f39-8608-a8580cce7b6f', 12, '2021-02-24', 0, 10, 1, '2021-02-23 18:21:40', '2021-02-25 03:24:22'),
('54a0e622-cff8-4285-9e01-d48dd34ba7fa', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '56eaa75e-9f55-46f9-9552-5033d8753f1c', 15, '2021-02-23', 0, 10, 1, '2021-02-23 15:35:20', '2021-02-23 15:46:14'),
('659ba20a-23ef-46e3-937b-fe2413577197', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', '32b7f4a2-5e7a-4b0d-8017-d0b6388f2ac3', 13, '2021-02-22', 0, 10, 1, '2021-02-21 10:09:59', '2021-02-22 19:36:50'),
('65e408fc-4ae6-4c52-9314-723639e82a04', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'd99cdba4-17b7-4be9-b6fe-b3cfe30e32f5', 12, '2021-02-22', 0, 10, 1, '2021-02-22 12:55:55', '2021-02-22 13:35:57'),
('677ec257-eaf6-438f-9897-4efc22c379a5', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'a755caba-53d6-4cf4-8d7f-3641a29e3689', 9, '2021-02-22', 0, 10, 1, '2021-02-21 18:16:37', '2021-02-22 19:37:01'),
('6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '1587cd47-c3d8-4a68-baed-110d91af8696', '241c792c-c2df-4c6b-a2c9-fa0652392a8a', 10, '2021-02-24', 0, 10, 1, '2021-02-25 02:54:01', '2021-02-25 03:24:55'),
('6c202403-a831-4b7c-8bf9-f10f6463b6e7', '1587cd47-c3d8-4a68-baed-110d91af8696', '884fca6b-c74c-47c6-b08d-90622059005d', 10, '2021-02-24', 0, 10, 1, '2021-02-20 18:45:43', '2021-02-25 03:23:39'),
('744bc421-9e58-4752-b54a-ffd7d2bb9cc1', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', '736099c0-a3c8-43b8-9203-de3bdc9908de', 15, '2021-02-22', 0, 10, 1, '2021-02-21 19:19:01', '2021-02-22 19:36:32'),
('76724e02-ddca-4592-80f3-b06b389013b9', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', '659cf545-6016-464c-bb4b-ce098a3e60d3', 7, '2021-02-22', 0, 5, 1, '2021-02-22 12:45:51', '2021-02-22 13:36:16'),
('84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '1587cd47-c3d8-4a68-baed-110d91af8696', '2ba709ad-e718-47a3-b969-634dee694b81', 10, '2021-02-24', 0, 10, 1, '2021-02-25 03:03:06', '2021-02-25 03:25:00'),
('9291a534-8d59-4d95-b604-fdf399791cda', '1587cd47-c3d8-4a68-baed-110d91af8696', '00576857-89bf-4347-a472-57e2fbb7a3d1', 13, '2021-02-24', 0, 15, 1, '2021-02-24 20:09:56', '2021-02-25 03:24:45'),
('9a2a718e-7e68-4837-aa55-68febbc0136e', '1587cd47-c3d8-4a68-baed-110d91af8696', 'a71eccb4-13bf-4bf7-a72d-f599b1171e76', 8, '2021-02-24', 0, 10, 1, '2021-02-24 19:43:30', '2021-02-25 03:24:33'),
('a66a1b4a-c5ce-47db-afad-8335889439f8', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '3723a8a1-35d1-4eeb-887e-e0406a0d151f', 15, '2021-02-23', 0, 15, 1, '2021-02-23 14:29:35', '2021-02-23 15:45:57'),
('a6e44278-29cf-4fc2-bc38-24bf06403e0f', '1587cd47-c3d8-4a68-baed-110d91af8696', '66d40433-4278-499c-b6db-c6485c2ccc20', 10, '2021-02-24', 0, 10, 1, '2021-02-24 19:49:52', '2021-02-25 03:24:37'),
('aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '696f989e-c404-4130-aaab-53904f29c2c5', 13, '2021-02-23', 0, 15, 1, '2021-02-23 13:31:43', '2021-02-23 15:45:41'),
('d13a5e0e-83b5-4526-91af-92bc76a745a3', '1587cd47-c3d8-4a68-baed-110d91af8696', '8ad54152-fa0a-4ced-b8fa-ae9a9a3fb3f8', 11, '2021-02-24', 0, 10, 1, '2021-02-25 02:44:20', '2021-02-25 03:24:50'),
('d5ae5e35-f889-43fb-bcc9-41e74ceaba40', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'd38f3e45-9b58-426e-9b0c-f6a7663a454f', 15, '2021-02-23', 0, 10, 1, '2021-02-23 15:24:27', '2021-02-23 15:46:10'),
('d900cf7e-f6df-4117-bd9b-331aef3a0dfb', '1587cd47-c3d8-4a68-baed-110d91af8696', 'c4d4bd7a-5b8f-492d-9b38-9cef4b367ee4', 15, '2021-02-24', 0, 15, 1, '2021-02-24 19:57:14', '2021-02-25 03:24:41'),
('e397a98c-5c5e-418e-a252-c24c906e396d', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '418dd337-345d-4571-9abc-87fbcc3ec603', 25, '2021-02-23', 0, 15, 1, '2021-02-23 14:44:27', '2021-02-23 15:46:00'),
('f17e0fb2-763b-42fc-8c25-aa31e5620b56', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'd95af45c-8027-49a6-bf65-a1fe4f114a1c', 10, '2021-02-23', 0, 10, 1, '2021-02-23 13:42:38', '2021-02-23 15:45:45'),
('f489024e-a2a8-4590-8a17-5824599bc89e', 'f747353d-5060-47c6-bd38-5e7f4c63f182', '01313b9f-22e8-4661-a574-20884ef4e0f8', 11, '2021-02-23', 0, 10, 1, '2021-02-23 14:22:39', '2021-02-23 15:45:52');

-- --------------------------------------------------------

--
-- Table structure for table `quiz_failed_jobs`
--

CREATE TABLE `quiz_failed_jobs` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `connection` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `queue` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `payload` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `exception` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `failed_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- --------------------------------------------------------

--
-- Table structure for table `quiz_migrations`
--

CREATE TABLE `quiz_migrations` (
  `id` int(10) UNSIGNED NOT NULL,
  `migration` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `batch` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_migrations`
--

INSERT INTO `quiz_migrations` (`id`, `migration`, `batch`) VALUES
(1, '2012_10_21_153804_classes', 1),
(2, '2014_10_12_000000_create_users_table', 1),
(3, '2014_10_12_100000_create_password_resets_table', 1),
(4, '2019_08_19_000000_create_failed_jobs_table', 1),
(5, '2019_10_21_182440_create_admin_table', 1),
(6, '2019_10_22_074758_create_subjects_table', 1),
(7, '2019_10_22_140537_create_exams_table', 1),
(8, '2019_10_23_090527_create_questions_table', 1),
(9, '2019_10_23_091107_create_options_table', 1),
(10, '2019_10_23_091512_create_scores_table', 1),
(11, '2019_10_23_092025_edit_students_table', 1),
(12, '2019_10_24_055220_edit_users_table', 1),
(13, '2019_11_14_170720_edit_scores_table', 1),
(14, '2020_07_19_232003_create_roles_table', 1),
(15, '2020_07_19_233937_edit_admins_table', 1),
(16, '2020_08_21_180347_create_admin_subject_table', 1),
(17, '2020_08_26_121256_create_class_subject_table', 1),
(18, '2020_08_26_200859_create_adminsubject_class_table', 1);

-- --------------------------------------------------------

--
-- Table structure for table `quiz_options`
--

CREATE TABLE `quiz_options` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `question_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `body` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `isCorrect` tinyint(1) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_options`
--

INSERT INTO `quiz_options` (`id`, `question_id`, `body`, `isCorrect`) VALUES
('0017e8b2-993a-498e-a293-9ebf1aee3085', '308839d1-bb63-4629-977c-faf1a8a0aa7f', '<p>Listing hibernate XML mapping configuration file (.hbm.xml)</p>\n', 1),
('00c2d88d-ade4-4b7a-9ba6-798b514ebb0c', 'bf8eb032-5d85-4375-b9b9-1c0acd84b8c4', '<p>1 key</p>\n', 0),
('00c996bb-93d7-452d-a170-4434b689d89d', 'a75eb5ab-b1fd-4b9c-8559-eee5667cd4d5', '<p><span style=\"color: rgb(0, 0, 0);\">slipstream slip stream</span></p>\n', 1),
('01159e56-3f56-4b99-a76c-d39a10a5d750', '9da40fa1-e8ea-4dee-b61c-9ffbda01d1d2', '<p>12</p>\n', 0),
('0138825e-b2e9-4d0a-8800-a20938dbfd07', '1c62daee-e9e6-46ca-9dfe-8dc3c99c5014', '<p><span style=\"color: rgb(0, 0, 0);\">All of the above</span></p>\n', 1),
('013a5a44-3966-4f8e-922e-71c0a5b57250', 'bc97a1ca-62d7-465d-bcbc-e50439d5aa69', '<p><span style=\"color: rgb(0, 0, 0);\">int [] myList = {\"1\", \"4\", \"3\"};</span></p>\n', 0),
('01640038-b4c0-4fa0-9ae2-b84cc62045ae', '20d0a3e4-6c45-4de7-821a-f1562636ae4a', '<p><span style=\"color: rgb(0, 0, 0);\">A variable that stores address of an instruction</span></p>\n', 0),
('017c91c1-69cb-40a3-99c2-38a897b492a4', 'b340aaab-3b82-4090-9225-bb3ea0f67227', '<p><span style=\"color: rgb(0, 0, 0);\">2,1,4</span></p>\n', 0),
('01a296eb-7599-4a20-bf9e-de528c252d4f', '7ed8d220-751e-4618-8245-95e7ad8ca941', '<p>None</p>\n', 0),
('01a77923-9411-4314-9937-f44a834a5dfb', '4799b43f-71bf-4de0-b429-dd1b5b7fc6b1', '<p><span style=\"color: rgb(0, 0, 0);\">Overloaded functions can accept same number of arguments.</span></p>\n', 1),
('01de22c3-aa32-4d53-964f-9f20df803902', '9d7139a0-90e1-4ac9-a5fe-307aeb603c9e', '<p><span style=\"color: rgb(58, 58, 58);\">A scheme in which the password is jumbled and stored</span></p>\n', 0),
('01ded0ab-5970-4faa-874a-a7744bb8c7f1', '87606ac0-8a6a-4f4e-93f5-9cbfe271f447', '<p>-</p>\n', 0),
('02056200-a6e2-439c-90e4-35a814d94eba', 'e956a8bb-6e95-4bcb-b330-142b1be7c859', '<p><span style=\"color: rgb(0, 0, 0);\">stddef.h</span></p>\n', 0),
('0231dfce-d45a-4371-be56-5870460f0bc2', 'feb50af5-92f8-424e-9eed-054649c25bec', '<p><span style=\"color: rgb(0, 0, 0);\">Friend</span></p>\n', 0),
('023bc945-9491-4cf2-b730-b38d2e280e36', 'afd657e2-d410-4a9a-8a15-3bc291dbecea', '<p><span style=\"color: rgb(0, 0, 0);\">Error: ++needs a value</span></p>\n', 1),
('02541c56-1ee9-42ea-8ef9-902b48590783', 'cd59c15f-bc1b-4ba5-b31a-989cd2d5d8bf', '<p><span style=\"color: rgb(0, 0, 0);\">The middle argument will be the default argument.</span></p>\n', 0),
('0261424a-c574-46e2-8de7-fab637d74bc4', '99d5a8bf-4fe9-4289-81ae-3ee84b62b381', '<p><span style=\"color: rgb(0, 0, 0);\">nothing will print</span></p>\n', 0),
('02d505d7-9ceb-4459-a6da-4e6e17a9aea6', 'e76565e1-009f-46f6-8017-efccbd01dba5', '<p><span style=\"color: rgb(0, 0, 0);\">After line 10</span></p>\n', 0),
('02f9c538-cb06-47f6-9d4d-765ea1f4e5b3', '2744ee9f-4688-4f81-9c27-fb83fa76e67c', '<p><span style=\"color: rgb(0, 0, 0);\">Constructor is a member function of the class.</span></p>\n', 0),
('0331b3d4-f974-4457-978b-58ec5ec4d0ea', '198bbfd5-0f7a-47f6-a53b-df13da867262', '<p><span style=\"color: rgb(0, 0, 0);\">Representation of NULL pointer</span></p>\n', 1),
('035f98b5-a421-40c5-8cb0-134997623cde', 'd67ccf4b-7a89-47e5-8f8a-6eba109a8bc8', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.ArrayList</span></p>\n', 1),
('03608a16-98fc-4aff-84ea-4e29bcd4151b', '2291d61d-ea1f-44b8-b3d5-effdbdb15673', '<p>S<span style=\"color: rgb(0, 0, 0);\">ubstitution Cipher</span></p>\n', 0),
('0361d2e6-36dc-473d-b0d7-fe2947470fd5', '37aee43a-1c00-4102-a8e4-c5118a7c7099', '<p><span style=\"color: rgb(0, 0, 0);\">It can be marked public.</span></p>\n', 0),
('03b8c6c7-e988-4703-8479-76c7cfb26ce9', 'ff3a6737-f9ef-40c7-8ed1-0b29695d0fc0', '<p>True</p>\n', 1),
('03bc17e0-dbfe-462b-b72f-488cd6c2125e', '3c270c94-de39-4667-90fb-333d922156f4', '<p><span style=\"color: rgb(0, 0, 0);\">Compiles and print nothing</span></p>\n', 0),
('03c2bc80-610d-4f2b-b48b-2e74a03e8567', 'c875e858-e90d-4555-99d5-f028657f3ce3', '<p>Attacks</p>\n', 1),
('040f6aeb-d09c-42cd-8340-4ba8ea05e7a2', '1833f24c-a2e3-45ce-80e4-207aa4a773a1', '<p>When calling the add() method, an exception is thrown</p>\n', 0),
('040fd71b-2139-48f5-977a-4f7ccbf02c4c', '828e9cfd-e9c2-4fd6-9812-8fa676dfd2aa', '<p>-</p>\n', 0),
('041b57f8-be98-4df5-bbb7-9100b03a25cc', '89e92cdb-fe98-4c4c-98fc-f284b493c19c', '<p><span style=\"color: rgb(0, 0, 0);\">Private getter() and setter() methods should not use assertions to verify arguments</span></p>\n', 0),
('04f1e7e6-ccdf-4e33-8ab2-521fcdee4b2a', 'ac6579d6-88ab-428a-86e2-9c8718cf93ff', '<p><span style=\"color: rgb(0, 0, 0);\">2 and 3</span></p>\n', 1),
('0505a28b-89f0-44d2-a673-4506a14e863f', '828e9cfd-e9c2-4fd6-9812-8fa676dfd2aa', '<p>-</p>\n', 0),
('055dcc24-9985-47df-8d50-eea1602aad9f', '7f2b1a60-53c9-4d8f-85e0-5f6e16b2e3cf', '<p><span style=\"color: rgb(0, 0, 0);\">f is a function pointer.</span></p>\n', 0),
('05a4954f-f4e6-4947-8ca0-1913126d5b0e', '011fc229-cf60-46f5-8e89-e7b86fdec220', '<p><span style=\"color: rgb(0, 0, 0);\">method</span></p>\n', 0),
('05b42338-4190-4af3-8180-982675eeaf54', '4c8e4bb8-c80b-4f69-b94f-3c556f2c4f21', '<p><span style=\"color: rgb(0, 0, 0);\">The array size would appropriately grow.</span></p>\n', 0),
('05e7be14-fd64-4403-a6ae-83099ae95812', '66fbdb8a-db97-49ad-94aa-8ba92956bb22', '<p><span style=\"color: rgb(0, 0, 0);\">virtual void Display = 0;</span></p>\n', 0),
('06034b55-34fa-42f3-985a-7239e28baa98', '09f472e3-b4a0-42c1-acb0-03d022211980', '<p><span style=\"color: rgb(58, 58, 58);\">44 words</span></p>\n', 1),
('060d45b9-fe0b-43fd-87ab-8a9e742219da', '35d93b30-fa1e-4cfd-85d8-4d233bdd43fc', '<p><span style=\"color: rgb(0, 0, 0);\">Friend keyword can be used for a function in the private section of a class.</span></p>\n', 0),
('060ed254-e92a-47d7-8e54-09cb4f040567', '66e7e4bc-b04c-4678-a151-00f60806adf4', '<p><span style=\"color: rgb(0, 0, 0);\">Line12</span></p>\n', 0),
('062c6acd-144e-4b14-9d84-023994917b14', 'ea4928f3-b9db-409d-9b41-652a7c29a18a', '<p><span style=\"color: rgb(0, 0, 0);\">I is 1 I is 1</span></p>\n', 0),
('06815645-c1af-407a-8274-b1c39a6617fc', '7904cb02-22a4-4e63-ba11-7852f41343a0', '<p><span style=\"color: rgb(0, 0, 0);\">7 14</span></p>\n', 1),
('06c3a3ff-7975-4bfe-bf1c-b67719a0e33c', '3b6cd918-13cb-4c31-aaf9-454f9e4d13c1', '<p><span style=\"color: rgb(58, 58, 58);\">ENCRYPTED TEXT</span></p>\n', 1),
('06c9b5d5-4b4e-450e-b467-9113655a261d', 'ca8f5506-6a7e-4fd4-af12-aa29e6abde01', '<p><span style=\"color: rgb(0, 0, 0);\">Only 2 is correct.</span></p>\n', 0),
('06f5b907-0cfd-4093-9973-7a3be9d08e5d', '25832c05-7b76-4df7-a741-1854d0e41986', '<p><span style=\"color: rgb(58, 58, 58);\">key code</span></p>\n', 0),
('07163d7b-7de3-4cba-bba5-296a57005ed3', 'e641806b-38f2-47e1-b314-1151ccd08d03', '<p><span style=\"color: rgb(0, 0, 0);\">Composition</span></p>\n', 1),
('0739db46-4392-44be-9d09-ee7a4045fefc', '052cf1ba-3e99-4f1a-8800-67b12a910796', '<p><span style=\"color: rgb(0, 0, 0);\">Ex0 caugh</span></p>\n', 1),
('073dafa4-9f41-4211-9a84-dbfd25e3368a', 'df5344ec-28fe-46fa-904a-e703dd8de6ed', '<p>Cipher</p>\n', 0),
('07aadba5-f23a-435a-9568-b81ccb955efb', 'cf47b14d-a23a-41e1-8af4-4b820f70164d', '<p><span style=\"color: rgb(0, 0, 0);\">1200,1200,1300</span></p>\n', 0),
('07c09f4e-9bb2-4a76-9ddf-90894a063f06', '2e4d385c-81da-42ef-b06d-60b6cd30f85c', '<p><span style=\"color: rgb(0, 0, 0);\">[]</span></p>\n', 0),
('07e35800-f9a0-4420-8c9b-34781d1d15ac', 'bba3169a-eab7-4e53-ad26-53da07863940', '<p><span style=\"color: rgb(0, 0, 0);\">Java.util.List</span></p>\n', 0),
('07e696c1-46bf-4378-b46a-f8e3ab267c30', 'b2643b84-3154-4279-8cbb-d9586a770e85', '<p><span style=\"color: rgb(0, 0, 0);\">Virtual function</span></p>\n', 1),
('0850306f-3579-47b7-b2a0-ab212fd2d0b5', '4ee9a575-073c-4f4d-972b-730e5a37c1b3', '<p><span style=\"color: rgb(0, 0, 0);\">It\'s variables and methods must be static.</span></p>\n', 0),
('0860a852-7460-45ab-98f6-b4584b79bad6', 'e555a426-2862-43d6-9848-3dd90cc431f0', '<p>0</p>\n', 0),
('08a7b73b-1257-44f8-bec3-997eea534721', 'c1538c7e-9bae-4644-8645-35f37ecf7f23', '<p>R<span style=\"color: rgb(0, 0, 0);\">ivest, Shamir, Adleman</span></p>\n', 1),
('08bbf1ca-7ac7-40f0-b50f-f86f0daa2bf2', '83a40812-b708-43fd-9f03-7c466ae09d0f', '<p><span style=\"color: rgb(0, 0, 0);\">0 to 65000</span></p>\n', 0),
('08c6df5c-8118-49da-8534-6d4c9d49a45a', '7966aecd-baa5-4807-b467-60e29664d74f', '<p>3</p>\n', 0),
('08efa1eb-709f-48f0-9449-1143d2e7c9fa', '913b6120-f42a-4e9d-9dab-25e820cfc1e1', '<p><span style=\"color: rgb(0, 0, 0);\">It will not compile because class body of Birds is not defined.</span></p>\n', 0),
('09a9f143-94de-4912-8eb2-b3596474ca01', '3157f4cb-1542-40cb-ac7c-7c392a96222e', '<p><span style=\"color: rgb(58, 58, 58);\">Bi-alphabetic Cipher</span></p>\n', 0),
('09c3e586-78b0-4b31-933e-b3340d1617e4', '9902fcb3-21d2-4cdc-b7e5-2f107d63fb57', '<p><span style=\"color: rgb(0, 0, 0);\">resume();</span></p>\n', 0),
('09d148ec-4c2a-4ad0-9183-3ee3219f3ae2', '0fe541b4-b569-461d-95dc-3f481c037578', '<p><span style=\"color: rgb(0, 0, 0);\">h</span></p>\n', 0),
('09e9ff30-b823-4bba-b6cf-0b7f34c1fb6d', 'eda3cf93-9ccf-4905-a6b9-b5d242186c2d', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are incorrect.</span></p>\n', 0),
('09f919e3-e548-497b-b508-3288b2ec9ea7', 'f6e76ebe-9e06-4c3f-a99c-b9290b576d17', '<p>O<span style=\"color: rgb(0, 0, 0);\">ne Party</span></p>\n', 0),
('0a6920e6-a228-49f8-b77f-2afe4887c7db', '36118c14-761f-458d-96f4-b01706f8d03e', '<p>Public methods</p>\n', 1),
('0a7bc9ff-97ef-4fb7-aec3-6fc59e38dd1f', 'bc45e0af-cdc1-4f11-ae94-d95e0935f31d', '<p><span style=\"color: rgb(58, 58, 58);\">abqdvmwuwjphfvvyyrfznydokvl</span></p>\n', 1),
('0a88b215-9523-4e19-8ca8-a130c179d7eb', '1ab87519-1ecb-418c-892a-caab6d67b768', '<p><span style=\"color: rgb(0, 0, 0);\">Runtime error.</span></p>\n', 0),
('0a97255d-e893-4336-828b-2485e00d66cc', 'f26dcb4d-fad7-4545-9718-221c9eeee2fa', '<p>C<span style=\"color: rgb(0, 0, 0);\">losed Writing</span></p>\n', 0),
('0aee791e-b963-4c64-ac70-674860cd380a', 'f72e747a-827e-4e04-b603-7ca59887c3d4', '<p><span style=\"color: rgb(0, 0, 0);\">Virtual class</span></p>\n', 0),
('0b172a26-3cc8-46cf-9dca-19e91c9f3a5f', '17e90cb5-caa0-4095-b182-a28b8d5cfaf3', '<p><span style=\"color: rgb(58, 58, 58);\">Wi-Fi</span></p>\n', 0),
('0b2f7865-a757-43ad-89be-982c65d9dd85', 'e6f2f7ba-d5b0-4d18-8812-0fccbea97932', '<p><span style=\"color: rgb(0, 0, 0);\">char **ptr[3];</span></p>\n', 0),
('0b5109f5-2c3b-472e-b6bc-d9b046ddbc13', 'e00f2b76-14f5-43cd-89a3-1cdc87ccdec0', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,3</span></p>\n', 0),
('0b80ac2e-f21e-4047-8007-25229cb076da', '9e5d778a-b338-46fa-88f7-8e4a63601293', '<p><span style=\"color: rgb(0, 0, 0);\">Parameterized constructor</span></p>\n', 0),
('0bd2a0e3-e165-4061-a607-588ea5cdf0ca', '1ca48e83-f7f3-4c31-ab75-458c80cfba69', '<p><span style=\"color: rgb(0, 0, 0);\">thread</span></p>\n', 0),
('0bee37c7-07c3-4369-a78a-a696c8715687', '0062f70e-3f59-406a-a56a-d361fd45d4eb', '<p>Constructors can have default parameters.</p>\n', 1),
('0bf14e00-be59-4d5e-8eb3-fcca99e1ea31', '1eb8d787-20d0-4ebf-8b4b-820e50709c24', '<p><span style=\"color: rgb(0, 0, 0);\">finally</span></p>\n', 1),
('0bf6f9e2-1066-4793-80d4-be60608323bf', 'bcfa0f27-a65a-4bb9-9704-6f62a4a1838f', '<p>Declaring it abstract using static keyword.</p>\n', 0),
('0c25a625-ce63-45d3-a75a-d2f5f60c8069', 'eb70aee0-3931-4e3c-982f-c39907fd0c4d', '<p><span style=\"color: rgb(0, 0, 0);\">No code is necessary.</span></p>\n', 0),
('0c50c56b-71d2-48cf-aa9b-2c7920bc1f40', '3c5cee0d-9753-4d7c-af76-d62e1a93d63b', '<p><span style=\"color: rgb(58, 58, 58);\">Visual Performance Node</span></p>\n', 0),
('0c6056c2-9850-4114-a976-9910c3f01960', '6346cb62-d6b5-4452-8ca3-444c07612229', '<p><span style=\"color: rgb(0, 0, 0);\">ptr is an array of 10 integers</span></p>\n', 0),
('0c68da33-d711-4840-bd5d-d244cb128391', '3c5cee0d-9753-4d7c-af76-d62e1a93d63b', '<p><span style=\"color: rgb(58, 58, 58);\">Virtual Post Network</span></p>\n', 0),
('0c728cfc-ec26-454d-8aff-6b2afe0f43b6', '2d33ff1a-da20-456b-802c-c7a96872bb14', '<p><span style=\"color: rgb(0, 0, 0);\">public</span></p>\n', 0),
('0c838390-721f-4961-a81a-8aedf5156d6b', 'fba871db-f705-436f-a009-399009759a03', '<p><span style=\"color: rgb(0, 0, 0);\">Only 2 is correct</span></p>\n', 1),
('0d101e65-39c0-4819-afbb-aea89007f619', 'c8d851f2-6f5f-443a-9587-a69d40f14942', '<p><span style=\"color: rgb(0, 0, 0);\">friend</span></p>\n', 0),
('0d3b9ccf-7634-48ae-9a45-6fd1a4e13e4b', '61a0aeb4-2451-4177-8177-4cfbb94280b3', '<p><span style=\"color: rgb(0, 0, 0);\">In the first statement 6 specifies a particular element, whereas in the second statement it specifies a array size.</span></p>\n', 0),
('0d7d2f14-f865-430e-8e7e-fdaac395e2ab', 'f6b546b8-4b06-4c87-b7a1-429152a17f1e', '<p><span style=\"color: rgb(0, 0, 0);\">Java.util.Collection</span></p>\n', 0),
('0d9d26f2-480e-4b05-b855-8283f93120be', 'bd2eebab-5454-4e6b-a84e-c5178d090099', '<p><span style=\"color: rgb(58, 58, 58);\">e, t</span></p>\n', 1),
('0da9819e-d4fd-4a92-bf17-015946f04a70', 'b2b7bbcf-b532-4a21-bc96-9b52d8b4fcf9', '<p>9</p>\n', 1),
('0dd25912-5b7a-42dc-a8da-bcd7783dfb07', '8cd6987c-0df3-4e09-a506-d616c1c3bc18', '<p><span style=\"color: rgb(58, 58, 58);\">Wireless FLAN</span></p>\n', 0),
('0df35e26-3814-4b44-8241-fd09398fe65e', '0fbd2d42-f8d6-4edc-afa2-48610846fe73', '<p>Open/close data source connection</p>\n', 0),
('0df958e9-587a-4a90-8ef7-416a34c86a90', '0e9e1d1d-7829-461e-8921-1287127e9a1f', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are incorrect.</span></p>\n', 0),
('0e273247-2048-44bb-95e3-715aa26bbc12', 'd16c1a0f-0f5c-418d-a664-4df03e59d63b', '<p><span style=\"color: rgb(0, 0, 0);\">new Runnable(MyRunnable).start();</span></p>\n', 0),
('0ea66dd3-5cff-4f73-b061-f1c8b5b27842', 'ce134668-dac4-42aa-84b9-ab024f83713b', '<p><span style=\"color: rgb(58, 58, 58);\">64; 128 or 192</span></p>\n', 0),
('0f96cd33-2854-4944-a03e-8e6e72ec2988', '3272b79a-d9dc-48da-b35f-389d22c9d540', '<p><span style=\"color: rgb(58, 58, 58);\">0.065</span></p>\n', 0),
('0fa6f352-482c-42c3-b015-02aefe3adc31', '8c4c9829-2484-4452-aaa5-ff89691ffaf9', '<p><span style=\"color: rgb(0, 0, 0);\">Bottom-up</span></p>\n', 1),
('0fb6d27b-7525-4f2b-bb99-22f01621dbd9', 'ca8f5506-6a7e-4fd4-af12-aa29e6abde01', '<p><span style=\"color: rgb(0, 0, 0);\">Only 1 is correct.</span></p>\n', 0),
('0fdc5613-a4f6-4f08-9352-1dfbb87e0c2c', '9fecd0f8-9776-47c2-afd7-10afa3fd4746', '<p><span style=\"color: rgb(0, 0, 0);\">count = 4</span></p>\n', 0),
('0fde3091-facd-4244-a3ae-abd4fc3ec5d4', '04dee710-a928-43fe-b6a1-46ab880bf061', '<p>Advice to be executed if a method exists by throwing an exception</p>\n', 1),
('1028b25a-1182-48ed-8618-3e869f82b1f5', 'cc400152-7308-476a-8652-e3a3ea09dd3a', '<p>18</p>\n', 0),
('1031efb6-1551-4763-ad55-ba4ce24f6be6', '765ce8ef-18e7-465e-86cd-226efbb1b1ee', '<p><span style=\"color: rgb(0, 0, 0);\">4,6,1</span></p>\n', 0),
('10461209-afed-4d21-8876-5f1c1a84f189', '0e9e1d1d-7829-461e-8921-1287127e9a1f', '<p><span style=\"color: rgb(0, 0, 0);\">Only 2 is correct.</span></p>\n', 0),
('104faf75-6e71-4259-af3a-2e30cea94f08', 'ed608859-47c0-4427-bda0-785eec794f44', '<p><span style=\"color: rgb(0, 0, 0);\">Structure</span></p>\n', 0),
('105f40d1-2886-4a79-942a-09339fc38d52', '21cca90f-af01-476b-8969-61c577d8f5f9', '<p><span style=\"color: rgb(0, 0, 0);\">Default argument cannot be provided for pointers to functions.</span></p>\n', 1),
('1060a79e-2526-4524-aabc-e341f797d5a3', '38b623ae-fa30-4f87-a680-64352230bdd4', '<p><span style=\"color: rgb(0, 0, 0);\">none of the above</span></p>\n', 0),
('10676c48-29c5-4d24-a50e-6c2853c813bb', 'd52b0536-cc2e-4f1a-891a-b9d4c64d613c', '<p><span style=\"color: rgb(0, 0, 0);\">different</span></p>\n', 0),
('1069e432-afa4-42b4-aa2e-9cffff982f07', '20d0a3e4-6c45-4de7-821a-f1562636ae4a', '<p><span style=\"color: rgb(0, 0, 0);\">All of the above</span></p>\n', 0),
('106d53ce-4869-4ed6-969f-7eb6157e0df9', '755f4ada-0a94-4e78-a843-b24ba53f51c4', '<p>private</p>\n', 0),
('107dea7f-b2d4-4625-9ba2-3f60698b76e5', 'bad490d5-e282-425d-9f15-daf2d26d1a42', '<p><span style=\"color: rgb(0, 0, 0);\">27,4</span></p>\n', 0),
('10d32be4-fc31-4ea8-903d-2cc52077929c', '219175a4-21bf-44be-b7f2-45fd40c9f294', '<p>It cannot have a destructor.</p>\n', 0),
('1138676c-07ce-41ce-9873-1c64a19dabb7', '64e9e93f-d24d-42c8-8b38-8321b974f9fd', '<p><span style=\"color: rgb(0, 0, 0);\">101</span></p>\n', 1),
('114ed7be-5df5-4af8-8bd5-1a5518b3c3e0', '946b9fc9-deab-427c-a5e0-32076d95438e', '<p><span style=\"color: rgb(0, 0, 0);\">If a is false and b is true then the output is \"ELSE\"</span></p>\n', 1),
('11765b35-f8a0-4a03-a87a-5a8374ab6d16', '7fc1dedb-287b-46ef-9fe0-e5019870c208', '<p><span style=\"color: rgb(0, 0, 0);\">Assertions are appropriate for checking the validity of arguments in a method.</span></p>\n', 0),
('118882e7-2889-483c-a707-87e372118fe2', '2e4d385c-81da-42ef-b06d-60b6cd30f85c', '<p><span style=\"color: rgb(0, 0, 0);\">?:</span></p>\n', 1),
('119803d2-e1f7-4082-96c2-9fb8bcf7fe97', '2a80b448-834d-48ee-b7ca-c90f34cae525', '<p>A<span style=\"color: rgb(0, 0, 0);\">ll of them</span></p>\n', 1),
('11cb54e2-2ffe-4069-8eb8-812aac2e440b', 'b537da2c-37cc-4bf9-a4e1-ca3de1d67b9f', '<p><span style=\"color: rgb(0, 0, 0);\">public void start()</span></p>\n', 0),
('11d801f1-08e3-4ae5-a858-918db08a64f2', 'c496f124-ba4d-4b52-bd5c-0e276dda577e', '<p>ACD</p>\n', 1),
('121b86c7-e2f4-4cdb-b918-8b5cdbf47906', '71b0ecfc-c30b-441f-a9ce-813b5cc64f01', '<p>0</p>\n', 0),
('123757d3-ae03-4817-a99a-7e87acdba50c', '910e0026-671e-4ea7-bedd-57997b5e5f91', '<p>different</p>\n', 0),
('1245ccfc-4cbd-4a6d-9f39-69752ce810a9', 'ea1e9589-a40d-4098-b2d5-92069713050f', '<p><span style=\"color: rgb(58, 58, 58);\">52 words</span></p>\n', 1),
('125a60af-b8eb-4ffc-bfc6-896c1fc049d8', 'a933686f-3aed-46fc-96d8-3bde8801091c', '<p><span style=\"color: rgb(0, 0, 0);\">Function definition</span></p>\n', 0),
('1274f847-30cb-41c3-bd93-50eb52ea1fd5', '9e8583dc-1815-4287-abda-e8679e4292e6', '<p>Joined</p>\n', 0),
('12963d67-c742-4b6c-a123-9cf2e65c906e', '65b919ee-839d-49b5-a4d4-51d7fb7312bf', '<p><span style=\"color: rgb(0, 0, 0);\">ptr is a array of 30 integer pointers.</span></p>\n', 0),
('12be1b2c-c2f9-47b0-b05a-c378125d6f3f', 'b6980778-069a-4231-859b-78ab69bd5281', '<p><span style=\"color: rgb(0, 0, 0);\">java.lang.Double</span></p>\n', 0),
('12dcc64f-2e7f-4438-9159-e2e8b4e17b87', 'e055d7f6-680c-4dee-8ad9-48d050f36c44', '<p>D<span style=\"color: rgb(0, 0, 0);\">ata Encryption Slots</span></p>\n', 0),
('13ce373d-3e35-4af6-b121-2f6d696edafc', 'fc3f855c-31e0-40a9-8b68-9ba0c614cd8c', '<p><span style=\"color: rgb(0, 0, 0);\">float f = 1F;</span></p>\n', 1),
('13fd1bce-37db-4a56-bc67-04be1e7bb989', 'e7b7df13-b0ff-4b26-979f-43943e78259d', '<p>None of the above</p>\n', 0),
('1441254b-a106-49b1-a0db-ee3671c0c6fe', '3272b79a-d9dc-48da-b35f-389d22c9d540', '<p><span style=\"color: rgb(58, 58, 58);\">0.038</span></p>\n', 1),
('144ce6cf-62e7-425a-9c40-33625d948bed', 'd63c33e1-23f7-4a12-b516-ea4b28c8fcf4', '<p><span style=\"color: rgb(0, 0, 0);\">A reference must always be initialized outside all functions.</span></p>\n', 0),
('145cdcfc-076d-49d1-a0b5-5d08fe027580', '7fd064b7-792b-435b-ac13-dcfd81888a5a', '<p><span style=\"color: rgb(58, 58, 58);\">Barrier security</span></p>\n', 0),
('14a8fb72-d72d-4022-ac9d-839f8acfad6e', '899ce371-3a99-4773-a84d-641a3f2702e9', '<p><span style=\"color: rgb(0, 0, 0);\">two</span></p>\n', 0),
('14cb7821-ed77-4310-a7f0-0292b29fac6d', '66e7e4bc-b04c-4678-a151-00f60806adf4', '<p><span style=\"color: rgb(0, 0, 0);\">Line 10</span></p>\n', 0),
('14ea7abd-09e6-445a-99c2-b742d016efa9', 'bbea72ad-5557-4a75-9b10-9deb2ab52434', '<p>Private members of the base class become protected members of derived class</p>\n', 0),
('156ee781-8938-4c70-a54e-0285b88636b4', '96e0f0b7-9758-4a0c-aff2-e126b0a812e2', '<p>Data</p>\n', 0),
('15a3efa8-92dd-467c-9dcc-bef33325be87', '5ef52068-1d5b-448d-93af-216fffd427ef', '<p><span style=\"color: rgb(0, 0, 0);\">A reference can be declared beforehand and initialized later.</span></p>\n', 0),
('15bae871-7c50-4fbc-89fd-f6a18d0474d1', 'e0b8c6ef-ff9b-4364-8b03-b7d0f7ab6353', '<p>R<span style=\"color: rgb(0, 0, 0);\">ound about</span></p>\n', 0),
('1600e72a-8532-492a-8cfd-d3892a04fff6', 'defbfe25-0773-4497-9be4-ab82e5e187a0', '<p><span style=\"color: rgb(0, 0, 0);\">Overloaded function must have default arguments starting from the left of argument list.</span></p>\n', 0),
('16184b32-51b1-47b9-acf1-e75e6760457e', '3d464d28-b913-4dd0-8c4d-c7bbb248cd5b', '<p>101</p>\n', 0),
('167dbf34-5037-4e0c-b94c-2e3ce59438d7', '99c1fc9a-32d6-4eca-a788-6b4dd8e805fd', '<p><span style=\"color: rgb(0, 0, 0);\">5</span></p>\n', 0),
('16a81165-62f8-465b-85e3-644a85347e2b', '85d09d6c-782c-4c72-bb1a-53f1cbce37e5', '<p><span style=\"color: rgb(0, 0, 0);\">It speeds up execution.</span></p>\n', 0),
('16f064fc-9220-4722-be6d-fe9495b03c0d', '74ef9396-e72e-43dc-8039-a466f427ee2a', '<p><span style=\"color: rgb(0, 0, 0);\">Friend Functions</span></p>\n', 0),
('17930d33-f67a-4072-9a0f-4d83c7a0a8ea', '1c129c2c-fe24-4c2f-95f7-b414217628ee', '<p><span style=\"color: rgb(0, 0, 0);\">char *p = (char) malloc(100);</span></p>\n', 0),
('180ce27e-cbec-4953-93b5-b27b4a6688ad', 'efeca7b0-1664-4b18-b683-672fba5d00c3', '<p>RowMapper</p>\n', 0),
('18809c8e-fac2-4b49-a184-bff353edd8d4', '9902fcb3-21d2-4cdc-b7e5-2f107d63fb57', '<p><span style=\"color: rgb(0, 0, 0);\">init();</span></p>\n', 0),
('18e6bbc2-eb34-4e32-8d6b-9da2ec2d3bb2', '7e826e02-3c47-421e-b261-c86b37f0d65a', '<p><span style=\"color: rgb(0, 0, 0);\">after line 7, when doBar() completes</span></p>\n', 0),
('18f2a7de-9aa0-4cc4-aadb-d6de593f9dbb', '318a93cc-0630-437a-8306-aff5163e696f', '<p><span style=\"color: rgb(0, 0, 0);\">0 to 65543</span></p>\n', 0),
('18f70ef0-d419-424c-834f-ac0992d78667', 'd2ca9fcc-b531-4f5c-8871-4492768b419a', '<p><span style=\"color: rgb(0, 0, 0);\">?</span></p>\n', 0),
('19502e6a-228a-45a6-9179-efb04999e31b', '8cd6987c-0df3-4e09-a506-d616c1c3bc18', '<p><span style=\"color: rgb(58, 58, 58);\">Wireless LAN</span></p>\n', 0),
('1992778a-0a65-4f14-91fa-16d328c46074', '187b908d-43dc-42fb-9646-ce50de416144', '<p><span style=\"color: rgb(0, 0, 0);\">3,2,1</span></p>\n', 0),
('1996323a-0d64-4058-8f92-de0f4db6d45b', '7fd064b7-792b-435b-ac13-dcfd81888a5a', '<p><span style=\"color: rgb(58, 58, 58);\">All of the above</span></p>\n', 1),
('19ddb74b-3126-4fe9-9dba-ae7f76247884', '95eb037d-9935-4054-9dd5-148513dc49d6', '<p>False</p>\n', 1),
('19fd7953-1ee1-4082-9cff-3d73b605f69f', 'bd52e1aa-5478-443e-8f9e-088cbb647f4a', '<p><span style=\"color: rgb(58, 58, 58);\">O [ n! + n</span><sup style=\"color: rgb(58, 58, 58);\">50</sup><span style=\"color: rgb(58, 58, 58);\">&nbsp;].</span></p>\n', 0),
('1a40fd28-1e4d-4201-a063-eb599c889b80', '790ed3fe-84db-406f-8398-f7bd0a9363e0', '<p>p</p>\n', 0),
('1a462985-c0bb-47e0-9e87-97d3665411ca', 'e9d4c9b1-c6cd-4cb0-b22f-320409c73854', '<p>Rollback for any Exception</p>\n', 0),
('1a4682eb-7b65-4a4c-9fae-31e7816ba510', '9e94b142-28cd-4a67-8df9-03d809595ae5', '<p><span style=\"color: rgb(0, 0, 0);\">Protected data members</span></p>\n', 1),
('1aa2ffbf-0243-43ca-b875-9ad6c0af3bca', 'defbfe25-0773-4497-9be4-ab82e5e187a0', '<p>Two functions having same number of argument, order and type of argument can be overloaded if both functions do not have any default argument.</p>\n', 0),
('1aa35d8c-5eaa-4fbe-8854-e7981ecc7ba3', 'fe91ca63-860c-4001-a397-23a6e2ebddbd', '<p>1</p>\n', 0),
('1aaa31fc-7484-4bce-93be-c8040cf74212', 'ded1a528-d5ec-4307-84bf-303c6a5b718f', '<p>E<span style=\"color: rgb(0, 0, 0);\">lectronic Cryptography Book</span></p>\n', 0),
('1b2dd5a0-3c8d-4cd7-93f4-5a2692749f49', '3b9036c1-9afc-4e6e-b5b5-9c38f46c5c81', '<p>Intel</p>\n', 0),
('1b32f13b-4e2d-45f9-8235-b43736d34a6b', 'a50d87fd-3c37-45dc-9b7e-730e4c19f426', '<p><span style=\"color: rgb(0, 0, 0);\">arr is a array of characters.</span></p>\n', 0),
('1b542503-cd35-428d-9959-2ca5e0d26f1d', '584b5e7f-ad40-4f23-8543-120500a58384', '<p><span style=\"color: rgb(58, 58, 58);\">9 ; the last</span></p>\n', 1),
('1b55a45a-63b4-4660-a35e-1ceb42711d41', '37155d05-5e33-43e7-82ed-5350b5610c85', '<p><span style=\"color: rgb(58, 58, 58);\">Denial Of Service</span></p>\n', 0),
('1b65c362-00c6-4af7-9243-eb037b2d3267', '4c8e4bb8-c80b-4f69-b94f-3c556f2c4f21', '<p><span style=\"color: rgb(0, 0, 0);\">The element will be set to 0.</span></p>\n', 0),
('1bbf8960-dea3-445b-9051-395e879d4581', 'e76565e1-009f-46f6-8017-efccbd01dba5', '<p><span style=\"color: rgb(0, 0, 0);\">After line 11</span></p>\n', 0),
('1bcf942f-0bd0-4f3c-9595-f90c33e2ad50', 'c7291bb0-18e6-4c84-a804-a488cf4f600e', '<p>None</p>\n', 0),
('1c07de02-7f4c-4e92-92f3-f4370ce0ce23', '219175a4-21bf-44be-b7f2-45fd40c9f294', '<p><span style=\"color: rgb(0, 0, 0);\">Both A and B.</span></p>\n', 1),
('1c310faa-3591-4a86-a882-9edb195268c7', '17e90cb5-caa0-4095-b182-a28b8d5cfaf3', '<p><span style=\"color: rgb(58, 58, 58);\">Wi-Fi5</span></p>\n', 1),
('1c61c506-ad59-4930-8a6f-fbebf6df9570', '18fa0c62-31b5-4a88-8430-9f2bf4656a25', '<p>-</p>\n', 0),
('1c6b44eb-5216-40aa-b7f0-5b1110a0b66d', 'ba3276da-6cd7-4d0d-9bae-f3e6cb4a450f', '<p>another</p>\n', 1),
('1c7110ce-9f58-42bb-a3ce-064649b5b8ac', 'f72e747a-827e-4e04-b603-7ca59887c3d4', '<p><span style=\"color: rgb(0, 0, 0);\">Abstract class</span></p>\n', 0),
('1cae0236-2784-4f69-91aa-2cc21822e4d9', 'a618a981-ddae-47e4-aa93-f9c1ba3b5fe3', '<p>cipher text</p>\n', 0),
('1cdadce1-8f44-4406-81a6-1def70224549', 'b82bde27-d228-45b8-98f3-a8e38ba6a32b', '<p><span style=\"color: rgb(0, 0, 0);\">scr is a member of function pointer.</span></p>\n', 0),
('1cfb87b6-f6a6-4682-8c98-a47dcd0d5aaf', 'f1e65d34-919d-4f09-92be-4de4485b340f', '<p><span style=\"color: rgb(0, 0, 0);\">BC is printed before exiting with an error message.</span></p>\n', 0),
('1d2d0039-273b-4854-8291-1f3993682533', 'aaff4ef9-4464-418f-8dc4-c74b471adb71', '<p>Matches any update methods of the 2 classes, whatever the arguments and method visibility</p>\n', 0),
('1d49e197-b0fd-4ddc-ab53-887c40eb0eec', 'ea4928f3-b9db-409d-9b41-652a7c29a18a', '<p><span style=\"color: rgb(0, 0, 0);\">I is 1</span></p>\n', 0),
('1d7a8ccb-05c0-4029-9828-ef3482d24263', '66d2b74a-54af-4cbc-acde-d45a3a011afc', '<p><span style=\"color: rgb(0, 0, 0);\">11 11</span></p>\n', 0),
('1dbe8bed-7d9d-4e8b-91ac-82a8d949d84d', '575dd3fc-abfe-4e72-8625-e88ba3f8f30c', '<p>2,5,6</p>\n', 0),
('1dfde749-35be-4fc7-a850-f4ffa25a23c7', 'f974efc2-ad86-4d15-bf7b-45f7d74183bc', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,3,4</span></p>\n', 1),
('1e555cdd-30dd-4220-afc4-f74aea2abc88', '8eca3eb8-e9b9-4f76-9e72-c861cba69ac6', '<p><span style=\"color: rgb(0, 0, 0);\">argv is a pointer to pointer.</span></p>\n', 0),
('1e9d6c62-28c0-4090-990f-ebc43db70143', '37aee43a-1c00-4102-a8e4-c5118a7c7099', '<p><span style=\"color: rgb(0, 0, 0);\">It can be marked abstract.</span></p>\n', 1),
('1ee87551-59a2-4b45-8dac-6f0fc877687c', 'ce134668-dac4-42aa-84b9-ab024f83713b', '<p><span style=\"color: rgb(58, 58, 58);\">256; 128, 192, or 256</span></p>\n', 0),
('1f0ff89e-3c12-481a-9499-45f5787f2641', 'c85ea1ba-7bb7-4db0-8fb5-7ea92ecb6d4b', '<p><span style=\"color: rgb(0, 0, 0);\">Line 11</span></p>\n', 0),
('1f3d692f-c1bb-4ac6-ba79-a79ed20997e6', '1f6c7a3a-d55d-47be-b51d-a80c5dc1e595', '<p><span style=\"color: rgb(0, 0, 0);\">A class object and a class.</span></p>\n', 0),
('1f40fff4-da41-4358-aeb9-fb9d6036aa48', 'c8d851f2-6f5f-443a-9587-a69d40f14942', '<p><span style=\"color: rgb(0, 0, 0);\">public</span></p>\n', 0),
('1f424aea-d816-4e8a-bba5-5039794d9ce0', '4086e69d-a1ce-49e1-944e-0ac3c0ab5e12', '<p><span style=\"color: rgb(0, 0, 0);\">X run = new X(); Thread t = new Thread(run); t.start();</span></p>\n', 1),
('1fb76aaf-a28e-4378-bf08-cd03e82acced', '3750c3b3-5ad8-48ca-9efe-b818013d4866', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.ArrayList</span></p>\n', 0),
('1fd44cc8-f3c8-41b5-b5ac-e09bab72541e', '531a7e26-8941-497a-b2b1-7932aa79e8e5', '<p>-</p>\n', 0),
('1fdc0359-33c8-4114-8a78-5d39f8b57ec5', '9fecd0f8-9776-47c2-afd7-10afa3fd4746', '<p><span style=\"color: rgb(0, 0, 0);\">count = 0</span></p>\n', 0),
('1fe89de8-575e-49da-8b48-25320dd6631d', 'a618a981-ddae-47e4-aa93-f9c1ba3b5fe3', '<p>R<span style=\"color: rgb(0, 0, 0);\">otation Cipher</span></p>\n', 1),
('202c2290-8697-4d7c-98f0-9f30f87b7e80', '85d09d6c-782c-4c72-bb1a-53f1cbce37e5', '<p><span style=\"color: rgb(0, 0, 0);\">It slows down execution.</span></p>\n', 0),
('20463727-849d-4663-90ec-81058a12b6bd', '27e6274d-827d-46a4-a9e6-94862ef003e4', '<p><span style=\"color: rgb(0, 0, 0);\">foo done</span></p>\n', 0),
('20488d82-e7bf-4d9e-966a-ff956ec310d5', 'b537da2c-37cc-4bf9-a4e1-ca3de1d67b9f', '<p><span style=\"color: rgb(0, 0, 0);\">void run(int priority)</span></p>\n', 0),
('2052e89f-8166-43f4-ab7e-c3a7b5323f60', '575dd3fc-abfe-4e72-8625-e88ba3f8f30c', '<p>1,2,5</p>\n', 0),
('206102e0-d945-418a-8542-f46118d179ad', '38b623ae-fa30-4f87-a680-64352230bdd4', '<p><span style=\"color: rgb(0, 0, 0);\">hello</span></p>\n', 0),
('20934a49-bae4-4216-a391-66a0de799d74', 'e250045e-c9f3-4f71-91c9-4f64cb31adab', '<p>Id of the bean has to be transactionManager</p>\n', 1),
('2098cb08-79b1-4db8-804e-63d5f41635e6', 'a50d87fd-3c37-45dc-9b7e-730e4c19f426', '<p><span style=\"color: rgb(0, 0, 0);\">arr is a pointer to array of characters.</span></p>\n', 0),
('209dfa50-8406-418c-b84f-58a30a5135d1', 'ce134668-dac4-42aa-84b9-ab024f83713b', '<p><span style=\"color: rgb(58, 58, 58);\">128; 128 or 256</span></p>\n', 0),
('20db029d-0b39-4c47-959e-3f20216e5945', 'f215b4e5-e1df-48c3-8c77-edd383f16a9c', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 4</span></p>\n', 0),
('20db6e81-9c50-402e-86fe-65c008b63c6f', '97f90d30-7e06-44d5-9f59-fd0ab34c777b', '<p><span style=\"color: rgb(0, 0, 0);\">Both I and II are incorrect.</span></p>\n', 0),
('20f89754-8799-440f-87a9-a6287fad966c', '7fc1dedb-287b-46ef-9fe0-e5019870c208', '<p><span style=\"color: rgb(0, 0, 0);\">Assertions can be enabled or disabled on a class-by-class basis.</span></p>\n', 1),
('213337f8-81d0-4eae-bb69-e881c9a14aa8', '17c9a576-4af8-4d6b-9662-0b3771e50109', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.TreeMap</span></p>\n', 0),
('216210ae-75eb-4a65-9e6a-2ecdec32ecaf', 'ec0f190a-a108-4cec-8b41-54589f088cd1', '<p><span style=\"color: rgb(0, 0, 0);\">There is a syntax error on line 6.</span></p>\n', 1),
('21652a1b-480c-416d-8a95-82433a76be52', 'a59bba93-b0b5-4c07-800c-5aa4380a5c10', '<p><span style=\"color: rgb(58, 58, 58);\">128 bits</span></p>\n', 0),
('21f4b125-fd6b-4c86-923e-819e06182554', '7e30eb56-b62a-412a-9f9b-a7354b2167ca', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 1),
('21f4e3b1-527a-412f-a54d-e8c5a34c1852', '71b0ecfc-c30b-441f-a9ce-813b5cc64f01', '<p>1</p>\n', 0),
('2221a91c-89aa-474c-b589-ad262b250cc2', 'af6c3012-5eb0-4e91-86b0-993dd42b9fbe', '<p><span style=\"color: rgb(0, 0, 0);\">C++ allows the redefinition of a default parameter.</span></p>\n', 0),
('2226af6c-81d7-407e-865c-75b1a729af93', '708b65f3-0eb2-4769-a9c2-5f3dbdcb8aab', '<p><span style=\"color: rgb(0, 0, 0);\">exception finished</span></p>\n', 0),
('225be5de-4a2c-4e2e-a342-07a1c4940102', '88449f01-af37-4535-b9a3-352abc40aac1', '<p><span style=\"color: rgb(0, 0, 0);\">Constructors and destructors can both return a value.</span></p>\n', 0),
('227a8b94-a8bb-4a0e-a594-cede6e25e84f', '97fabea5-cfcf-415e-992f-938cdcadd08f', '<p>Advice th be executed before method invocation</p>\n', 0),
('227bbc47-ffdf-45ba-92a5-a6817a167d07', '890a50c2-fb7c-4ed7-94a8-9022f4c9f551', '<p><span style=\"color: rgb(0, 0, 0);\">are destroyed</span></p>\n', 0),
('22d41117-b58f-4b09-8753-e800359ec2c6', '084dfd57-8b1c-4835-9b79-7aba5f9367d2', '<p><span style=\"color: rgb(58, 58, 58);\">Random Polyalphabetic, Plaintext, Playfair</span></p>\n', 0),
('22fa7c9c-bfb0-4271-8ed4-b6d8ea0ee58d', '951b91b8-2348-47b1-b60b-86060eb3b425', '<p>An expression to identify joinpoints</p>\n', 1),
('2355ffce-feed-46a6-be3c-8957e98a462e', '8cd6987c-0df3-4e09-a506-d616c1c3bc18', '<p><span style=\"color: rgb(58, 58, 58);\">Wireless Fidelity</span></p>\n', 1),
('23594e5f-fa5d-41bf-9c5b-91c7c200cc4b', 'fc3f855c-31e0-40a9-8b68-9ba0c614cd8c', '<p><span style=\"color: rgb(0, 0, 0);\">float f = 1.0d;</span></p>\n', 0),
('23810824-967e-4a9a-9c2b-4a03944fc54f', '619875da-75a2-420e-8efb-ab888e5a9d37', '<p><span style=\"color: rgb(0, 0, 0);\">sleep()</span></p>\n', 0),
('24467515-4bbe-4388-8686-7f2ffe5e2369', 'b36c2012-4724-4174-bc77-b896cadd4578', '<p><span style=\"color: rgb(0, 0, 0);\">System.out.println(new Runnable() {public void run() { }});</span></p>\n', 1),
('245bd3df-1ef7-4675-823a-2334cdfffacd', 'e6f2f7ba-d5b0-4d18-8812-0fccbea97932', '<p><span style=\"color: rgb(0, 0, 0);\">char *ptr[3];</span></p>\n', 1),
('245cef99-0662-4f93-9a82-9474bbc639a7', 'ea3508e2-270e-4ff5-9e52-2721d9719d6b', '<p><span style=\"color: rgb(0, 0, 0);\">register();</span></p>\n', 0),
('24a4dd5b-4075-4f1b-b08d-61d8120a524c', '8e47c529-dc2c-431d-85dd-e681f150c82d', '<p><span style=\"color: rgb(0, 0, 0);\">Object</span></p>\n', 0),
('24e3b018-d1fe-44b5-adc4-680d15902019', '0fbd2d42-f8d6-4edc-afa2-48610846fe73', '<p>JDBC exception wrapping into DataAccess Exception</p>\n', 0),
('250d0444-fdb5-44c4-ac91-109310104f44', '2e4d385c-81da-42ef-b06d-60b6cd30f85c', '<p><span style=\"color: rgb(0, 0, 0);\">*</span></p>\n', 0),
('252d2a7e-2716-4784-a5cf-c10f5bd3e48f', '89e92cdb-fe98-4c4c-98fc-f284b493c19c', '<p><span style=\"color: rgb(0, 0, 0);\">It is proper to handle assertion statement failures using a catch (AssertionException ae) block.</span></p>\n', 0),
('25696c8d-135d-407b-8e31-6dd736767e82', 'b2643b84-3154-4279-8cbb-d9586a770e85', '<p><span style=\"color: rgb(0, 0, 0);\">Member function</span></p>\n', 0),
('258b9636-26b8-4f9a-a555-bc3edd2a3f86', 'efeca7b0-1664-4b18-b683-672fba5d00c3', '<p>ResultSetMapper</p>\n', 0),
('259559cb-398c-4a7e-82af-202b2a6a5bac', 'e0261cd8-bdce-4ed7-a43c-6c71ac89fdca', '<p>20</p>\n', 1),
('25ad9536-89c5-48e5-9105-b64b04e1e2ed', '7fc1dedb-287b-46ef-9fe0-e5019870c208', '<p><span style=\"color: rgb(0, 0, 0);\">Conditional compilation is used to allow tested classes to run at full speed</span></p>\n', 0),
('260ce86e-c4d9-43c3-9141-5995e49dbde8', '4b2d3b92-3853-4e20-bbab-ed52d9362f81', '<p><span style=\"color: rgb(58, 58, 58);\">O[x</span><sup style=\"color: rgb(58, 58, 58);\">7</sup><span style=\"color: rgb(58, 58, 58);\">&nbsp;+ x</span><sup style=\"color: rgb(58, 58, 58);\">3</sup><span style=\"color: rgb(58, 58, 58);\">].</span></p>\n', 0),
('2621b7ec-aa8b-49fa-99a1-327cb0f3dcaf', '725a330a-d38d-47e2-bc2c-f7a7465fa114', '<p>JDBC</p>\n', 0),
('26323bc7-a18b-456b-a8af-56d7d158dcfa', '7c8397ee-c948-4bc1-894c-f5a309d72197', '<p><span style=\"color: rgb(0, 0, 0);\">Default arguments are useful in situations where some arguments always have the same value.</span></p>\n', 0),
('2672c9a6-fd90-424e-bc17-dff9f0422a62', '8fddb5aa-a4b9-42c8-94a8-d9b2efe30f91', '<p>MC</p>\n', 0),
('2696cfd8-6bc1-45b6-a3a9-d13465cf7558', 'e555a426-2862-43d6-9848-3dd90cc431f0', '<p>no output</p>\n', 0),
('26d08f8c-c57a-46d9-af7c-837f477640ab', '4ef74cda-cbad-47a3-9f31-2af0a0039cdd', '<p><span style=\"color: rgb(58, 58, 58);\">only iv)</span></p>\n', 0),
('270bd7dd-2dc5-4d28-b4f5-c42ea95daf55', 'f26dcb4d-fad7-4545-9718-221c9eeee2fa', '<p>O<span style=\"color: rgb(0, 0, 0);\">pen Writing</span></p>\n', 0),
('27142b54-d114-44a7-bd8a-e5ff8a50da8e', 'bc97a1ca-62d7-465d-bcbc-e50439d5aa69', '<p><span style=\"color: rgb(0, 0, 0);\">int [] myList = {\"5\", \"8\", \"2\"};</span></p>\n', 0),
('271c0263-4053-4ba6-a038-4b4501c9cc59', '27e6274d-827d-46a4-a9e6-94862ef003e4', '<p><span style=\"color: rgb(0, 0, 0);\">bar</span></p>\n', 0),
('2721e822-5868-4061-bfde-d0549e29d179', '92dc67ba-8162-4a2f-b44b-6edb7fe8cde5', '<p>J<span style=\"color: rgb(0, 0, 0);\">ulia cipher</span></p>\n', 0),
('27638927-924f-4f04-9102-16e76af0be50', '9931f538-e6c2-4951-93bf-5d1d64d26d2a', '<p><span style=\"color: rgb(58, 58, 58);\">Network Injection</span></p>\n', 0),
('27649365-875e-49b3-a372-3f4f22c8658d', 'b82bde27-d228-45b8-98f3-a8e38ba6a32b', '<p><span style=\"color: rgb(0, 0, 0);\">scr is a pointer to pointer variable.</span></p>\n', 0),
('2770104d-52e1-4c81-99c8-e58e357512a8', '22c8c4e3-8004-4f7a-a886-bc958b03d27c', '<p><span style=\"color: rgb(0, 0, 0);\">Only 2 is correct.</span></p>\n', 0),
('27ba2ca6-2b8a-4f9c-b7e9-d18125d91a18', 'a75eb5ab-b1fd-4b9c-8559-eee5667cd4d5', '<p><span style=\"color: rgb(0, 0, 0);\">slipstream stream</span></p>\n', 0),
('27cd5e2a-266a-45be-8f8a-b9beebc1cfaa', 'b6980778-069a-4231-859b-78ab69bd5281', '<p><span style=\"color: rgb(0, 0, 0);\">java.lang.Character</span></p>\n', 0),
('27fab7c9-348f-4798-a51f-5a95249347a0', 'e6f2f7ba-d5b0-4d18-8812-0fccbea97932', '<p><span style=\"color: rgb(0, 0, 0);\">char (*ptr[3])();</span></p>\n', 0),
('28bc213f-2f0b-4d40-ab7a-e6554eb770da', '1fdbaafd-3b2c-40ac-bcc1-90875bfd099e', '<p><span style=\"color: rgb(0, 0, 0);\">A reference is stored on heap.</span></p>\n', 0),
('28bf3c69-c94f-4bff-abe9-b1afa0104fc1', '1891aa80-0d8c-4204-bfcb-13f456c761dd', '<p><span style=\"color: rgb(0, 0, 0);\">value = 5</span></p>\n', 0),
('28bfe478-1e94-40b0-80ac-3d4dacbb25b2', 'bd401b0a-b28c-4a06-91b1-fcb79903419b', '<p><span style=\"color: rgb(58, 58, 58);\">O[ e</span><sup style=\"color: rgb(58, 58, 58);\">n</sup><span style=\"color: rgb(58, 58, 58);\">&nbsp;].</span></p>\n', 1),
('28d5a223-6e9a-4bb0-a24e-b857b6338058', '1891aa80-0d8c-4204-bfcb-13f456c761dd', '<p><span style=\"color: rgb(0, 0, 0);\">value = 2</span></p>\n', 0),
('28db3e55-248b-4e4b-b365-597adab83d5e', 'ee9c5618-a5d6-4a19-9c86-cbbdf7473677', '<p>Multi Parties</p>\n', 0),
('28dc1397-b914-4b7f-abae-8285c767a908', '8fddb5aa-a4b9-42c8-94a8-d9b2efe30f91', '<p>JC</p>\n', 0),
('29067f0e-419b-4744-819e-edf4c0742953', '9931f538-e6c2-4951-93bf-5d1d64d26d2a', '<p><span style=\"color: rgb(58, 58, 58);\">Identity Theft</span></p>\n', 1),
('293d3ac1-2381-4f78-b3a2-6b5333f47306', '87961a90-d2d8-4c3e-91bc-b5866c2e4566', '<p><span style=\"color: rgb(0, 0, 0);\">An exception occurs at runtime.</span></p>\n', 0),
('294d1596-32c9-4524-b650-ccc1980aa9d0', '80116422-6102-41fe-a39d-72ea96de9433', '<p><span style=\"color: rgb(0, 0, 0);\">float *(*ptr)(int)</span></p>\n', 0),
('296facbd-4d3b-4dda-9e52-44e7a2deac80', 'bd2eebab-5454-4e6b-a84e-c5178d090099', '<p><span style=\"color: rgb(58, 58, 58);\">e, o</span></p>\n', 0),
('29d9dd77-ff70-45c9-8dfc-232be7ed2db6', '6346cb62-d6b5-4452-8ca3-444c07612229', '<p><span style=\"color: rgb(0, 0, 0);\">ptr is an pointer to array</span></p>\n', 0),
('29e4d681-070d-4f7e-ae8a-d022444ff1e8', '66fbdb8a-db97-49ad-94aa-8ba92956bb22', '<p><span style=\"color: rgb(0, 0, 0);\">virtual void Display(void) = 0;</span></p>\n', 1),
('2a3cdcbf-b5ca-405e-ac2f-5831a6d57fb8', 'f706fdd5-ce7a-4982-89b8-db4f5984eda8', '<p><span style=\"color: rgb(0, 0, 0);\">1,2</span></p>\n', 0),
('2a5301ac-b18c-4735-a42d-e66628ab5861', '5192d827-d122-4384-808b-cda84660cb82', '<p>int Sum(int a = 0, int b, int c = 3);</p>\n', 0),
('2a68df1a-d593-4da0-9d55-9ce384e2b111', '0062f70e-3f59-406a-a56a-d361fd45d4eb', '<p>Constructors cannot have more than one default parameter.</p>\n', 0),
('2aac799e-fc5b-4761-a096-33e1b9a37f9d', 'bba85f8a-b0f8-4da6-b838-9b9a099667e8', '<p><span style=\"color: rgb(58, 58, 58);\">Blowfish</span></p>\n', 0),
('2ab06ee9-e01d-4501-ad58-8e4563e1819e', 'ca8f5506-6a7e-4fd4-af12-aa29e6abde01', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are incorrect.</span></p>\n', 0),
('2abcef50-32ef-4be9-999a-09ac7cf5782b', '97fabea5-cfcf-415e-992f-938cdcadd08f', '<p>Advice to be executed regardless of the means by which a join point exists</p>\n', 0),
('2ae1c402-b9dd-4656-8bab-3aa592a34748', '6346cb62-d6b5-4452-8ca3-444c07612229', '<p><span style=\"color: rgb(0, 0, 0);\">ptr is a pointer to an array of 10 integers</span></p>\n', 1),
('2af50819-0244-48aa-af7f-029372aeda76', '1eb8d787-20d0-4ebf-8b4b-820e50709c24', '<p><span style=\"color: rgb(0, 0, 0);\">An exception is thrown at runtime.</span></p>\n', 0),
('2b119189-303d-4e2f-af90-5155fd59dfe3', '65b919ee-839d-49b5-a4d4-51d7fb7312bf', '<p><span style=\"color: rgb(0, 0, 0);\">ptr is a array of 30 pointers to integers.</span></p>\n', 1),
('2b4be1a7-1c9d-434c-8d50-51f9efdcabae', '198bbfd5-0f7a-47f6-a53b-df13da867262', '<p><span style=\"color: rgb(0, 0, 0);\">None of above</span></p>\n', 0),
('2b72d362-1651-45a1-8e16-ca86e535c157', '97fabea5-cfcf-415e-992f-938cdcadd08f', '<p>Advice to be executed after a join point completes without throwing an exception</p>\n', 1),
('2b791435-6f40-4ca7-9539-621218045647', '7c58fc55-56bd-40f2-b71e-9a7ebe5ac56e', '<p><span style=\"color: rgb(0, 0, 0);\">Dynamic loading</span></p>\n', 0),
('2b8de05e-c3a5-4d41-8836-8e69d3b3898a', 'ea7802e1-52b2-4004-857d-d946cfc1c4c6', '<p>cipher text</p>\n', 0),
('2bb594d4-1ce7-402c-bc4f-8fc7916baaaf', '17e90cb5-caa0-4095-b182-a28b8d5cfaf3', '<p><span style=\"color: rgb(58, 58, 58);\">Wi-Fi6</span></p>\n', 0),
('2bdbcc59-5bab-478c-9e0c-01f23fdbf2a4', 'b537da2c-37cc-4bf9-a4e1-ca3de1d67b9f', '<p><span style=\"color: rgb(0, 0, 0);\">public void run()</span></p>\n', 1),
('2bf0966c-28ee-4627-b9d7-633f889e3852', '318a93cc-0630-437a-8306-aff5163e696f', '<p><span style=\"color: rgb(0, 0, 0);\">0 to 60000</span></p>\n', 0),
('2bfd57b3-708e-4273-b88d-0b198a853ff2', 'ed608859-47c0-4427-bda0-785eec794f44', '<p><span style=\"color: rgb(0, 0, 0);\">Macro</span></p>\n', 0),
('2ca0a61a-c44e-458f-ab78-0ab7e5a26850', '6d1d18af-a086-4496-887b-0df172bee5f8', '<p>All methods could be proxied</p>\n', 0),
('2cfad6a7-9432-45ff-b5d9-8dac748524de', '28343bad-2ee2-498f-81b3-2cd9f90ddfa1', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,3</span></p>\n', 1),
('2d3ed4ba-d36e-4dc4-aa53-ab5d6b1b0a74', '32be3e83-1e43-45a6-8df1-989761afd66e', '<p><span style=\"color: rgb(0, 0, 0);\">3,3,3</span></p>\n', 0),
('2d51d1be-22a3-4919-b37b-5eddf25dc700', '729b473d-5d24-4a02-abf2-e46e675289b6', '<p><span style=\"color: rgb(0, 0, 0);\">Foo.Bar b = f.new Bar();</span></p>\n', 1),
('2d809433-9cc2-48e6-bbe9-31352411a761', 'f5443a7b-decd-46e9-b5b1-d10e9d94f428', '<p><span style=\"color: rgb(0, 0, 0);\">Value of elements in array</span></p>\n', 0),
('2d938d0b-bc11-4901-a239-96f4f2e4f697', 'e4064b35-e49e-404a-9bd5-d81ae5d4c0bb', '<p><span style=\"color: rgb(0, 0, 0);\">-&gt;</span></p>\n', 1),
('2d95a9c0-8cba-48e0-a08d-10361b5942ed', '904e4e87-425e-4368-b975-19f60d58592c', '<p><span style=\"color: rgb(0, 0, 0);\">Data Members</span></p>\n', 0),
('2dbffa9e-faa7-4a67-aaaa-46d91739c171', '1fdbaafd-3b2c-40ac-bcc1-90875bfd099e', '<p><span style=\"color: rgb(0, 0, 0);\">A reference is stored in a binary tree.</span></p>\n', 0),
('2dce5617-84ce-45a8-8c1b-4656cb01e84e', 'd06bafc9-d627-4b2b-9c27-8c1710e74635', '<p>False</p>\n', 0),
('2de9aee4-4332-43fb-a80b-f7192878c215', 'b0e3c6dc-8d5f-4031-9a20-ba5e2a06e1eb', '<p>None</p>\n', 0),
('2dff09da-5a35-4c5e-a045-96b19ab085f7', 'ded1a528-d5ec-4307-84bf-303c6a5b718f', '<p>E<span style=\"color: rgb(0, 0, 0);\">lectronic Control Book</span></p>\n', 0),
('2e056d26-d9d6-48af-8f40-333067a69bca', '71cf4a33-0a65-44f0-b029-6c50b38dd9c5', '<p><span style=\"color: rgb(58, 58, 58);\">Transitions</span></p>\n', 0),
('2e441726-3e48-4782-ab56-22c4a9912382', 'b036a1b5-69ab-441e-80eb-e46e23047797', '<p><span style=\"color: rgb(58, 58, 58);\">Rijndael</span></p>\n', 0),
('2e4aec28-2854-42cf-a94b-4a0b6b631752', 'ea7802e1-52b2-4004-857d-d946cfc1c4c6', '<p>Ca<span style=\"color: rgb(0, 0, 0);\">esar cipher</span></p>\n', 1),
('2e9db90e-5452-4f95-b3d9-33f178d0f59b', '4b2d3b92-3853-4e20-bbab-ed52d9362f81', '<p><span style=\"color: rgb(58, 58, 58);\">O[sin(x)].</span></p>\n', 0),
('2ec06737-9ebb-409c-a435-7227f474201a', 'cd59c15f-bc1b-4ba5-b31a-989cd2d5d8bf', '<p><span style=\"color: rgb(0, 0, 0);\">The first argument will be the default argument.</span></p>\n', 0),
('2ee09a2f-7a7b-4e0e-9598-f3712f4a53c2', '7c58fc55-56bd-40f2-b71e-9a7ebe5ac56e', '<p><span style=\"color: rgb(0, 0, 0);\">Dynamic Typing</span></p>\n', 0),
('2efb734d-174e-4927-95cf-a0d86debe60f', 'a75eb5ab-b1fd-4b9c-8559-eee5667cd4d5', '<p><span style=\"color: rgb(0, 0, 0);\">slip stream</span></p>\n', 0),
('2f06335a-8e43-4ef6-90a9-e8d0ae22f5ce', '95eb037d-9935-4054-9dd5-148513dc49d6', '<p>-</p>\n', 0),
('2fc10f5f-736a-4a79-be8b-284361071f48', 'cd59c15f-bc1b-4ba5-b31a-989cd2d5d8bf', '<p><span style=\"color: rgb(0, 0, 0);\">The trailing argument will be the default argument.</span></p>\n', 1),
('2fdbedb1-ac05-4ded-a62d-84fb32322e7f', '755f4ada-0a94-4e78-a843-b24ba53f51c4', '<p>shared</p>\n', 0),
('30168e0a-2102-417b-8448-63d78c467010', '82ec7648-df7f-464e-b07a-976a6624d775', '<p><span style=\"color: rgb(58, 58, 58);\">Identity Theft</span></p>\n', 0),
('302e1628-08be-43ea-b593-7390a003be96', '272a179d-3e85-4263-9b74-bed69505520d', '<p><span style=\"color: rgb(0, 0, 0);\">Error: RValue required</span></p>\n', 0),
('30b38f13-5501-4777-9e2a-a944d3e69fbe', 'b554c4f6-5c76-48e7-9825-2e70fb136e66', '<p>b<span style=\"color: rgb(0, 0, 0);\">oth a and c</span></p>\n', 1),
('30d8f913-3280-4943-b90c-04caa711f6ea', 'c237ee18-4031-4f40-83b4-9183d41b8b30', '<p><span style=\"color: rgb(0, 0, 0);\">main();</span></p>\n', 0),
('30dd74e1-4d53-4616-8fc8-c5190972213d', '6e2f24da-aa99-49dd-9b95-0899bad785fd', '<p>J<span style=\"color: rgb(0, 0, 0);\">ammed</span></p>\n', 0),
('30e9d74e-976f-47dc-bcef-293764f5989e', '7f2b1a60-53c9-4d8f-85e0-5f6e16b2e3cf', '<p><span style=\"color: rgb(0, 0, 0);\">f is a function returning pointer to an int</span></p>\n', 1),
('3107199a-de5d-4f2b-acdd-b52a40fa77eb', '00f89d07-f5eb-46d6-bfa0-79ca7810086f', '<p><span style=\"color: rgb(0, 0, 0);\">after line 6</span></p>\n', 0),
('31232977-e539-4f8f-a6ce-1a717988f51f', '77f984fe-9782-4a1c-a8ee-20591ea67f9c', '<p>$$</p>\n', 0),
('314e56a1-bc2c-4ad1-9b01-03112b661647', '36118c14-761f-458d-96f4-b01706f8d03e', '<p>All methods, whereas there visibility</p>\n', 0),
('315dc894-4de5-4ce9-888d-e0ecf184bcf2', 'f369b3f8-96f1-4d1f-8dac-9a75466429b1', '<p><span style=\"color: rgb(0, 0, 0);\">Once a reference variable has been defined to refer to a particular variable it can refer to any other variable.</span></p>\n', 0),
('326002c8-dfcf-4cca-ae88-5308e3a3c199', '176d6148-dea3-4472-a96c-963d199fca6f', '<p>Simple Text</p>\n', 0),
('32e1b5c1-12d6-41d0-9841-daec7c0b34c1', '65b6193b-2d89-4d74-840c-e4e9734e72ef', '<p><span style=\"color: rgb(0, 0, 0);\">2,3,4 and 1</span></p>\n', 0),
('331ac92c-f9ac-40d0-8562-488c05f7716b', 'b2b7bbcf-b532-4a21-bc96-9b52d8b4fcf9', '<p>4</p>\n', 0),
('338c6f69-39a0-4c5b-b144-de67926e8ca5', 'd28935cf-4e6b-4ed5-8139-c1b1f4d9e838', '<p><span style=\"color: rgb(0, 0, 0);\">Object is an instance of a class.</span></p>\n', 1),
('33a8f42c-ac39-49bc-9ad2-c6e8a7030ad1', 'ea4928f3-b9db-409d-9b41-652a7c29a18a', '<p><span style=\"color: rgb(0, 0, 0);\">no output is produced</span></p>\n', 1),
('33b07975-742e-4c92-b25f-23f73cbbf0a5', '0e5a5173-cdc6-4b73-a39d-396c0d220374', '<p>Key Size</p>\n', 1),
('33cf7845-e76c-4d41-9d90-3d30d45d0d95', '4deb4223-67d8-4fb2-be7c-3c0cb7631017', '<p><span style=\"color: rgb(0, 0, 0);\">i= FFE2 ptr=20 j=FFE4 ptr=30</span></p>\n', 0),
('347a918e-55d5-4f77-ac68-43dc97ecbd70', '80be3ee9-500d-4ae2-9c82-c560e2be3d57', '<p>All of them</p>\n', 1),
('347c5f7f-8775-493b-88a2-4e0aed0fa49e', '6346cb62-d6b5-4452-8ca3-444c07612229', '<p><span style=\"color: rgb(0, 0, 0);\">ptr is array of pointers to 10 integers</span></p>\n', 0),
('34f889ed-3821-4c4b-8487-43093a12229a', '0e9e1d1d-7829-461e-8921-1287127e9a1f', '<p><span style=\"color: rgb(0, 0, 0);\">Only 1 is correct.</span></p>\n', 0),
('34fa684b-dc9a-4e01-9026-4fae4ff69cba', '951b91b8-2348-47b1-b60b-86060eb3b425', '<p>None of the above</p>\n', 0),
('35031206-1fb9-443c-8198-6777c0353ad1', 'ac6579d6-88ab-428a-86e2-9c8718cf93ff', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 3</span></p>\n', 0),
('350916e6-56d8-496e-9e8e-4afa8a43ac34', '1be3d7f7-3260-462a-91d9-ab3703c473ad', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are incorrect.</span></p>\n', 0),
('3541f6ba-e76f-407c-ad0c-13359dfe63f1', '37aee43a-1c00-4102-a8e4-c5118a7c7099', '<p><span style=\"color: rgb(0, 0, 0);\">It must be marked final.</span></p>\n', 0),
('3544bb74-2ce9-48cc-8f3f-112dcc0a76ae', '828e9cfd-e9c2-4fd6-9812-8fa676dfd2aa', '<p>True</p>\n', 0),
('3555c8a5-cff2-40bc-8098-bfeee226d693', '1ab87519-1ecb-418c-892a-caab6d67b768', '<p>Compile-time error.</p>\n', 1),
('36043055-400a-403f-9185-a769a5ed2ede', '97015c85-5098-4743-831a-b4bcc1950f6d', '<p><span style=\"color: rgb(0, 0, 0);\">11,34</span></p>\n', 0),
('3626296a-fd91-4ae4-b2b5-5ce593a58ac8', '75e2ff6b-2c73-41f7-a043-3a15115802e4', '<p>Member functions of a class must be private.</p>\n', 0),
('363076d5-9d1f-409a-a4b3-37dcd20b7778', '8ad8976b-ab4b-4c8d-8df5-9561c01f9f63', '<p><span style=\"color: rgb(0, 0, 0);\">When the instance running this code is made eligible for garbage collection.</span></p>\n', 1),
('364d20ca-3cb7-4280-be35-fda9bc6a1956', '4087e203-cbbc-4382-8a71-7124b31c1059', '<p><span style=\"color: rgb(0, 0, 0);\">i = 5 and j =5</span></p>\n', 0),
('368f3ea9-3009-4222-a907-6a4f92d1142a', '27e6274d-827d-46a4-a9e6-94862ef003e4', '<p><span style=\"color: rgb(0, 0, 0);\">bar done</span></p>\n', 0),
('36a673e5-b53a-4fa9-8581-6e1f1e926602', 'e641806b-38f2-47e1-b314-1151ccd08d03', '<p><span style=\"color: rgb(0, 0, 0);\">Inheritance</span></p>\n', 0),
('36d8597c-2235-4c08-8913-b4420e98e555', '318a93cc-0630-437a-8306-aff5163e696f', '<p><span style=\"color: rgb(0, 0, 0);\">0 to 65342</span></p>\n', 0),
('36eaba3e-cee8-41c0-b0eb-637ad4c5b069', '97f90d30-7e06-44d5-9f59-fd0ab34c777b', '<p><span style=\"color: rgb(0, 0, 0);\">Only II is correct.</span></p>\n', 0),
('36f18580-7f02-4f6a-b7e9-737020683072', 'd63c33e1-23f7-4a12-b516-ea4b28c8fcf4', '<p><span style=\"color: rgb(0, 0, 0);\">A reference must always be initialized within functions.</span></p>\n', 0),
('36f4b37c-ae5a-4de8-9f3d-9684fd8ee579', '3d464d28-b913-4dd0-8c4d-c7bbb248cd5b', '<p>11</p>\n', 0),
('370a4c0b-fde4-4cf0-9309-67d6c8679e26', 'e19804a7-200b-4652-81b5-8989fc59eca1', '<p><span style=\"color: rgb(0, 0, 0);\">just after line 7</span></p>\n', 1),
('37659f53-3019-46e6-8346-4c64487a7c35', '725a330a-d38d-47e2-bc2c-f7a7465fa114', '<p>Hibernate</p>\n', 0),
('37695e80-8ef0-4519-addd-f4e02d297862', '755f4ada-0a94-4e78-a843-b24ba53f51c4', '<p>public</p>\n', 0),
('377efd4c-d415-4e92-878f-7bc6c36fed3c', '323fe7ec-17cc-4cf5-94b8-44a3a2941d5e', '<p><span style=\"color: rgb(0, 0, 0);\">virtual function</span></p>\n', 0);
INSERT INTO `quiz_options` (`id`, `question_id`, `body`, `isCorrect`) VALUES
('37d132ee-f0de-4e33-95da-6fe2e8af451b', '2291d61d-ea1f-44b8-b3d5-effdbdb15673', '<p>None</p>\n', 0),
('38099636-7ce4-4088-bbe2-8a8e8a02cdb9', '4b724f8d-7f59-4503-b92f-ff444be4a93f', '<p><span style=\"color: rgb(0, 0, 0);\">Object constructor</span></p>\n', 0),
('38263821-f849-4e71-a43a-4a373d837a09', '6e2f24da-aa99-49dd-9b95-0899bad785fd', '<p>Rotating</p>\n', 0),
('3827114a-912c-49f2-992e-884b693cddb8', '946b9fc9-deab-427c-a5e0-32076d95438e', '<p><span style=\"color: rgb(0, 0, 0);\">If a is false and b is false then the output is \"ELSE\"</span></p>\n', 0),
('383ad352-5a77-4988-a806-8b8684c14b92', '3272b79a-d9dc-48da-b35f-389d22c9d540', '<p><span style=\"color: rgb(58, 58, 58);\">0.035</span></p>\n', 0),
('387bc056-dd6d-445a-bd01-633d1ba809de', '87606ac0-8a6a-4f4e-93f5-9cbfe271f447', '<p>False</p>\n', 0),
('3880845a-65c3-42e3-9fa4-063f668e418f', 'bba85f8a-b0f8-4da6-b838-9b9a099667e8', '<p><span style=\"color: rgb(58, 58, 58);\">JUPITER</span></p>\n', 1),
('388790a3-f53e-493e-8737-d3a0c89d0a42', '71cf4a33-0a65-44f0-b029-6c50b38dd9c5', '<p><span style=\"color: rgb(58, 58, 58);\">Permutations</span></p>\n', 0),
('38a0075f-12b0-48b4-be0f-cd282849bbb7', '5a960629-a10b-4e13-9cc5-09f3524a473d', '<p><span style=\"color: rgb(0, 0, 0);\">We can use friend keyword as a class name.</span></p>\n', 0),
('38b6fdaa-aad4-4d6b-9fd4-13017d53dcfe', 'a83c9ada-5b44-4255-8864-97972f262216', '<p><span style=\"color: rgb(0, 0, 0);\">MyInner mi = new MyOuter.MyInner();</span></p>\n', 0),
('38c19b07-ea2c-4e29-87b2-c5c706badbb5', '65b919ee-839d-49b5-a4d4-51d7fb7312bf', '<p><span style=\"color: rgb(0, 0, 0);\">ptr is a pointer to an array of 30 integer pointers.</span></p>\n', 0),
('38f4f3bb-70c2-4aa5-802f-8e844e625ee0', '7a31c9b3-872b-419b-a706-fe04ca0b7a85', '<p><span style=\"color: rgb(0, 0, 0);\">8 2</span></p>\n', 1),
('392672a1-a059-4f16-ab95-bd2ec8ea2dec', 'd32d514e-7fcc-439a-afc2-a8220c2d280e', '<p><span style=\"color: rgb(0, 0, 0);\">When the control comes out of the function in which they are being used.</span></p>\n', 0),
('395b1b10-2101-4956-8cb0-e3a8fb7ade2a', '6d1d18af-a086-4496-887b-0df172bee5f8', '<p>AOP proxies are created by Spring in order to implement the aspect contracts</p>\n', 1),
('3981dbad-6eb7-458a-b629-6722d45b6f5b', 'd67ccf4b-7a89-47e5-8f8a-6eba109a8bc8', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.HashSet</span></p>\n', 0),
('39cd6db7-c896-434c-91ae-d693ee497b1d', 'a74fbf22-9c52-4858-8112-51e5e5a0b0f8', '<p><span style=\"color: rgb(0, 0, 0);\">0</span></p>\n', 0),
('39d74c4f-2562-4fd8-874a-81cec0255029', 'b6980778-069a-4231-859b-78ab69bd5281', '<p><span style=\"color: rgb(0, 0, 0);\">java.lang.StringBuffer</span></p>\n', 1),
('39f3a545-48d8-43c3-9f81-37931cb23843', '36118c14-761f-458d-96f4-b01706f8d03e', '<p>All methods, except private method</p>\n', 0),
('3a61728e-84d7-4700-9d75-513509383180', 'e59f3415-988a-4ed7-b619-dedb2b98b652', '<p><span style=\"color: rgb(0, 0, 0);\">garbage value</span></p>\n', 0),
('3aa726b6-f3b1-4689-a619-df52623686e8', '1c62daee-e9e6-46ca-9dfe-8dc3c99c5014', '<p><span style=\"color: rgb(0, 0, 0);\">Templates</span></p>\n', 0),
('3b1dd460-1e84-4e23-b73f-6db30b15b1ab', '423d0c00-55e9-421f-bb94-60d723008a53', '<p>-</p>\n', 0),
('3b36e4b6-04a4-4a1b-a57a-5fd59187c7de', '7218096a-30cf-47fa-bdb6-4d3197c445b9', '<p><span style=\"color: rgb(0, 0, 0);\">11,5,garbage</span></p>\n', 0),
('3b5230b6-4a26-4bf5-9fe3-e9d5f94c7785', 'a50d87fd-3c37-45dc-9b7e-730e4c19f426', '<p><span style=\"color: rgb(0, 0, 0);\">arr is a array of 10 character pointers.</span></p>\n', 1),
('3b724d46-7015-4c4f-86f8-75ffbe04ed8b', 'b6980778-069a-4231-859b-78ab69bd5281', '<p><span style=\"color: rgb(0, 0, 0);\">java.lang.String</span></p>\n', 0),
('3b75f83f-e519-429b-9153-7020adad3ca5', '61a0aeb4-2451-4177-8177-4cfbb94280b3', '<p><span style=\"color: rgb(0, 0, 0);\">In both the statement 6 specifies array</span></p>\n', 0),
('3b77e88e-a0cf-4c5c-8651-49b168a577c9', 'f215b4e5-e1df-48c3-8c77-edd383f16a9c', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 3</span></p>\n', 0),
('3b89f7c2-b2f5-420c-b40c-c38f3cd710aa', '760594b4-9cbe-429a-94d2-5c8ce028b9b8', '<p>ok</p>\n', 0),
('3b8a1af6-283b-4cd8-b2d0-091c9a92ee1d', '7481f7dc-1ab2-4fd4-9820-aa937343e56b', '<p><span style=\"color: rgb(0, 0, 0);\">By making all member functions constant.</span></p>\n', 0),
('3bc25795-317c-45c6-9b41-660e9f44ddfe', '904e4e87-425e-4368-b975-19f60d58592c', '<p><span style=\"color: rgb(0, 0, 0);\">Both A and C</span></p>\n', 1),
('3be488e6-c2b6-419b-a3f8-92d621f8b282', 'c496f124-ba4d-4b52-bd5c-0e276dda577e', '<p>AD</p>\n', 0),
('3c0c4956-23f3-4695-9e25-b7732f5acdaf', 'd01e5f86-cf60-4533-aa1c-a2053ca58ac8', '<p><span style=\"color: rgb(0, 0, 0);\">6,7,8</span></p>\n', 0),
('3c0f1d0e-24bd-41e4-ad59-dbff93a39a1f', 'b33a66e1-11df-4160-bf45-11cc581c8878', '<p><span style=\"color: rgb(0, 0, 0);\">Destructor has the same name as the first member function of the class.</span></p>\n', 0),
('3c2bd5ad-525e-469d-9119-ca5a6d482d66', '3d7bf805-d7fa-47d3-a62f-b0dfe5d18950', '<p><span style=\"color: rgb(0, 0, 0);\">Static function</span></p>\n', 0),
('3c64d01d-cf85-4013-bd9d-576b22d5e5e4', '1c62daee-e9e6-46ca-9dfe-8dc3c99c5014', '<p><span style=\"color: rgb(0, 0, 0);\">Function overloading</span></p>\n', 0),
('3c7ed440-8216-4658-828e-af74ee728128', 'f26dcb4d-fad7-4545-9718-221c9eeee2fa', '<p>S<span style=\"color: rgb(0, 0, 0);\">ecret Writing</span></p>\n', 1),
('3cedbfda-4c9b-49bb-b5e8-2c40978c86ab', '988f7ab3-51ac-4010-a498-f5f613f105a6', '<p><span style=\"color: rgb(0, 0, 0);\">arithmetic exception</span></p>\n', 0),
('3d080e02-cf0f-41cf-bb11-69e5378951a9', '077fdade-a412-4b88-a5a4-4003b3a02420', '<p><span style=\"color: rgb(0, 0, 0);\">Only 1 is correct.</span></p>\n', 0),
('3d254d86-2428-4614-8278-a9cd418b6d7c', 'bcfa0f27-a65a-4bb9-9704-6f62a4a1838f', '<p><span style=\"color: rgb(0, 0, 0);\">Making at least one member function as virtual function.</span></p>\n', 0),
('3d73d327-efc0-49a2-bb83-5a7047eea8b4', 'b82bde27-d228-45b8-98f3-a8e38ba6a32b', '<p><span style=\"color: rgb(0, 0, 0);\">scr is a pointer to char.</span></p>\n', 1),
('3db863a7-819e-4fbb-94cf-9963b9950442', '988f7ab3-51ac-4010-a498-f5f613f105a6', '<p>finished</p>\n', 0),
('3de759cd-2b9b-4080-863c-3313f12ef5dd', '0fcc2fed-debd-4713-98ad-d22f8eccd462', '<p>Files</p>\n', 0),
('3e0325d9-e6c5-448a-8b03-18c377957c6a', '3b9036c1-9afc-4e6e-b5b5-9c38f46c5c81', '<p>HP</p>\n', 0),
('3e0eb46d-f662-4d9c-a7f3-af24faeea133', 'a59bba93-b0b5-4c07-800c-5aa4380a5c10', '<p><span style=\"color: rgb(58, 58, 58);\">256 bits</span></p>\n', 0),
('3ea239d0-efd0-4824-a541-0f544b0effe0', 'e956a8bb-6e95-4bcb-b330-142b1be7c859', '<p><span style=\"color: rgb(0, 0, 0);\">stdio.h and stddef.h</span></p>\n', 1),
('3eb58860-74d7-4bf2-849d-66c4837c43ef', 'bc0d0e92-5a75-4a0c-b71d-c88bc12069aa', '<p>DES function</p>\n', 1),
('3ebe2e3e-d193-4fbd-8096-69f56bdf9ce8', 'b2643b84-3154-4279-8cbb-d9586a770e85', '<p><span style=\"color: rgb(0, 0, 0);\">Both B and C</span></p>\n', 0),
('3ee2b110-6fe1-48fd-9a83-d9a196105a7a', 'e055d7f6-680c-4dee-8ad9-48d050f36c44', '<p>D<span style=\"color: rgb(0, 0, 0);\">ata Encryption Solutions</span></p>\n', 0),
('3ef25066-70c5-4c98-bb9f-4dde2417ca36', '25832c05-7b76-4df7-a741-1854d0e41986', '<p><span style=\"color: rgb(58, 58, 58);\">message key hash function</span></p>\n', 0),
('3efcc63e-729a-4546-86b7-1e7703b60970', '66e7e4bc-b04c-4678-a151-00f60806adf4', '<p><span style=\"color: rgb(0, 0, 0);\">Line 14</span></p>\n', 1),
('3f07cfa5-0a16-451c-9f63-90a4b71dcd83', '0fe541b4-b569-461d-95dc-3f481c037578', '<p><span style=\"color: rgb(0, 0, 0);\">error</span></p>\n', 0),
('3f26433b-2571-45c7-bd71-a7cf81290d0e', '8baf05e4-839d-4000-8bec-0b060ee79010', '<p><span style=\"color: rgb(0, 0, 0);\">BBE</span></p>\n', 0),
('3f318c74-3ca3-4fde-8bb7-85601c3b0a4e', 'ea4928f3-b9db-409d-9b41-652a7c29a18a', '<p><span style=\"color: rgb(0, 0, 0);\">none of these</span></p>\n', 0),
('3f97c81f-a4bc-4ac3-9e32-d1970bf782d6', '3d7f4959-cc33-4ec7-a0df-be440f033e68', '<p>False</p>\n', 1),
('3fdb7446-f82c-4648-a5fd-bbe682583363', '4c513303-bc22-4e1d-a6d8-59d29d89f615', '<p>2</p>\n', 0),
('4007416b-9ca2-47d9-8eee-e14281088b54', 'bba85f8a-b0f8-4da6-b838-9b9a099667e8', '<p><span style=\"color: rgb(58, 58, 58);\">Serpent</span></p>\n', 0),
('405ce493-17ce-492a-9554-fa3304820758', '196cb202-2bcb-4662-9a33-8443184e8e41', '<p><span style=\"color: rgb(0, 0, 0);\">Calling the SetPriority() method on a Thread object.</span></p>\n', 0),
('4066b2df-f011-4fb2-bc07-c3a92ca9cb93', 'f033ba2b-7979-4a4a-8457-4c1881af4e64', '<p><span style=\"color: rgb(0, 0, 0);\">Whether a reference should be de-referenced or not depends on the type of the reference.</span></p>\n', 0),
('4068d3a0-820f-4786-8b92-173a2348a8a6', 'c2471e9e-8556-4f79-ab89-a5483142d378', '<p><span style=\"color: rgb(0, 0, 0);\">4,4,4</span></p>\n', 1),
('406e905b-8ab9-4154-bd1f-f4cff229f3b0', 'fac6f8af-5dbe-4f68-859f-2e976a34ce9e', '<p>Thin</p>\n', 0),
('4076cafe-6781-4bab-ab86-8c9cc268276d', 'b33a66e1-11df-4160-bf45-11cc581c8878', '<p><span style=\"color: rgb(0, 0, 0);\">Both A and B.</span></p>\n', 1),
('40964c68-1dba-46da-a0c1-eaffe4186509', '8c4c9829-2484-4452-aaa5-ff89691ffaf9', '<p><span style=\"color: rgb(0, 0, 0);\">Left-right</span></p>\n', 0),
('40abe6f6-a686-4ba5-b43c-656db996bc14', 'bc0d0e92-5a75-4a0c-b71d-c88bc12069aa', '<p>Rounds</p>\n', 0),
('40ac16ab-119f-4acf-ad0c-74f85988e25c', 'd0ce266f-5e20-4189-8d9a-86c2e135d8ae', '<p><span style=\"color: rgb(0, 0, 0);\">2 and 6</span></p>\n', 0),
('4100a83b-49af-44e1-8771-5bf146ad5e02', '80116422-6102-41fe-a39d-72ea96de9433', '<p><span style=\"color: rgb(0, 0, 0);\">float *(*ptr)(int*)</span></p>\n', 1),
('41204bae-abb2-45c7-a649-aea56983b151', '5ef52068-1d5b-448d-93af-216fffd427ef', '<p><span style=\"color: rgb(0, 0, 0);\">A reference is indicated by using &amp;&amp; operator.</span></p>\n', 0),
('4144e313-09d6-442e-a6f1-4e6b32fffb8e', 'cf47b14d-a23a-41e1-8af4-4b820f70164d', '<p><span style=\"color: rgb(0, 0, 0);\">1200,1200,1200</span></p>\n', 1),
('41508a82-2f62-4ea7-a776-be176ca73524', 'ff3a6737-f9ef-40c7-8ed1-0b29695d0fc0', '<p>-</p>\n', 0),
('419c019d-7794-4eb8-860f-d90f69746d3a', 'bee079ca-ab87-4350-aae5-2761bb906c64', '<p><span style=\"color: rgb(0, 0, 0);\">BCD</span></p>\n', 1),
('41e309ef-b278-4313-b516-662d43509ecf', '87961a90-d2d8-4c3e-91bc-b5866c2e4566', '<p><span style=\"color: rgb(0, 0, 0);\">It prints \"Fred\".</span></p>\n', 0),
('41ff4c60-24e7-4870-b162-15ca1f2ab137', '41a58626-c56c-43ef-a3ec-0494b8ab70c0', '<p><span style=\"color: rgb(0, 0, 0);\">tiny</span></p>\n', 1),
('4288f2ad-f9f3-46d8-880c-e9a42aad067a', 'a50d87fd-3c37-45dc-9b7e-730e4c19f426', '<p><span style=\"color: rgb(0, 0, 0);\">arr is a array of function pointer.</span></p>\n', 0),
('429bb62a-be4a-45d7-9652-c15c7e5e7f5a', '7904cb02-22a4-4e63-ba11-7852f41343a0', '<p><span style=\"color: rgb(0, 0, 0);\">14 14</span></p>\n', 0),
('42d66f1a-8e7d-428e-aea8-2689d7a24a4d', '84d8768c-cb94-498c-93fd-c1f89af08c90', '<p><span style=\"color: rgb(0, 0, 0);\">It prints \"foobarhi\"</span></p>\n', 1),
('42e6eb82-e916-4fa9-a2b4-1568ba28b5df', 'bba3169a-eab7-4e53-ad26-53da07863940', '<p><span style=\"color: rgb(0, 0, 0);\">Java.util.Map</span></p>\n', 1),
('43165eac-e8a0-4f69-b568-7e340407e30e', '8baf05e4-839d-4000-8bec-0b060ee79010', '<p>BBB</p>\n', 0),
('431c7b93-2446-4a00-8f3d-ce4d258078d4', '533ddb28-1a7e-4d65-9261-89385b0b4187', '<p>void com.test.service.account.MyServiceImpl#transfert(Money amount)</p>\n', 0),
('43288f4a-8a62-45df-8bca-3bdcbc7dd10c', '8ad8976b-ab4b-4c8d-8df5-9561c01f9f63', '<p><span style=\"color: rgb(0, 0, 0);\">After the start() method completes</span></p>\n', 0),
('438c3ef8-f89a-497d-8bd7-13f03e394cb6', 'c7291bb0-18e6-4c84-a804-a488cf4f600e', '<p>t<span style=\"color: rgb(0, 0, 0);\">wo groups</span></p>\n', 1),
('4392d13e-fa1d-4124-af45-ebc13558fbf7', '1c129c2c-fe24-4c2f-95f7-b414217628ee', '<p><span style=\"color: rgb(0, 0, 0);\">char p = *malloc(100);</span></p>\n', 0),
('43a3913a-4b0d-4f31-a3e2-40652ae71d47', '9e5d778a-b338-46fa-88f7-8e4a63601293', '<p><span style=\"color: rgb(0, 0, 0);\">Friend constructor</span></p>\n', 1),
('43f4990c-6752-4e44-b49d-123cbf630501', 'f369b3f8-96f1-4d1f-8dac-9a75466429b1', '<p><span style=\"color: rgb(0, 0, 0);\">An array of references is not acceptable.</span></p>\n', 1),
('4402acaa-21f5-448c-809a-68fc916eaec2', 'd2ca9fcc-b531-4f5c-8871-4492768b419a', '<p><span style=\"color: rgb(0, 0, 0);\">!</span></p>\n', 0),
('4414a188-65f2-4780-9336-701b347432f8', '7481f7dc-1ab2-4fd4-9820-aa937343e56b', '<p><span style=\"color: rgb(0, 0, 0);\">By declaring it abstract using the virtual keyword.</span></p>\n', 0),
('4416e26e-0d9b-4d2e-b6de-4230aeaaa5b2', '0e5a5173-cdc6-4b73-a39d-396c0d220374', '<p>Data Size</p>\n', 0),
('4421706b-2688-4af1-bbcb-6d04a65ae22a', 'e19804a7-200b-4652-81b5-8989fc59eca1', '<p><span style=\"color: rgb(0, 0, 0);\">just after line 8</span></p>\n', 0),
('44290dc0-b779-42ee-8958-5bc3531a70ac', 'bc0d0e92-5a75-4a0c-b71d-c88bc12069aa', '<p>Cipher</p>\n', 0),
('44939ca3-99dc-4a03-8e1b-d4d4e44e1463', '2304d08a-9266-468d-bb87-e16e12f21c50', '<p><span style=\"color: rgb(0, 0, 0);\">Classes cannot have data as protected members.</span></p>\n', 0),
('44a48cdc-ff33-4299-bb91-3b3b9e48ebf9', 'ac944f01-eb77-42d2-a9a2-2db2f2fb0cf0', '<p>The execution of all public method in class belonging to the default java package</p>\n', 0),
('44f2d089-335d-437d-b1fc-9ef31af4a344', '17c9a576-4af8-4d6b-9662-0b3771e50109', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.TreeSet</span></p>\n', 0),
('44fa826b-4eaa-4925-b647-b36db28fbc1a', '99c1fc9a-32d6-4eca-a788-6b4dd8e805fd', '<p>7</p>\n', 0),
('4562ff29-50fe-4c04-83b6-6b88b95c2148', 'ae069b2b-a594-4d86-8d8d-3ad8da065342', '<p>-</p>\n', 0),
('46489e8c-da72-4b01-b125-549718153c7e', 'c4bce0ab-3379-451d-a907-a75db166300a', '<p><span style=\"color: rgb(0, 0, 0);\">Boo f = new Boo.Bar(String s) { };</span></p>\n', 0),
('464e9156-2d92-4ad2-915d-36e12a83ebf4', '79b212f4-c0d0-4d74-b06f-eaecdd1ca27a', '<p>Data</p>\n', 1),
('466c788e-9ed4-418d-98a2-393dfe2bce37', 'e76565e1-009f-46f6-8017-efccbd01dba5', '<p><span style=\"color: rgb(0, 0, 0);\">After line 9</span></p>\n', 0),
('467ed422-b56f-4a4e-9fe4-0bf7bf806024', '4799b43f-71bf-4de0-b429-dd1b5b7fc6b1', '<p><span style=\"color: rgb(0, 0, 0);\">Overloaded functions always return value of same data type.</span></p>\n', 0),
('4681c367-877c-4289-9374-c9af0c60e101', '9902fcb3-21d2-4cdc-b7e5-2f107d63fb57', '<p><span style=\"color: rgb(0, 0, 0);\">start();</span></p>\n', 1),
('46975475-e6d9-49cf-8451-e8e73176b324', '899ce371-3a99-4773-a84d-641a3f2702e9', '<p>three</p>\n', 0),
('46b668ec-8e9f-4789-895e-ea825a9141a0', '423d0c00-55e9-421f-bb94-60d723008a53', '<p>-</p>\n', 0),
('46c298d7-011d-482b-8ea2-44cf1ce4d8e6', '20d0a3e4-6c45-4de7-821a-f1562636ae4a', '<p><span style=\"color: rgb(0, 0, 0);\">A variable that stores address of other variable</span></p>\n', 1),
('46c54151-a530-4ec6-ae37-81c1109d9445', 'ce086ceb-f9ae-4931-9ee5-e78a57e80bf9', '<p><span style=\"color: rgb(58, 58, 58);\">Wired Personal Access</span></p>\n', 0),
('46cdf0a2-f641-44c3-8b07-1a17739d601d', 'b2b7bbcf-b532-4a21-bc96-9b52d8b4fcf9', '<p>7</p>\n', 0),
('46fc980f-b496-4756-b570-fbd286c67999', '242f678d-c55e-4203-b28e-cc361350e933', '<p><span style=\"color: rgb(0, 0, 0);\">can be overloaded</span></p>\n', 1),
('47572d8d-7a4f-4f35-910a-8d38a39171a7', '899ce371-3a99-4773-a84d-641a3f2702e9', '<p>no</p>\n', 1),
('4761c55a-a951-4b51-909d-37237d7d45da', '66d2b74a-54af-4cbc-acde-d45a3a011afc', '<p><span style=\"color: rgb(0, 0, 0);\">15 15</span></p>\n', 1),
('47b2b890-d7ec-4318-b275-88326fe624eb', '198bbfd5-0f7a-47f6-a53b-df13da867262', '<p><span style=\"color: rgb(0, 0, 0);\">Error</span></p>\n', 0),
('47c810ed-12ab-45da-af0f-9a5e48d3c4cc', '7c8397ee-c948-4bc1-894c-f5a309d72197', '<p><span style=\"color: rgb(0, 0, 0);\">We can provide a default value to a particular argument in the middle of an argument list.</span></p>\n', 1),
('481c7762-c363-4159-899b-42bcbe5edaa0', '9931f538-e6c2-4951-93bf-5d1d64d26d2a', '<p><span style=\"color: rgb(58, 58, 58);\">Accidental Association</span></p>\n', 0),
('48313848-2de1-4cbb-8792-e781913469fc', '1f43a0b2-87aa-4d6a-91aa-0f26a9ff06e6', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,3</span></p>\n', 0),
('4848cf84-4f17-40eb-b5ac-f531e8343105', '2f55f179-55b6-4e54-bc03-ab78558c28ba', '<p><span style=\"color: rgb(0, 0, 0);\">pf is a pointer to function.</span></p>\n', 0),
('4850b66a-88c1-41d7-a8cd-87b996ac30a8', '30f09c42-1ad0-4478-b022-867f637ec317', '<p>4</p>\n', 0),
('48a80a68-96b2-431a-b6a3-7822c359d011', '890a50c2-fb7c-4ed7-94a8-9022f4c9f551', '<p><span style=\"color: rgb(0, 0, 0);\">are constructed</span></p>\n', 0),
('499e5424-044b-4d50-8d5b-476b4b61fa8a', '584b5e7f-ad40-4f23-8543-120500a58384', '<p><span style=\"color: rgb(58, 58, 58);\">10 ; no</span></p>\n', 0),
('49a49c8f-088b-4c02-b8f7-236eb4ba7a14', 'bee079ca-ab87-4350-aae5-2761bb906c64', '<p><span style=\"color: rgb(0, 0, 0);\">BDE</span></p>\n', 0),
('49f1ece0-2029-467a-9993-04cb1f40e519', '0297c903-0e7b-4152-bffc-d71a572ef1a2', '<p>30</p>\n', 1),
('4a6f8d07-ffab-4363-85b3-da5af6df3b0b', '790ed3fe-84db-406f-8398-f7bd0a9363e0', '<p>n</p>\n', 1),
('4aa8755f-9752-414e-b5a9-ef2c7c0a065f', '176d6148-dea3-4472-a96c-963d199fca6f', '<p>C<span style=\"color: rgb(0, 0, 0);\">ipher text</span></p>\n', 1),
('4ab933cd-0cde-4c96-9a8a-881dce14c0ac', '1fdbaafd-3b2c-40ac-bcc1-90875bfd099e', '<p><span style=\"color: rgb(0, 0, 0);\">A reference is stored in a queue.</span></p>\n', 0),
('4ac82534-125c-4057-ae29-7d41fcd489c6', 'c2471e9e-8556-4f79-ab89-a5483142d378', '<p><span style=\"color: rgb(0, 0, 0);\">2,2,2</span></p>\n', 0),
('4ae25616-3ac6-4198-bfec-267cb307eebd', '52f03634-86b9-4b8c-813d-88eba7eab87c', '<p><span style=\"color: rgb(0, 0, 0);\">Friend function can access public data members of the class.</span></p>\n', 0),
('4ae30012-9c1f-4195-b28b-a52797a9b48f', '4087e203-cbbc-4382-8a71-7124b31c1059', '<p><span style=\"color: rgb(0, 0, 0);\">i = 6 and j = 5</span></p>\n', 0),
('4aee592d-6129-46d5-b1e8-707149dad42a', '52f03634-86b9-4b8c-813d-88eba7eab87c', '<p><span style=\"color: rgb(0, 0, 0);\">Friend function can access private data members of the class.</span></p>\n', 0),
('4b5f2ff6-ebbe-4c88-b2c9-d0684a6d803b', '4ef74cda-cbad-47a3-9f31-2af0a0039cdd', '<p><span style=\"color: rgb(58, 58, 58);\">ii) iii) and iv)</span></p>\n', 1),
('4b81d313-8e85-4088-b6ec-34098829cc3f', 'e640b581-70e9-4876-bed6-979e0020c257', '<p>Filled Text</p>\n', 0),
('4b96937a-b948-474e-921d-d32ea3d9d7a0', '3157f4cb-1542-40cb-ac7c-7c392a96222e', '<p><span style=\"color: rgb(58, 58, 58);\">Multi-alphabetic Cipher</span></p>\n', 0),
('4bd528e3-8bd8-492e-992d-57eefeb57956', '71b0ecfc-c30b-441f-a9ce-813b5cc64f01', '<p>3</p>\n', 0),
('4c13358c-d33e-4687-9439-80318cdd20cf', '9d7139a0-90e1-4ac9-a5fe-307aeb603c9e', '<p><span style=\"color: rgb(58, 58, 58);\">A scheme in which the password is passed through a PRF, which is then stored</span></p>\n', 0),
('4c2f1f9f-f5f8-4a85-a24a-71b2b4e4adb6', '18fa0c62-31b5-4a88-8430-9f2bf4656a25', '<p>-</p>\n', 0),
('4c310277-bcce-448d-9463-a47ed6144afa', '3750c3b3-5ad8-48ca-9efe-b818013d4866', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.HashMap</span></p>\n', 0),
('4c3bfdf9-f3f6-4208-a3b0-94efa22048b3', 'ae069b2b-a594-4d86-8d8d-3ad8da065342', '<p>-</p>\n', 0),
('4c8a2666-1fd3-423e-a15b-8ffb71b4a40f', '2291d61d-ea1f-44b8-b3d5-effdbdb15673', '<p>R<span style=\"color: rgb(0, 0, 0);\">ound ciphers</span></p>\n', 1),
('4d8ba824-ee7d-48dc-aa63-cc10a95760f6', '5a960629-a10b-4e13-9cc5-09f3524a473d', '<p><span style=\"color: rgb(0, 0, 0);\">A private data member can be declared as a friend.</span></p>\n', 0),
('4ddf5809-80b3-4acf-99b5-4ba800bda3ff', 'f1e65d34-919d-4f09-92be-4de4485b340f', '<p><span style=\"color: rgb(0, 0, 0);\">ABCD</span></p>\n', 0),
('4dee4d60-2afc-4fd8-9b22-fb8cf2a81c28', '2aa3a438-9382-499b-82ed-30c279f3651d', '<p>14</p>\n', 1),
('4e25fc70-0298-4ad5-84d5-35bfae0d97ed', 'e555a426-2862-43d6-9848-3dd90cc431f0', '<p>4</p>\n', 0),
('4e3aac15-2bfc-4d9d-9fa3-a433b3fdaafd', '1be3d7f7-3260-462a-91d9-ab3703c473ad', '<p><span style=\"color: rgb(0, 0, 0);\">Only 1 is correct.</span></p>\n', 1),
('4e4313cd-4276-432b-b52a-0c7c56d14c68', '7218096a-30cf-47fa-bdb6-4d3197c445b9', '<p><span style=\"color: rgb(0, 0, 0);\">11,5,11</span></p>\n', 0),
('4e5bc4c7-6e53-453a-b020-6ff220b71bf6', '619875da-75a2-420e-8efb-ab888e5a9d37', '<p><span style=\"color: rgb(0, 0, 0);\">wait()</span></p>\n', 0),
('4e674c9e-1cc9-4cb8-9b59-39b7115f0ada', '7c58fc55-56bd-40f2-b71e-9a7ebe5ac56e', '<p><span style=\"color: rgb(0, 0, 0);\">Dynamic binding</span></p>\n', 1),
('4e77a867-e9f3-46fa-bc60-09c4242bffcf', '2aaadbba-6513-4195-8c86-b88eae5aa6e5', '<p>Combination of pointcuts by &amp;&amp;, || and the ! operators is not supported</p>\n', 0),
('4e77b527-05d2-47a6-88f3-95c3c685008c', 'd16c1a0f-0f5c-418d-a664-4df03e59d63b', '<p><span style=\"color: rgb(0, 0, 0);\">new Thread(MyRunnable).run();</span></p>\n', 0),
('4e79f79b-1f8f-412b-9dc7-99d3d790505d', '077fdade-a412-4b88-a5a4-4003b3a02420', '<p>Both 1 and 2 are incorrect.</p>\n', 1),
('4e9493b6-08ca-4d49-a9b3-ce45d0bb7138', 'ff3a6737-f9ef-40c7-8ed1-0b29695d0fc0', '<p>False</p>\n', 0),
('4e9baf08-234f-4c8d-a031-4e60762d0e56', 'ce8ac650-a7ff-49e5-af0f-4a04d18be4e7', '<p><span style=\"color: rgb(0, 0, 0);\">Abstraction</span></p>\n', 0),
('4ea380bd-124a-43de-abe9-ce3f3618a1af', 'c496f124-ba4d-4b52-bd5c-0e276dda577e', '<p>AC</p>\n', 0),
('4eb818fc-5c0d-4dec-832e-42f761d8ba82', 'ae069b2b-a594-4d86-8d8d-3ad8da065342', '<p>True</p>\n', 0),
('4ecb707f-a357-476a-bcd3-61b9b799741c', '28343bad-2ee2-498f-81b3-2cd9f90ddfa1', '<p><span style=\"color: rgb(0, 0, 0);\">2,3,1</span></p>\n', 0),
('4f0383fd-140d-4469-8762-71bdaa2f6828', 'ea1e9589-a40d-4098-b2d5-92069713050f', '<p><span style=\"color: rgb(58, 58, 58);\">36 words</span></p>\n', 0),
('4f347b9c-9a8e-4334-b8bd-6fab37dad48e', '7e826e02-3c47-421e-b261-c86b37f0d65a', '<p><span style=\"color: rgb(0, 0, 0);\">after line 15, when main() completes</span></p>\n', 0),
('506a0b8f-6981-4c91-a427-d9f478642fe7', '2304d08a-9266-468d-bb87-e16e12f21c50', '<p><span style=\"color: rgb(0, 0, 0);\">Structures can have functions as members.</span></p>\n', 1),
('518e9821-46d5-41c8-8eb8-4006581eb7fc', 'c2471e9e-8556-4f79-ab89-a5483142d378', '<p><span style=\"color: rgb(0, 0, 0);\">2,4,4</span></p>\n', 0),
('51f5760c-ae6d-418c-9ccf-62b8378092dc', 'e0c1b186-b48d-407f-8fb3-3dd05f6f30fa', '<p><span style=\"color: rgb(0, 0, 0);\">A function if overloaded more than once cannot have default argument.</span></p>\n', 0),
('523cb39f-1cc3-4bf3-8b9c-1716ad5eb609', '76d0fc55-6800-4fb7-a851-6af402f10d85', '<p><span style=\"color: rgb(0, 0, 0);\">2,8</span></p>\n', 0),
('5248571b-7350-4a66-8385-5b0880fb9722', '5ef52068-1d5b-448d-93af-216fffd427ef', '<p><span style=\"color: rgb(0, 0, 0);\">Once a reference variable has been defined to refer to a particular variable it can refer to any other variable.</span></p>\n', 0),
('524dc08f-8917-4409-9d2c-459e4fa91710', '399f009c-57ac-4b26-9274-263263cf10b6', '<p>k</p>\n', 1),
('52801c13-0cac-4d75-93e6-3b403336d4a3', '7d751a6e-5233-4ba8-9e1a-a8333509d844', '<p>C<span style=\"color: rgb(0, 0, 0);\">aesar cipher</span></p>\n', 0),
('529554d3-ba98-4198-b7fb-fc92acc7eace', '1891aa80-0d8c-4204-bfcb-13f456c761dd', '<p><span style=\"color: rgb(0, 0, 0);\">value = 4</span></p>\n', 0),
('52c1bb39-fad3-457a-b686-3d943ebca6f2', '8e47c529-dc2c-431d-85dd-e681f150c82d', '<p><span style=\"color: rgb(0, 0, 0);\">Operators</span></p>\n', 0),
('53851b47-b31a-4f16-8603-2acc592221cf', 'cf47b14d-a23a-41e1-8af4-4b820f70164d', '<p><span style=\"color: rgb(0, 0, 0);\">1300,1200,1500</span></p>\n', 0),
('53989c21-81ec-4845-93eb-7cc91ab429c3', 'd45b9106-7c6a-42a0-a6e0-c104a80889d4', '<p><span style=\"color: rgb(0, 0, 0);\">Only 2 is correct.</span></p>\n', 1),
('53e08bd0-fad1-4ca8-954b-1f4832993327', '524eebd2-6eb0-47f2-9664-ea0c206837cf', '<p><span style=\"color: rgb(0, 0, 0);\">0x80000000 and 0x00000001</span></p>\n', 0),
('545be8c4-de4a-4dbb-aac4-5bb9f2335106', '3ec25e9b-4cf1-47e9-9cc2-c0b44b22c57d', '<p><span style=\"color: rgb(0, 0, 0);\">near=2 far=4 huge=8</span></p>\n', 0),
('5462f2b6-4353-483a-ad25-d52cdbe78f56', 'e0c1b186-b48d-407f-8fb3-3dd05f6f30fa', '<p><span style=\"color: rgb(0, 0, 0);\">All arguments of an overloaded function can be default.</span></p>\n', 1),
('547f1da6-e94f-42f2-bd6a-2770fa0c4aca', 'b36c2012-4724-4174-bc77-b896cadd4578', '<p><span style=\"color: rgb(0, 0, 0);\">Runnable r = new Runnable(public void run() { });</span></p>\n', 0),
('54afef41-88bf-474e-8542-a0a8cbd5b038', '531a7e26-8941-497a-b2b1-7932aa79e8e5', '<p>False</p>\n', 1),
('54b05794-d01a-4a6f-b755-aa75c7350a9f', '1ea2d422-f6ec-44e9-9b0b-dd4bb7998814', '<p><span style=\"color: rgb(0, 0, 0);\">Destructor of base class should always be static.</span></p>\n', 0),
('54cfcbdc-d751-453b-b21d-652679077ac9', 'ee9c5618-a5d6-4a19-9c86-cbbdf7473677', '<p>Single Party</p>\n', 0),
('55c21503-6c40-4dd7-b2b8-2e6c81059fdd', '96e0f0b7-9758-4a0c-aff2-e126b0a812e2', '<p>Others</p>\n', 0),
('55e4216e-d526-43e8-b1d7-3fbaa042e4ee', 'd45b9106-7c6a-42a0-a6e0-c104a80889d4', '<p><span style=\"color: rgb(0, 0, 0);\">Only 1 is correct.</span></p>\n', 0),
('5633b640-639c-406b-936b-95f940c0444a', 'ded1a528-d5ec-4307-84bf-303c6a5b718f', '<p>E<span style=\"color: rgb(0, 0, 0);\">lectronic Code Book</span></p>\n', 1),
('56365ba1-ad4a-49bc-9637-fc3c249875ce', 'f706fdd5-ce7a-4982-89b8-db4f5984eda8', '<p><span style=\"color: rgb(0, 0, 0);\">1,6</span></p>\n', 0),
('563dfe1f-d020-4fc3-ba95-e8e0253594e3', '80be3ee9-500d-4ae2-9c82-c560e2be3d57', '<p>private key</p>\n', 0),
('56421b7e-02fb-401e-8868-c24809e11394', 'eb70aee0-3931-4e3c-982f-c39907fd0c4d', '<p><span style=\"color: rgb(0, 0, 0);\">catch ( Exception e )</span></p>\n', 0),
('5642c318-0d68-4ccc-9a85-46b98a444836', '447549cc-b15f-461d-848d-6c082c980fea', '<p><span style=\"color: rgb(0, 0, 0);\">j = 1</span></p>\n', 0),
('569bd75a-7a83-42e6-8009-8a6756b23c2b', '87961a90-d2d8-4c3e-91bc-b5866c2e4566', '<p><span style=\"color: rgb(0, 0, 0);\">Compilation fails</span></p>\n', 1),
('56ff17e1-355b-4267-8730-56b97107b0aa', '308839d1-bb63-4629-977c-faf1a8a0aa7f', '<p>Listing entity classes annotated with @Entity</p>\n', 0),
('5707349a-1caa-4d07-a813-2e360933e16b', '34ceb489-65b7-42ad-a670-ce40cfef106d', '<p><span style=\"color: rgb(0, 0, 0);\">hashmap</span></p>\n', 0),
('572e68ec-2b1a-498c-85f0-a0f08b49dc5b', '1f43a0b2-87aa-4d6a-91aa-0f26a9ff06e6', '<p><span style=\"color: rgb(0, 0, 0);\">1,4,5</span></p>\n', 0),
('578730f2-38f9-41ef-9283-eb4f0fd150a5', '196cb202-2bcb-4662-9a33-8443184e8e41', '<p><span style=\"color: rgb(0, 0, 0);\">Calling notify() method on an object.</span></p>\n', 1),
('57bba819-a7bf-4201-8377-8f1308763a34', 'b04a8071-8156-48c7-9717-d5a85c8248d8', '<p><span style=\"color: rgb(0, 0, 0);\">\"odd\" will be output for odd values of x, and \"even\" for even values.</span></p>\n', 0),
('57cbe332-b158-4cbf-92c0-dcc6740c7712', 'd52b0536-cc2e-4f1a-891a-b9d4c64d613c', '<p><span style=\"color: rgb(0, 0, 0);\">class</span></p>\n', 0),
('58281c09-679a-4652-82b4-eb32291c7e28', 'b04a8071-8156-48c7-9717-d5a85c8248d8', '<p><span style=\"color: rgb(0, 0, 0);\">\"even\" will always be output.</span></p>\n', 0),
('5854885f-c8df-4522-9e1d-0d8e57d4c7cb', '4ef74cda-cbad-47a3-9f31-2af0a0039cdd', '<p><span style=\"color: rgb(58, 58, 58);\">i) only</span></p>\n', 0),
('58586ee2-7867-41db-865d-69c63d493bd0', '65b6193b-2d89-4d74-840c-e4e9734e72ef', '<p><span style=\"color: rgb(0, 0, 0);\">1,4,5 and 6</span></p>\n', 1),
('588606d7-d2db-4333-89af-fcad3006dfe5', '913b6120-f42a-4e9d-9dab-25e820cfc1e1', '<p>It will not compile because class body of Peacock is not defined.</p>\n', 0),
('5904b376-e63c-499c-a00e-fdfa606368f0', '6bcd2e5d-4ecc-4f7c-9673-6a4c4c822c2b', '<p>10 bits</p>\n', 0),
('5916e3d7-f2d9-4019-8c9a-453a4022a395', 'afd657e2-d410-4a9a-8a15-3bc291dbecea', '<p>10</p>\n', 0),
('59332338-1f30-47d2-8e3a-26357681c624', '910e0026-671e-4ea7-bedd-57997b5e5f91', '<p>s<span style=\"color: rgb(0, 0, 0);\">hared</span></p>\n', 1),
('594a029c-0276-449f-9308-eca87657ee9b', 'eeca8ea1-0c10-4ad1-8d87-dfb2eaeaaac0', '<p><span style=\"color: rgb(58, 58, 58);\">9AD</span></p>\n', 1),
('59c1db20-8e14-46b4-8925-50ff79dbc323', '243a91a1-7c5d-46af-9a5f-5a4d58f85266', '<p><span style=\"color: rgb(0, 0, 0);\">It can extend exactly one class and can implement multiple interfaces.</span></p>\n', 0),
('59d2240a-4bfa-4625-ac81-7d5276b9bc31', '84d8768c-cb94-498c-93fd-c1f89af08c90', '<p><span style=\"color: rgb(0, 0, 0);\">an error occurs</span></p>\n', 0),
('5a217642-663d-4286-9da5-eb353161c23f', 'ff5f02b9-c3f0-4523-98f4-020baf45e091', '<p>float</p>\n', 0),
('5a412434-7555-4327-905c-f70715d74020', '206a984d-c83e-4002-977a-a30f35311af3', '<p>block of packets</p>\n', 0),
('5a5578d0-6947-4931-8b87-0af3bd3aa5a2', '308839d1-bb63-4629-977c-faf1a8a0aa7f', '<p>All above</p>\n', 0),
('5a5768f5-abfb-4a26-b194-8e7bc89cb88b', 'c875e858-e90d-4555-99d5-f028657f3ce3', '<p>Defend</p>\n', 0),
('5a5db1bd-4f02-4da0-9f26-dc754a8ac88c', '20d0a3e4-6c45-4de7-821a-f1562636ae4a', '<p><span style=\"color: rgb(0, 0, 0);\">A keyword used to create variables</span></p>\n', 0),
('5ab0ca0d-305d-43c4-ba21-35e525a30a66', 'c39b735b-3dd5-408a-ba24-5f6ce096f509', '<p><span style=\"color: rgb(0, 0, 0);\">6 4</span></p>\n', 0),
('5ab53b93-25be-472b-9205-00a201c94188', 'c237ee18-4031-4f40-83b4-9183d41b8b30', '<p><span style=\"color: rgb(0, 0, 0);\">run();</span></p>\n', 1),
('5b144fb0-9451-42f0-bfb4-b12026f672eb', '9e8583dc-1815-4287-abda-e8679e4292e6', '<p>Submit</p>\n', 0),
('5b48ee7f-9e73-4ddf-a513-0985ec9ee3e3', 'b2643b84-3154-4279-8cbb-d9586a770e85', '<p><span style=\"color: rgb(0, 0, 0);\">Static function</span></p>\n', 0),
('5b80de29-da86-42a3-8648-3f1ebab1fb13', 'eeca8ea1-0c10-4ad1-8d87-dfb2eaeaaac0', '<p><span style=\"color: rgb(58, 58, 58);\">DAD</span></p>\n', 0),
('5b9f4a3c-e8e4-4668-94dc-d10f03b1592b', 'fd98ac26-a592-41d9-bc84-1afb240ba084', '<p>cmp is a pointer to an void function type.</p>\n', 0),
('5c2493a9-d3ee-4d20-9129-c59ef6b1302c', '2220c5d6-60a5-40f4-890d-a5d6a92e0bcb', '<p>A point during the execution of a program</p>\n', 0),
('5c3ae8e0-286f-49f0-850d-27d176f32c01', '6e5146f8-bb17-481b-9748-dd3c300dae40', '<p><span style=\"color: rgb(0, 0, 0);\">Error: cannot convert parameter 1 from \'const int **\' to \'int **\'</span></p>\n', 1),
('5c408b6f-0bc7-401f-9a97-9085e1952880', 'f6e76ebe-9e06-4c3f-a99c-b9290b576d17', '<p>M<span style=\"color: rgb(0, 0, 0);\">ulti Party</span></p>\n', 0),
('5c8619ef-c9e0-4dd5-b6d8-ec0f6bcafceb', '6026287c-3c29-4b96-93ad-93a679e106b4', '<p>-</p>\n', 0),
('5cde7bfe-5524-493b-9081-30a6b7a8c5f4', '9e5d778a-b338-46fa-88f7-8e4a63601293', '<p><span style=\"color: rgb(0, 0, 0);\">Copy constructor</span></p>\n', 0),
('5d2787df-4441-423a-8225-957895ce45a6', '765ce8ef-18e7-465e-86cd-226efbb1b1ee', '<p><span style=\"color: rgb(0, 0, 0);\">6,3,2</span></p>\n', 0),
('5d3f0be7-221c-4a04-a33a-10265a6d0c5a', '206a984d-c83e-4002-977a-a30f35311af3', '<p>b<span style=\"color: rgb(0, 0, 0);\">lock of signals</span></p>\n', 0),
('5d45a1c8-0a20-4fa4-9b19-1f4e15e5af79', 'c4bce0ab-3379-451d-a907-a75db166300a', '<p><span style=\"color: rgb(0, 0, 0);\">Bar f = new Boo(String s) { };</span></p>\n', 0),
('5da65b0c-66e2-464f-97c0-5be6d867349e', 'dee34d3d-37c5-4e82-828f-091bedae5dd9', '<p><span style=\"color: rgb(0, 0, 0);\">Asm</span></p>\n', 0),
('5dab5b11-6027-4d85-a435-601bfbed54c0', '00f89d07-f5eb-46d6-bfa0-79ca7810086f', '<p><span style=\"color: rgb(0, 0, 0);\">after line 7</span></p>\n', 0),
('5e040786-b7c5-4767-a736-330d51b67a78', '6621a40a-7e9b-448d-8e23-8bc853b9b6b8', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 3</span></p>\n', 0),
('5f2d6935-8db7-462e-b902-b63d2d524770', '7e826e02-3c47-421e-b261-c86b37f0d65a', '<p><span style=\"color: rgb(0, 0, 0);\">after line 12</span></p>\n', 0),
('5facc7f4-f88d-4b02-a457-58355c6ed1a7', '18fa0c62-31b5-4a88-8430-9f2bf4656a25', '<p>No</p>\n', 0),
('5fb474e1-e067-4830-a81f-db74d06c5348', '99d5a8bf-4fe9-4289-81ae-3ee84b62b381', '<p><span style=\"color: rgb(0, 0, 0);\">junk</span></p>\n', 0),
('5ff25046-cbec-4694-89e8-c21aec552c56', '7481f7dc-1ab2-4fd4-9820-aa937343e56b', '<p><span style=\"color: rgb(0, 0, 0);\">By making at least one member function as pure virtual function.</span></p>\n', 1),
('60306d90-368b-4f8a-b9b7-2bd3cca92621', '0fcc2fed-debd-4713-98ad-d22f8eccd462', '<p>Transmission</p>\n', 0),
('603bb947-3e63-4248-934b-59113b5443b9', '423d0c00-55e9-421f-bb94-60d723008a53', '<p>True</p>\n', 1),
('608677a3-2038-4994-ac4b-0b7250fc0860', 'e4064b35-e49e-404a-9bd5-d81ae5d4c0bb', '<p><span style=\"color: rgb(0, 0, 0);\">&amp;</span></p>\n', 0),
('60e0b01f-cef0-44c2-8e9a-67ae3a6dcad3', '22c8c4e3-8004-4f7a-a886-bc958b03d27c', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are correct.</span></p>\n', 1),
('6153263e-c000-4c60-a767-e5d489ee22fa', '1f6c7a3a-d55d-47be-b51d-a80c5dc1e595', '<p><span style=\"color: rgb(0, 0, 0);\">A class object and a member of that class.</span></p>\n', 1),
('616b6c84-1e7f-416f-b975-b75309eef08f', 'bc0d0e92-5a75-4a0c-b71d-c88bc12069aa', '<p>Encryption</p>\n', 0),
('616c72b6-094a-41bb-a926-10f7980078a5', 'e857bb8f-9626-4b99-baf2-a840a3a43a4f', '<p><span style=\"color: rgb(58, 58, 58);\">O(log n)</span></p>\n', 0),
('617e983f-0907-4450-afe6-3c98c6fa5658', '5a307b74-35cb-4282-9095-f9b477970c1a', '<p><span style=\"color: rgb(58, 58, 58);\">Ad Hoc Networks</span></p>\n', 1),
('61a6e626-310c-4b5f-8bf3-5dffe59865ee', '765ce8ef-18e7-465e-86cd-226efbb1b1ee', '<p><span style=\"color: rgb(0, 0, 0);\">2,3,1</span></p>\n', 0),
('61e8b5c4-f097-4cc4-b9b2-581a5b4f5aaa', 'e519b7fd-04c0-4be8-8929-99d259fb91ca', '<p>One</p>\n', 0),
('61f6bc3b-a6ea-4e24-a66e-d4adfad59d34', '27e6274d-827d-46a4-a9e6-94862ef003e4', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 1),
('62084869-6a15-4c88-86f9-03bd2e59e9c8', '0fcc2fed-debd-4713-98ad-d22f8eccd462', '<p>Packets</p>\n', 0),
('6224f9e0-8e84-4c1c-a8f5-93074af746df', '7fc1dedb-287b-46ef-9fe0-e5019870c208', '<p><span style=\"color: rgb(0, 0, 0);\">The programmer can choose to execute a return statement or to throw an exception if an assertion fails.</span></p>\n', 0),
('6246ebbf-8427-48de-97e6-0209f5530b2e', '91cda3d0-d61f-4214-b36d-9243f506ebae', '<p><span style=\"color: rgb(0, 0, 0);\">Both I and II are true.</span></p>\n', 0),
('625abeee-e2c4-4a43-b112-406b3bdbc679', '7ed8d220-751e-4618-8245-95e7ad8ca941', '<p>m<span style=\"color: rgb(0, 0, 0);\">any-to-many relationship</span></p>\n', 0),
('625b5c5d-5da1-49ac-b111-8df66a43d7d5', 'fba871db-f705-436f-a009-399009759a03', '<p><span style=\"color: rgb(0, 0, 0);\">Only 1 is correct.</span></p>\n', 0),
('6274b2c1-5ea7-4a86-a6be-74436bdd1c39', '575dd3fc-abfe-4e72-8625-e88ba3f8f30c', '<p>2,4,2</p>\n', 0),
('6283edc3-469a-4d00-9df2-2682d5f6c46f', '578da245-d329-468f-9a1f-b88d0c6a631e', '<p><span style=\"color: rgb(0, 0, 0);\">((a+i)+j+k+l)</span></p>\n', 0),
('629f60b6-a1b0-492f-b837-01c108457ae3', 'fa597df9-dd7d-4260-97b0-56cafd3a9f34', '<p><span style=\"color: rgb(0, 0, 0);\">Hierarchical Inheritance</span></p>\n', 0),
('62b279e6-185d-485e-bbfb-e35531eb6dfb', 'a4b27f43-e63e-4083-89a6-bad1ae316ba7', '<p>istream.h</p>\n', 0),
('62c0e019-1608-46ea-a5a0-a20b2d842292', 'c063d3e6-028b-4123-823c-0d4b0d36449c', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,4</span></p>\n', 0),
('62cf9ff1-728e-4dbb-a789-c4b97403f02c', '2291d61d-ea1f-44b8-b3d5-effdbdb15673', '<p>T<span style=\"color: rgb(0, 0, 0);\">ransposition Cipher</span></p>\n', 0),
('62d81299-2bca-49cb-872b-2e3d46eaa158', 'ff3a6737-f9ef-40c7-8ed1-0b29695d0fc0', '<p>-</p>\n', 0),
('6304998f-a396-4679-adb4-83cca72a3d10', '988f7ab3-51ac-4010-a498-f5f613f105a6', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 1),
('637f118c-b57e-406a-9561-47e688a035d7', '4086e69d-a1ce-49e1-944e-0ac3c0ab5e12', '<p><span style=\"color: rgb(0, 0, 0);\">Thread t = new Thread(); x.run();</span></p>\n', 0),
('63f3af15-de19-44b7-afe2-480796a01513', '77f984fe-9782-4a1c-a8ee-20591ea67f9c', '<p>*</p>\n', 1),
('643e5865-70b7-4946-9273-cb1eb44d89f3', '7f2b1a60-53c9-4d8f-85e0-5f6e16b2e3cf', '<p><span style=\"color: rgb(0, 0, 0);\">f is a pointer variable of function type.</span></p>\n', 0),
('64752a62-8c68-4431-8400-9d038f4bbc72', 'a59bba93-b0b5-4c07-800c-5aa4380a5c10', '<p><span style=\"color: rgb(58, 58, 58);\">160 bits</span></p>\n', 1),
('64a1a441-2e4d-4691-8b3c-cefccd41ab57', 'b554c4f6-5c76-48e7-9825-2e70fb136e66', '<p>p<span style=\"color: rgb(0, 0, 0);\">olyalphabetic</span></p>\n', 0),
('64c26910-c8ed-4a58-b617-a37dc6c5adf0', '052cf1ba-3e99-4f1a-8800-67b12a910796', '<p><span style=\"color: rgb(0, 0, 0);\">Compilation fails because of an error at line 2.</span></p>\n', 0),
('64faf61d-f143-4a7a-8fab-c52a9b95b006', '6026287c-3c29-4b96-93ad-93a679e106b4', '<p>-</p>\n', 0),
('650f2e64-f071-4d0f-b37b-e0c867b73cf5', '4b724f8d-7f59-4503-b92f-ff444be4a93f', '<p><span style=\"color: rgb(0, 0, 0);\">Dynamic constructor</span></p>\n', 0),
('6526b1be-6810-41ac-aa51-2311f062df11', '7966aecd-baa5-4807-b467-60e29664d74f', '<p>1</p>\n', 1),
('6527f1a8-1bc5-4b7e-a889-f6edba5cf07f', '1833f24c-a2e3-45ce-80e4-207aa4a773a1', '<p>The add() method executes code in a new transaction</p>\n', 0),
('65550172-2774-435a-8517-57bfcea95048', 'b036a1b5-69ab-441e-80eb-e46e23047797', '<p><span style=\"color: rgb(58, 58, 58);\">Blowfish</span></p>\n', 0),
('65600209-58c4-40cd-85fb-ee1a2e39dbd7', 'fd476b5d-6858-43d6-8a38-1f015e057016', '<p>Intel</p>\n', 0),
('657a263a-7808-4846-aca6-1459c13272cf', '242f678d-c55e-4203-b28e-cc361350e933', '<p><span style=\"color: rgb(0, 0, 0);\">can be nested</span></p>\n', 0),
('65c0454f-b588-4cbe-9e3b-bfb96b1abf34', 'c809565d-5e85-49ed-8c9d-03b6a002b687', '<p><span style=\"color: rgb(0, 0, 0);\">From inside the destructor.</span></p>\n', 0),
('65f294c1-8f18-43cf-8b41-892e21dc1bf3', '6d1d18af-a086-4496-887b-0df172bee5f8', '<p>AOP proxies are always created with a JDK dynamic proxy</p>\n', 0),
('66164022-3ec4-45bc-ab38-b3dfb96ad41f', '83a40812-b708-43fd-9f03-7c466ae09d0f', '<p><span style=\"color: rgb(0, 0, 0);\">none of the these</span></p>\n', 0),
('66230a29-0bf3-4d05-8f6c-c53e00b3538d', '8290b212-9c4b-4e5b-a0aa-9bec42f61bc9', '<p><span style=\"color: rgb(0, 0, 0);\">2 0 0 2 1 0</span></p>\n', 0),
('664df39b-ab43-4b5f-933b-381c4e87d4a1', 'f6b546b8-4b06-4c87-b7a1-429152a17f1e', '<p><span style=\"color: rgb(0, 0, 0);\">Java.util.List</span></p>\n', 0),
('66df6e87-785d-4b6e-9525-1a41bda8eb61', 'fa597df9-dd7d-4260-97b0-56cafd3a9f34', '<p><span style=\"color: rgb(0, 0, 0);\">Hybrid inheritance</span></p>\n', 0),
('66f679c0-e6fb-4c4f-89b5-169896d6c581', 'b769793f-14ac-4991-b7e8-4420bb0dbca6', '<p><span style=\"color: rgb(0, 0, 0);\">65480,65490</span></p>\n', 0),
('66f91b5c-89d6-4e2c-bf48-d86f711c0d99', '9da40fa1-e8ea-4dee-b61c-9ffbda01d1d2', '<p>10</p>\n', 0),
('670dd712-c9c9-4d0b-9c92-44830f28727a', '011fc229-cf60-46f5-8e89-e7b86fdec220', '<p>array</p>\n', 0),
('67526285-0cfc-498f-9fb2-7208de703a19', '0108f3dd-8269-4758-8484-ef8811eb7393', '<p><span style=\"color: rgb(58, 58, 58);\">0.048</span></p>\n', 0),
('678abd37-3f19-4429-8f36-3ed6b4d1ac7d', 'ac944f01-eb77-42d2-a9a2-2db2f2fb0cf0', '<p>The execution of all public method returning a value</p>\n', 0),
('67cc0ca6-c5ce-42c2-a83e-024242cef223', '1c62daee-e9e6-46ca-9dfe-8dc3c99c5014', '<p><span style=\"color: rgb(0, 0, 0);\">Operator overloading</span></p>\n', 0),
('6810249c-2c06-4cd5-9f3d-2b071532089d', '3d0d8409-4376-4330-9b1e-7fa0457f7b3b', '<p><span style=\"color: rgb(58, 58, 58);\">Accidental Association</span></p>\n', 0),
('6832561c-8d77-48e5-949b-bdf9a53806e9', '533ddb28-1a7e-4d65-9261-89385b0b4187', '<p>void com.test.service.MyServiceImpl#transfert(Money amount)</p>\n', 1),
('684b38a6-8c0c-48da-859d-e61f90f7ee19', '2aaadbba-6513-4195-8c86-b88eae5aa6e5', '<p>Static initialisation code could be targeted by a point cut</p>\n', 0),
('68e949d0-343b-44bf-8061-94711191b4a4', '8c4c9829-2484-4452-aaa5-ff89691ffaf9', '<p><span style=\"color: rgb(0, 0, 0);\">Right-left</span></p>\n', 0),
('692d451d-e24c-495e-a6a6-fe3b9897f3d7', '1a8b93f4-3305-4385-9c6a-112b55c9d7a7', '<p><span style=\"color: rgb(0, 0, 0);\">After thread A is notified, or after two seconds.</span></p>\n', 1),
('69bf5e26-fa4a-4f2d-8932-5055a35a88fe', 'a74fbf22-9c52-4858-8112-51e5e5a0b0f8', '<p>20</p>\n', 1),
('69cd07ca-d4d8-4f56-be4e-674412257844', '1eb8d787-20d0-4ebf-8b4b-820e50709c24', '<p><span style=\"color: rgb(0, 0, 0);\">the code runs without output</span></p>\n', 0),
('69da4af4-cbe0-4da7-97b6-d134ef9dca69', '04dee710-a928-43fe-b6a1-46ab880bf061', '<p>Advice that executes before a join point</p>\n', 0),
('6a59f7b3-9ce5-4e9a-8065-401842d82fae', 'b0e3c6dc-8d5f-4031-9a20-ba5e2a06e1eb', '<p>C<span style=\"color: rgb(0, 0, 0);\">ipher text</span></p>\n', 0),
('6a5d8ff2-7d36-4445-91ad-7fc21735c49d', 'e0fa7a82-435d-48e4-a40a-c8067a2cd41a', '<p><span style=\"color: rgb(0, 0, 0);\">char (*ptr)[3];</span></p>\n', 1),
('6a855b97-cda1-46e2-9f44-b114278164c2', 'ea1e9589-a40d-4098-b2d5-92069713050f', '<p><span style=\"color: rgb(58, 58, 58);\">60 words</span></p>\n', 0),
('6aa3feb6-baf2-478b-ba8e-ba2cd20d7de1', 'd52b0536-cc2e-4f1a-891a-b9d4c64d613c', '<p><span style=\"color: rgb(0, 0, 0);\">same</span></p>\n', 1),
('6ad90d4f-6779-4f63-818e-bda24d5e8672', '66fbdb8a-db97-49ad-94aa-8ba92956bb22', '<p><span style=\"color: rgb(0, 0, 0);\">virtual void Display(void){0};</span></p>\n', 0),
('6afcfd4b-e631-4aa9-ab5b-cb1f52dcbf30', '22c8c4e3-8004-4f7a-a886-bc958b03d27c', '<p><span style=\"color: rgb(0, 0, 0);\">Only 1 is correct.</span></p>\n', 0),
('6b29c74d-dcd3-4ec9-be4d-9c32024a5f13', '4deb4223-67d8-4fb2-be7c-3c0cb7631017', '<p><span style=\"color: rgb(0, 0, 0);\">i= FFE2 ptr=10 j=FFE4 ptr=20</span></p>\n', 1),
('6b8ef6f4-89ea-4fd6-86c6-78ef4c18cb93', 'e956a8bb-6e95-4bcb-b330-142b1be7c859', '<p><span style=\"color: rgb(0, 0, 0);\">stdio.h</span></p>\n', 0),
('6ba6e123-300c-4640-ba9b-bcc8b92a3724', '76d0fc55-6800-4fb7-a851-6af402f10d85', '<p><span style=\"color: rgb(0, 0, 0);\">4,12</span></p>\n', 1),
('6ba72731-e7b2-4651-99e5-913872462887', 'fd476b5d-6858-43d6-8a38-1f015e057016', '<p>N<span style=\"color: rgb(0, 0, 0);\">ational Institute of Standards and Technology</span></p>\n', 1),
('6bca4196-4a13-4aad-bc85-570912d956d6', '66d2b74a-54af-4cbc-acde-d45a3a011afc', '<p><span style=\"color: rgb(0, 0, 0);\">12 12</span></p>\n', 0),
('6bf4d855-e826-48df-beb8-9de5608d54da', 'a26e01d1-ab74-4990-966a-1bba5af5de4b', '<p><span style=\"color: rgb(0, 0, 0);\">&amp;</span></p>\n', 1),
('6c036b8f-a9dc-47ad-b26b-ce976c7650fb', 'bd52e1aa-5478-443e-8f9e-088cbb647f4a', '<p><span style=\"color: rgb(58, 58, 58);\">O [ n! ].</span></p>\n', 1),
('6c050f74-9f04-454f-82ce-6888e957af74', '08722535-474c-4047-b8d6-e836f3bb5e08', '<p><span style=\"color: rgb(0, 0, 0);\">goto, instanceof, native, finally, default, throws</span></p>\n', 1),
('6c12db25-348a-423d-aaa5-4fee30eeb2c0', 'a618a981-ddae-47e4-aa93-f9c1ba3b5fe3', '<p>cipher</p>\n', 0),
('6c2a6985-9114-4d8b-9be7-a1d55a3b96cc', 'b340aaab-3b82-4090-9225-bb3ea0f67227', '<p><span style=\"color: rgb(0, 0, 0);\">2,3,4</span></p>\n', 0),
('6c4236fc-68a5-4a33-a264-11ffac61877c', '219175a4-21bf-44be-b7f2-45fd40c9f294', '<p><span style=\"color: rgb(0, 0, 0);\">It cannot have a constructor.</span></p>\n', 0),
('6c8c8725-7973-4bc5-ae80-a83d67dc9b99', '0297c903-0e7b-4152-bffc-d71a572ef1a2', '<p>3</p>\n', 0),
('6cbf5ffc-46d3-4ed8-88f0-ba6f712a7751', 'e0260f32-3bc1-4560-b507-3dbf955822ac', '<p><span style=\"color: rgb(0, 0, 0);\">45 57</span></p>\n', 0),
('6d10cbf4-06b2-4c03-b5d7-23dfac8dc09c', '7ed8d220-751e-4618-8245-95e7ad8ca941', '<p>m<span style=\"color: rgb(0, 0, 0);\">any-to-one relationship</span></p>\n', 0),
('6d2a5851-150e-4b0a-a72a-41f92c05b445', '3157f4cb-1542-40cb-ac7c-7c392a96222e', '<p><span style=\"color: rgb(58, 58, 58);\">Poly-alphabetic Cipher</span></p>\n', 0),
('6d3db7d4-8788-434c-a18a-3a00d6937caa', '92dc67ba-8162-4a2f-b44b-6edb7fe8cde5', '<p>A<span style=\"color: rgb(0, 0, 0);\">ll of them</span></p>\n', 0),
('6d54cd13-a847-4ae2-a427-4b9afe1a5b7d', 'dee34d3d-37c5-4e82-828f-091bedae5dd9', '<p><span style=\"color: rgb(0, 0, 0);\">Break</span></p>\n', 0),
('6d99e368-231e-4e2a-8c74-b2aa88721648', '9e94b142-28cd-4a67-8df9-03d809595ae5', '<p><span style=\"color: rgb(0, 0, 0);\">Public data members</span></p>\n', 0),
('6dade9d4-f9ff-4b5f-b0ce-ae515ee23455', '6b8dd378-7455-44cd-8784-518d341655bc', '<p>ack</p>\n', 0),
('6dceafc0-4322-4883-b689-2950bf7fe9df', '34ceb489-65b7-42ad-a670-ce40cfef106d', '<p><span style=\"color: rgb(0, 0, 0);\">LinkedHash map</span></p>\n', 1),
('6dcfb772-869b-4c26-9679-ea7680a838b4', '08722535-474c-4047-b8d6-e836f3bb5e08', '<p><span style=\"color: rgb(0, 0, 0);\">class, if, void, long, Int, continue</span></p>\n', 0),
('6e0014cc-f404-4db8-93ad-6445c43e1db2', '30f09c42-1ad0-4478-b022-867f637ec317', '<p>3</p>\n', 0),
('6e35cea6-eb18-4dec-b262-ffb3b9d15351', '88c5ad2c-39da-4fd4-a87a-cce01395a388', '<p><span style=\"color: rgb(0, 0, 0);\">an object is created</span></p>\n', 1),
('6e378908-e6cb-4347-8396-0da0831dac5a', '6621a40a-7e9b-448d-8e23-8bc853b9b6b8', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 4</span></p>\n', 1),
('6e6cbd36-82df-4f68-a9bb-ab384b58b9b9', '75e2ff6b-2c73-41f7-a043-3a15115802e4', '<p>Constructor of a class cannot be private.</p>\n', 0),
('6e74aff6-94db-4888-b690-3eb82e8b06b2', '95eb037d-9935-4054-9dd5-148513dc49d6', '<p>-</p>\n', 0),
('6e80c212-739c-4cb1-8512-ee06e344975e', '0fe541b4-b569-461d-95dc-3f481c037578', '<p>hello</p>\n', 1),
('6e80f0cc-11e1-4bca-aab0-cda8b4a65c78', '4b2d3b92-3853-4e20-bbab-ed52d9362f81', '<p><span style=\"color: rgb(58, 58, 58);\">O[x</span><sup style=\"color: rgb(58, 58, 58);\">7</sup><span style=\"color: rgb(58, 58, 58);\">].</span></p>\n', 1),
('6eb7a137-2664-4882-8dd1-7f09317ad38a', '5319fc80-c527-4b05-a622-5abc5fd0b7e6', '<p>Yes with the TransactionService class</p>\n', 0),
('6eeae611-51d7-4352-b664-0c4a3195b4d5', '561422fd-1a46-425d-9431-9ee58b197054', '<p><span style=\"color: rgb(58, 58, 58);\">11881376</span></p>\n', 0),
('6f1730e7-8b42-4c74-9344-d8a7498ae7e3', '6f59cdd9-2569-4096-9893-20ee4a99663a', '<p><span style=\"color: rgb(0, 0, 0);\">notify()</span></p>\n', 0),
('6f49124c-82c0-4fa9-8b42-a5f917ec18d5', 'e519b7fd-04c0-4be8-8929-99d259fb91ca', '<p>Two</p>\n', 0),
('6f57a9c3-6cd7-4056-86bf-465f1dcc8bb8', '8368390f-56ab-40ab-98c9-92f37e7b6925', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.List</span></p>\n', 0),
('6f6fee1c-845e-46f2-bf0b-36994b91f817', '1ea2d422-f6ec-44e9-9b0b-dd4bb7998814', '<p><span style=\"color: rgb(0, 0, 0);\">Destructor of base class should always be virtual.</span></p>\n', 1),
('6fb11874-5123-440a-a298-c64e363054f1', 'fb20dfb2-8232-482d-8c2d-56c664ecae0e', '<p><span style=\"color: rgb(0, 0, 0);\">During editing</span></p>\n', 0),
('6fbfc597-4fce-4905-bccd-0fac98884f60', '2aaadbba-6513-4195-8c86-b88eae5aa6e5', '<p>An advice could proxied a constructor\'s class</p>\n', 0),
('700d78b2-562a-45a8-b7fd-a52f0ba23130', '90c6a5e4-2b54-444f-a053-c64f4104454f', '<p><span style=\"color: rgb(58, 58, 58);\">MPJNS</span></p>\n', 1),
('70440228-a93b-4917-81dd-529ea67bc785', '5192d827-d122-4384-808b-cda84660cb82', '<p><span style=\"color: rgb(0, 0, 0);\">int Sum(int a, int b = 2, int c = 3);</span></p>\n', 0),
('705f5eca-c972-4487-bbca-3ffc31bd2310', '4d5539a5-da8a-4f45-9783-ef8fd852e303', '<p><span style=\"color: rgb(0, 0, 0);\">linker</span></p>\n', 0),
('711a5eaf-3d3c-4176-a606-66f7c51937fd', '4087e203-cbbc-4382-8a71-7124b31c1059', '<p><span style=\"color: rgb(0, 0, 0);\">i = 5 and j = 6</span></p>\n', 1),
('7128319e-b6e9-435d-a977-d3908ffa235a', '2220c5d6-60a5-40f4-890d-a5d6a92e0bcb', '<p>An action taken by an aspect at a particular join point</p>\n', 1),
('71572b2e-b3ca-45ef-9a28-25a85d6c7189', '8baf05e4-839d-4000-8bec-0b060ee79010', '<p>BDE</p>\n', 1),
('71dfd2ec-9f8c-4806-9075-45ac0efec719', '66e7e4bc-b04c-4678-a151-00f60806adf4', '<p><span style=\"color: rgb(0, 0, 0);\">Line13</span></p>\n', 0),
('71e40750-5c0b-4b0c-9dab-e8e96ac03d44', '08722535-474c-4047-b8d6-e836f3bb5e08', '<p><span style=\"color: rgb(0, 0, 0);\">strictfp, constant, super, implements, do</span></p>\n', 0),
('71e66cc4-6a9f-47d5-9de1-d8979e261464', 'e6f2f7ba-d5b0-4d18-8812-0fccbea97932', '<p><span style=\"color: rgb(0, 0, 0);\">char *ptr[3]();</span></p>\n', 0),
('71ec796f-aa4e-4b55-8103-c9a88fc30b30', 'e9d4c9b1-c6cd-4cb0-b22f-320409c73854', '<p>Rollback for RuntimeException</p>\n', 1),
('71f8fbaa-ed2a-4594-a649-c8b6da15d6da', 'b82bde27-d228-45b8-98f3-a8e38ba6a32b', '<p><span style=\"color: rgb(0, 0, 0);\">scr is a function pointer.</span></p>\n', 0),
('71fbec0b-28d8-4350-969a-ad08ae3e6eb2', 'c549266d-0fa5-411a-a88f-af7543d0a610', '<p><span style=\"color: rgb(0, 0, 0);\">float Function(int Tmp = Show(int, float));</span></p>\n', 0),
('7209324f-5cc6-4952-ac95-93b916b1a85e', 'e0260f32-3bc1-4560-b507-3dbf955822ac', '<p><span style=\"color: rgb(0, 0, 0);\">none of these</span></p>\n', 0),
('7256aaf4-7f40-43e5-b7e1-c9b0d0fffc54', '8eca3eb8-e9b9-4f76-9e72-c861cba69ac6', '<p><span style=\"color: rgb(0, 0, 0);\">argv is a pointer to a char pointer.</span></p>\n', 1),
('7262e449-b774-43f3-bdcf-56dd5443961a', 'bba3169a-eab7-4e53-ad26-53da07863940', '<p><span style=\"color: rgb(0, 0, 0);\">Java.util.Collection</span></p>\n', 0),
('727db6c3-8fea-438e-b7a0-867019150f25', '0108f3dd-8269-4758-8484-ef8811eb7393', '<p><span style=\"color: rgb(58, 58, 58);\">0.068</span></p>\n', 0),
('72a383a7-6c64-4891-8e07-c8c8fbacda56', '61a0aeb4-2451-4177-8177-4cfbb94280b3', '<p><span style=\"color: rgb(0, 0, 0);\">In the first statement 6 specifies an array size, whereas in the second statement it specifies a particular element of array.</span></p>\n', 1),
('72c0adc3-8a71-41a1-a024-736e34240b33', 'c875e858-e90d-4555-99d5-f028657f3ce3', '<p>Change</p>\n', 0),
('7311fb92-e3d0-4b0c-b6b1-93d65246fcdb', 'a399587a-9d5b-4c67-b8db-196b7d8b9b45', '<p>128</p>\n', 1),
('7347960e-7856-4ccf-895d-79c59260f90a', '865bd10a-abf4-46f7-b1fb-6daa2e9e9549', '<p><span style=\"color: rgb(0, 0, 0);\">2,5 and 1</span></p>\n', 0),
('73662b9b-b388-4dbc-935b-be1824d53b1a', '3d0d8409-4376-4330-9b1e-7fa0457f7b3b', '<p><span style=\"color: rgb(58, 58, 58);\">Malicious Association</span></p>\n', 0),
('73aba5cc-027e-4fb6-90af-52f932ab1939', 'ea3508e2-270e-4ff5-9e52-2721d9719d6b', '<p><span style=\"color: rgb(0, 0, 0);\">run();</span></p>\n', 0);
INSERT INTO `quiz_options` (`id`, `question_id`, `body`, `isCorrect`) VALUES
('73f1b361-b622-40a7-ab8a-1cb124237c0a', 'bad490d5-e282-425d-9f15-daf2d26d1a42', '<p><span style=\"color: rgb(0, 0, 0);\">27,6</span></p>\n', 1),
('73faf5aa-b443-4883-ab54-1bcbf78c7f50', '243a91a1-7c5d-46af-9a5f-5a4d58f85266', '<p><span style=\"color: rgb(0, 0, 0);\">It can extend exactly one class or implement exactly one interface.</span></p>\n', 1),
('74034631-fccd-49ed-8964-bc0a62eceea1', '619875da-75a2-420e-8efb-ab888e5a9d37', '<p><span style=\"color: rgb(0, 0, 0);\">all the above</span></p>\n', 0),
('742859b3-b360-4119-a064-279b83643405', '7d751a6e-5233-4ba8-9e1a-a8333509d844', '<p>X<span style=\"color: rgb(0, 0, 0);\">OR cipher</span></p>\n', 1),
('74373e38-59af-4709-a54e-94d90dfbf463', '1ea2d422-f6ec-44e9-9b0b-dd4bb7998814', '<p><span style=\"color: rgb(0, 0, 0);\">Destructor of base class should not be virtual.</span></p>\n', 0),
('74a3021b-9db8-4ea3-8550-e7bd9e0d2825', 'b36c2012-4724-4174-bc77-b896cadd4578', '<p><span style=\"color: rgb(0, 0, 0);\">Runnable r = new Runnable { public void run(){}};</span></p>\n', 0),
('74c0f0d5-be4f-4a97-b498-7a95e89e8532', 'b1e3404b-9cc7-4035-a403-0a107c55ca8b', '<p><span style=\"color: rgb(0, 0, 0);\">both a and b</span></p>\n', 0),
('74dbe374-61a9-4ee0-abfe-9859517b6c9a', '91713327-0672-4bfd-b5b6-4f4b35ff9d68', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 1),
('7506aff0-0f52-41dc-8e4d-7511f5bb2b58', '4c513303-bc22-4e1d-a6d8-59d29d89f615', '<p>1</p>\n', 1),
('756237c3-2708-4c4e-a9ab-d92c52a370ea', '951b91b8-2348-47b1-b60b-86060eb3b425', '<p>Code to execute at a joint point</p>\n', 0),
('75b80be7-bd36-4e22-ab99-33509445a0f8', 'caf0ad30-c32e-46e7-aae1-0b34b2cf1810', '<p><span style=\"color: rgb(0, 0, 0);\">garbage value</span></p>\n', 0),
('7620ba31-9acc-4f1b-8f63-631fb2828e13', '531a7e26-8941-497a-b2b1-7932aa79e8e5', '<p>-</p>\n', 0),
('7658a2a0-f29a-4657-8ba2-e95c23bd085d', '04dee710-a928-43fe-b6a1-46ab880bf061', '<p>Spring does not provide this type of advice</p>\n', 0),
('7692f235-7338-4037-9506-9ffacf8aabaf', 'e250045e-c9f3-4f71-91c9-4f64cb31adab', '<p>Default transaction timeout could be given</p>\n', 0),
('7704f5d5-5521-44ac-8e18-e61e90b55f1b', '89e92cdb-fe98-4c4c-98fc-f284b493c19c', '<p><span style=\"color: rgb(0, 0, 0);\">If an AssertionError is thrown in a try-catch block, the finally block will be bypassed.</span></p>\n', 0),
('77196276-ce85-436f-9f68-ef6fb8de774f', '85d09d6c-782c-4c72-bb1a-53f1cbce37e5', '<p>It increases the code size.</p>\n', 0),
('771bd05f-088e-4340-815b-8dd3ae0fa150', 'ee9c5618-a5d6-4a19-9c86-cbbdf7473677', '<p>Keys</p>\n', 0),
('7734d236-34a1-4291-9c0f-f816d0298ad9', 'fb20dfb2-8232-482d-8c2d-56c664ecae0e', '<p><span style=\"color: rgb(0, 0, 0);\">During preprocessing</span></p>\n', 1),
('7739a5e1-e3a3-449e-a3ef-7872079f07d1', '9fc7ae8e-2313-428f-b979-3fa9ad032420', '<p><span style=\"color: rgb(58, 58, 58);\">None of the mentioned</span></p>\n', 0),
('77a42df0-5a3c-4a7c-b12e-b3f550af3b84', '75e2ff6b-2c73-41f7-a043-3a15115802e4', '<p>Data items in a class must be private.</p>\n', 0),
('77ab873b-68b3-4bc1-84e6-5831ad052fa2', 'dee34d3d-37c5-4e82-828f-091bedae5dd9', '<p><span style=\"color: rgb(0, 0, 0);\">Protected</span></p>\n', 1),
('77bda28c-c56e-4d51-a7ae-e39661119910', 'f1df04a8-5473-45cd-8b62-58626a2abeef', '<p><span style=\"color: rgb(0, 0, 0);\">An AssertionError is thrown and finished is output.</span></p>\n', 0),
('77cd9d85-fd11-4099-b18f-df0263fc8a49', 'e641806b-38f2-47e1-b314-1151ccd08d03', '<p><span style=\"color: rgb(0, 0, 0);\">Abstraction</span></p>\n', 0),
('780f8cf9-38fa-4ae1-8216-453afa30f6b2', 'e0fa7a82-435d-48e4-a40a-c8067a2cd41a', '<p><span style=\"color: rgb(0, 0, 0);\">char *ptr[3]();</span></p>\n', 0),
('78783b9a-7a43-4a4c-a5e4-2ee3a532244e', '4799b43f-71bf-4de0-b429-dd1b5b7fc6b1', '<p><span style=\"color: rgb(0, 0, 0);\">Overloaded functions can accept only same number and same type of arguments</span></p>\n', 0),
('789e7fb5-0580-4dd8-ab8c-4222073ed30b', '8368390f-56ab-40ab-98c9-92f37e7b6925', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.Map</span></p>\n', 0),
('78c858ec-43c9-40d3-b616-8cacc2151c8e', 'c875e858-e90d-4555-99d5-f028657f3ce3', '<p>Idle</p>\n', 0),
('796bbf32-7a6a-4373-8adb-7ee1bc0ac0b9', 'a4b27f43-e63e-4083-89a6-bad1ae316ba7', '<p><span style=\"color: rgb(0, 0, 0);\">iomanip.h</span></p>\n', 0),
('79727309-71c3-4239-bc22-37e1daeeec7b', 'c1538c7e-9bae-4644-8645-35f37ecf7f23', '<p>R<span style=\"color: rgb(0, 0, 0);\">obert, Shamir, Anthoney</span></p>\n', 0),
('798184e6-e243-4b3c-8567-391c4ead0dfd', 'ce086ceb-f9ae-4931-9ee5-e78a57e80bf9', '<p><span style=\"color: rgb(58, 58, 58);\">Wireless Protected Access</span></p>\n', 1),
('798d549e-5bd4-4e2e-8ea7-0c3e19cb3067', 'ce4ebe51-0e12-4727-a811-75c41915d087', '<p><span style=\"color: rgb(0, 0, 0);\">All the parameters of a function can be default parameters.</span></p>\n', 1),
('799e1261-bd9f-42ab-a731-663607ba0d11', 'fac6f8af-5dbe-4f68-859f-2e976a34ce9e', '<p>Short</p>\n', 0),
('79c43fc2-ba23-43b8-b39d-f5291a820f7b', '3144b4d7-e4a8-4df1-b596-6cbaa0459097', '<p>10</p>\n', 0),
('7aa28319-0e81-44c1-bf98-f19d95fe7844', '3144b4d7-e4a8-4df1-b596-6cbaa0459097', '<p>12</p>\n', 1),
('7aeaa3a8-eb6e-41c8-bcdd-e95174a04fde', 'e0261cd8-bdce-4ed7-a43c-6c71ac89fdca', '<p>10</p>\n', 0),
('7aef575e-0559-44fe-83a8-c341fda6e52e', '3c270c94-de39-4667-90fb-333d922156f4', '<p><span style=\"color: rgb(0, 0, 0);\">Not compile</span></p>\n', 1),
('7b918f00-9ed6-4385-9699-7966b9f6fa78', 'fd476b5d-6858-43d6-8a38-1f015e057016', '<p>IBM</p>\n', 0),
('7bbca307-d4d6-4c72-8920-aa3b8b6826ee', '2aa3a438-9382-499b-82ed-30c279f3651d', '<p>0</p>\n', 0),
('7bc19a94-ed97-4fd8-aabf-93589082a90d', '38b623ae-fa30-4f87-a680-64352230bdd4', '<p><span style=\"color: rgb(0, 0, 0);\">mello</span></p>\n', 1),
('7bed3049-73ab-477b-9410-60835083ce8e', '1fbc2aa6-3102-4cf2-82d6-9691502bb110', '<p><span style=\"color: rgb(0, 0, 0);\">A static member function can access only static data members of a class.</span></p>\n', 0),
('7bfbfe6a-8e00-41e0-aed8-528f718c0f43', 'eda3cf93-9ccf-4905-a6b9-b5d242186c2d', '<p><span style=\"color: rgb(0, 0, 0);\">Only 2 is correct.</span></p>\n', 0),
('7c200906-8598-44b9-b69e-26743ebf3029', '890a50c2-fb7c-4ed7-94a8-9022f4c9f551', '<p><span style=\"color: rgb(0, 0, 0);\">inherit parent class</span></p>\n', 0),
('7cad24e9-84ba-4136-99ca-3a3c0d7f2dae', '084dfd57-8b1c-4835-9b79-7aba5f9367d2', '<p><span style=\"color: rgb(58, 58, 58);\">Random Polyalphabetic, Playfair, Vignere</span></p>\n', 0),
('7cdc0efc-fdd5-4f17-a3fa-34dc64705ccf', '2aa3a438-9382-499b-82ed-30c279f3651d', '<p>7</p>\n', 0),
('7d22a057-66dd-4226-97a8-fbbde6719be8', '399f009c-57ac-4b26-9274-263263cf10b6', '<p><span style=\"color: rgb(0, 0, 0);\">%s</span></p>\n', 0),
('7d2cda83-6e8a-44ef-ad71-557fc9da5c7c', '3d7f4959-cc33-4ec7-a0df-be440f033e68', '<p>True</p>\n', 0),
('7d3eed39-de99-4750-8d06-59cdc6dfe467', '3c270c94-de39-4667-90fb-333d922156f4', '<p><span style=\"color: rgb(0, 0, 0);\">Compiles with an warning</span></p>\n', 0),
('7d58f081-0f6b-42d9-b223-8b7bf28ed8f9', '80be3ee9-500d-4ae2-9c82-c560e2be3d57', '<p>public key</p>\n', 0),
('7d60ee7a-c98d-4512-914a-a25c64ad0531', 'cc400152-7308-476a-8652-e3a3ea09dd3a', '<p>6</p>\n', 0),
('7d7929de-6916-4323-a8ad-1562ab0eddc5', '1ca48e83-f7f3-4c31-ab75-458c80cfba69', '<p><span style=\"color: rgb(0, 0, 0);\">object</span></p>\n', 1),
('7d9b2366-c7d5-47ef-a057-8e257f62eb84', '87606ac0-8a6a-4f4e-93f5-9cbfe271f447', '<p>True</p>\n', 1),
('7de0ec08-d99d-4a0f-a5b8-2f3d5a68c2a6', '1fdbaafd-3b2c-40ac-bcc1-90875bfd099e', '<p><span style=\"color: rgb(0, 0, 0);\">A reference is stored on stack.</span></p>\n', 1),
('7e2b3d5b-b76c-4cb6-872e-db14ce2ea1ef', '79b212f4-c0d0-4d74-b06f-eaecdd1ca27a', '<p>Encryption</p>\n', 0),
('7e52a5af-17d1-4ae1-9a2a-0fc458c5c4a6', 'ce134668-dac4-42aa-84b9-ab024f83713b', '<p><span style=\"color: rgb(58, 58, 58);\">128; 128, 192, or 256</span></p>\n', 1),
('7e832e91-ce69-4ae1-b3cb-24f778e74f72', '7fd064b7-792b-435b-ac13-dcfd81888a5a', '<p><span style=\"color: rgb(58, 58, 58);\">Traffic security</span></p>\n', 0),
('7e918059-431f-4b46-8cec-10dd414fb51c', '399f009c-57ac-4b26-9274-263263cf10b6', '<p><span style=\"color: rgb(0, 0, 0);\">no output</span></p>\n', 0),
('7eb7cd17-9cf9-4545-8394-6e798c699f5e', '988f7ab3-51ac-4010-a498-f5f613f105a6', '<p><span style=\"color: rgb(0, 0, 0);\">exception</span></p>\n', 0),
('7ec47ec4-f4ee-4d62-ac45-e94a884c20c5', '79b212f4-c0d0-4d74-b06f-eaecdd1ca27a', '<p>Frames</p>\n', 0),
('7f320a6d-2a98-48c5-9070-2ef7ba6e4ce9', '7d751a6e-5233-4ba8-9e1a-a8333509d844', '<p>cipher text</p>\n', 0),
('7f34e31c-d067-478f-8c9f-997d6aa5c69a', '323fe7ec-17cc-4cf5-94b8-44a3a2941d5e', '<p><span style=\"color: rgb(0, 0, 0);\">destructor</span></p>\n', 1),
('7f818746-4809-4383-bf94-1d2699b2b328', 'd45b9106-7c6a-42a0-a6e0-c104a80889d4', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are incorrect.</span></p>\n', 0),
('804a5cd0-edf0-491d-8aab-eaea1e52cace', '9d7139a0-90e1-4ac9-a5fe-307aeb603c9e', '<p><span style=\"color: rgb(58, 58, 58);\">A scheme in which the hash of the password is stored</span></p>\n', 1),
('80821682-bad1-47c2-acbb-e5c735cb323f', '1a8b93f4-3305-4385-9c6a-112b55c9d7a7', '<p><span style=\"color: rgb(0, 0, 0);\">After the lock on B is released, or after two seconds.</span></p>\n', 0),
('81251c86-853c-46d0-901d-ac3c34d81537', '6026287c-3c29-4b96-93ad-93a679e106b4', '<p>True</p>\n', 0),
('8152f4bb-66db-4451-aecc-eed0a05839e1', '8cd6987c-0df3-4e09-a506-d616c1c3bc18', '<p><span style=\"color: rgb(58, 58, 58);\">None of the mentioned</span></p>\n', 0),
('818883f9-40e4-4749-ac2e-688c63f28583', '524eebd2-6eb0-47f2-9664-ea0c206837cf', '<p><span style=\"color: rgb(0, 0, 0);\">-2147483648 and 1</span></p>\n', 1),
('819048cb-0a94-4edc-a36a-043a31592d5f', '1be3d7f7-3260-462a-91d9-ab3703c473ad', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are correct.</span></p>\n', 0),
('81ae0876-e5a9-465d-a91b-80801f11246e', 'bf8eb032-5d85-4375-b9b9-1c0acd84b8c4', '<p>4 keys</p>\n', 0),
('81c99872-9820-4774-be80-682926ca7134', '3b6cd918-13cb-4c31-aaf9-454f9e4d13c1', '<p><span style=\"color: rgb(58, 58, 58);\">ABANDONED TEXT</span></p>\n', 0),
('81e02433-ffd0-4849-89c5-d12ec517b3a2', 'bd401b0a-b28c-4a06-91b1-fcb79903419b', '<p><span style=\"color: rgb(58, 58, 58);\">O[ n</span><sup style=\"color: rgb(58, 58, 58);\">10</sup><span style=\"color: rgb(58, 58, 58);\">&nbsp;].</span></p>\n', 0),
('81e6514a-66fc-49f5-be6b-4fabb74b1ddc', 'efeca7b0-1664-4b18-b683-672fba5d00c3', '<p>ResultSetExtractor</p>\n', 1),
('820c3383-a357-4e13-9404-4d3d5a284616', '052cf1ba-3e99-4f1a-8800-67b12a910796', '<p><span style=\"color: rgb(0, 0, 0);\">exception caught</span></p>\n', 0),
('8226b0db-c728-4386-bf15-dd0a0cb00ccc', 'e857bb8f-9626-4b99-baf2-a840a3a43a4f', '<p><span style=\"color: rgb(58, 58, 58);\">O(log2 2n)</span></p>\n', 0),
('822baee3-3422-4ff3-8608-2b618da2f54e', '97015c85-5098-4743-831a-b4bcc1950f6d', '<p><span style=\"color: rgb(0, 0, 0);\">none of these</span></p>\n', 0),
('8244b3f9-38eb-4786-8b9a-5009d445b1c4', '3157f4cb-1542-40cb-ac7c-7c392a96222e', '<p><span style=\"color: rgb(58, 58, 58);\">Mono-alphabetic Cipher</span></p>\n', 1),
('82632131-4c8b-4c96-bef8-91c0e081f9f8', '272a179d-3e85-4263-9b74-bed69505520d', '<p><span style=\"color: rgb(0, 0, 0);\">Error: cannot convert from \'const int *\' to \'int *const\'</span></p>\n', 0),
('827cc774-1678-452e-865f-ad245531307f', 'e59f3415-988a-4ed7-b619-dedb2b98b652', '<p>error</p>\n', 1),
('82947d7c-52ad-475b-8aa2-aad8f466812f', 'd01e5f86-cf60-4533-aa1c-a2053ca58ac8', '<p><span style=\"color: rgb(0, 0, 0);\">2,3,4</span></p>\n', 0),
('8297bc1f-da7d-4917-addb-a29fe8e14c13', 'c1538c7e-9bae-4644-8645-35f37ecf7f23', '<p>R<span style=\"color: rgb(0, 0, 0);\">ivest, Shaw, Adleman</span></p>\n', 0),
('82b3afe8-a324-46c9-a756-99a3f6cf495e', 'bbea72ad-5557-4a75-9b10-9deb2ab52434', '<p>Public members of the base class become protected members of derived class.</p>\n', 0),
('82e1e8c6-7929-488c-bc86-473b40ec7d56', 'd06bafc9-d627-4b2b-9c27-8c1710e74635', '<p>True</p>\n', 1),
('82fb82ac-cf02-4b41-8eb9-1d64e4540f50', '4ee9a575-073c-4f4d-972b-730e5a37c1b3', '<p><span style=\"color: rgb(0, 0, 0);\">It does not have access to nonstatic members of the enclosing class.</span></p>\n', 1),
('833a362a-6e3b-49e0-a421-764f4355725c', '65b6193b-2d89-4d74-840c-e4e9734e72ef', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,3 and 4</span></p>\n', 0),
('839845fc-9d04-460a-afb9-ec6af5927fe2', '0efca4f7-d5ac-430a-9956-de997ed89038', '<p><span style=\"color: rgb(58, 58, 58);\">using directional antennas and signal shielding techniques</span></p>\n', 0),
('83a57289-c285-4006-b517-e40e21021060', '9fc7ae8e-2313-428f-b979-3fa9ad032420', '<p><span style=\"color: rgb(58, 58, 58);\">Device security</span></p>\n', 1),
('83d90f4d-a184-405b-b28c-43584e5ea1c6', 'f974efc2-ad86-4d15-bf7b-45f7d74183bc', '<p><span style=\"color: rgb(0, 0, 0);\">1,4,5,6</span></p>\n', 0),
('83f26450-adbe-4db4-adbd-527169d87ef3', '87961a90-d2d8-4c3e-91bc-b5866c2e4566', '<p><span style=\"color: rgb(0, 0, 0);\">It prints \"true\".</span></p>\n', 0),
('843f5815-e92f-440d-b452-7f53d2233de7', '2a80b448-834d-48ee-b7ca-c90f34cae525', '<p>c<span style=\"color: rgb(0, 0, 0);\">onfidentiality</span></p>\n', 0),
('8493db93-9dd3-4bc1-81d1-68401469902c', '88c5ad2c-39da-4fd4-a87a-cce01395a388', '<p><span style=\"color: rgb(0, 0, 0);\">a class is declared</span></p>\n', 0),
('8522ab54-a5a4-43ee-a6df-95c644772da3', '318a93cc-0630-437a-8306-aff5163e696f', '<p><span style=\"color: rgb(0, 0, 0);\">0 to 65535</span></p>\n', 1),
('8524eace-f54e-425f-a66d-c9a62975480f', '9902fcb3-21d2-4cdc-b7e5-2f107d63fb57', '<p><span style=\"color: rgb(0, 0, 0);\">run();</span></p>\n', 0),
('85944ce2-b36a-4e82-bccb-c8f6263a8cc0', 'e19804a7-200b-4652-81b5-8989fc59eca1', '<p><span style=\"color: rgb(0, 0, 0);\">just after line 5</span></p>\n', 0),
('85be0139-2db1-4db8-98b7-671326a2fd92', '6e2f24da-aa99-49dd-9b95-0899bad785fd', '<p>Fixed</p>\n', 1),
('85dbcc58-1921-4029-ab9a-5e1d2f58546d', '84b518db-44d8-4c10-8585-790550ef409a', '<p><span style=\"color: rgb(0, 0, 0);\">Inherited</span></p>\n', 0),
('85ee7f34-1130-44e9-92cd-874540e70512', 'af6c3012-5eb0-4e91-86b0-993dd42b9fbe', '<p><span style=\"color: rgb(0, 0, 0);\">Both A and B.</span></p>\n', 0),
('85f38a97-bf5e-4c8d-bab2-83a3f18e2891', '575dd3fc-abfe-4e72-8625-e88ba3f8f30c', '<p>2,4,4</p>\n', 1),
('864f321f-5c7b-46cb-afe0-fe2bce29d770', '578da245-d329-468f-9a1f-b88d0c6a631e', '<p><span style=\"color: rgb(0, 0, 0);\">(((a+i)+j)+k+l)</span></p>\n', 0),
('867c0d29-0a41-4166-8add-668ef5fe5bb6', '7d751a6e-5233-4ba8-9e1a-a8333509d844', '<p>cipher</p>\n', 0),
('871c7939-a2fc-4cca-9272-8da74b033b59', '3c5cee0d-9753-4d7c-af76-d62e1a93d63b', '<p><span style=\"color: rgb(58, 58, 58);\">Virtual Private Network</span></p>\n', 1),
('876c11d9-ad8a-46cf-9c31-50e37cf12e97', 'ac6579d6-88ab-428a-86e2-9c8718cf93ff', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 2</span></p>\n', 0),
('87bbd94f-35a3-42e0-be6f-cbe0eb36945f', '74ef9396-e72e-43dc-8039-a466f427ee2a', '<p><span style=\"color: rgb(0, 0, 0);\">Member Functions</span></p>\n', 0),
('87fe7cb2-d7e8-4ab5-9ec7-baa04767e322', '7c58fc55-56bd-40f2-b71e-9a7ebe5ac56e', '<p><span style=\"color: rgb(0, 0, 0);\">Data hiding</span></p>\n', 0),
('88559626-b1ab-41e7-99f4-8e8c68ecb35b', '951b91b8-2348-47b1-b60b-86060eb3b425', '<p>An advice and a jointpoint</p>\n', 0),
('88736d7c-5cd2-4a14-a335-f1c9e072a160', '561422fd-1a46-425d-9431-9ee58b197054', '<p><span style=\"color: rgb(58, 58, 58);\">456976</span></p>\n', 0),
('888a90ff-c7f3-4d44-88eb-92dc27a58595', 'b036a1b5-69ab-441e-80eb-e46e23047797', '<p><span style=\"color: rgb(58, 58, 58);\">MARS</span></p>\n', 1),
('890a3fbe-ac0c-47fa-ac1e-5352709acb42', 'eeca8ea1-0c10-4ad1-8d87-dfb2eaeaaac0', '<p><span style=\"color: rgb(58, 58, 58);\">BAD</span></p>\n', 0),
('89a6ce9f-8fe6-4c4c-b5ae-a8da154212ab', '32be3e83-1e43-45a6-8df1-989761afd66e', '<p><span style=\"color: rgb(0, 0, 0);\">2,2,2</span></p>\n', 0),
('89cb8a78-79b1-495d-bde2-981a1c1d57a1', 'b33a66e1-11df-4160-bf45-11cc581c8878', '<p><span style=\"color: rgb(0, 0, 0);\">Constructor has the same name as that of the class.</span></p>\n', 0),
('8a07eb57-29a7-4bbc-8bf7-a6dacdf41d79', '9931f538-e6c2-4951-93bf-5d1d64d26d2a', '<p><span style=\"color: rgb(58, 58, 58);\">Man in the middle attack</span></p>\n', 0),
('8a220db6-038b-46bb-807f-5ce12519d71a', '187b908d-43dc-42fb-9646-ce50de416144', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,3</span></p>\n', 0),
('8a231a83-3fa6-4b1a-acee-6eafabab19c8', 'fba871db-f705-436f-a009-399009759a03', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are incorrect.</span></p>\n', 0),
('8a3c505c-dc03-428c-9584-e760f8fb12f6', 'e956a8bb-6e95-4bcb-b330-142b1be7c859', '<p><span style=\"color: rgb(0, 0, 0);\">math.h</span></p>\n', 0),
('8a898d5f-bdc2-4730-85e3-d30cf09c3aba', '17c9a576-4af8-4d6b-9662-0b3771e50109', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.SortedMap</span></p>\n', 0),
('8aea7c04-d9db-4e7c-86e5-279e3221742e', 'a975a79e-80b3-4b11-87f3-84dd0d36d389', '<p>3,3,3</p>\n', 0),
('8b3b8394-5dd1-4632-8fb6-758bc98f51e3', 'e0b8c6ef-ff9b-4364-8b03-b7d0f7ab6353', '<p>M<span style=\"color: rgb(0, 0, 0);\">ultiple Round</span></p>\n', 1),
('8bf5a13a-9107-458f-96d0-e63a47496914', '71cf4a33-0a65-44f0-b029-6c50b38dd9c5', '<p><span style=\"color: rgb(58, 58, 58);\">Words</span></p>\n', 0),
('8c601161-59b7-41b0-a6ab-d5eb498813e3', '65b6193b-2d89-4d74-840c-e4e9734e72ef', '<p><span style=\"color: rgb(0, 0, 0);\">1,4,3 and 2</span></p>\n', 0),
('8c8b9f82-7f1f-4d48-981d-1d05c632139c', 'e0b8c6ef-ff9b-4364-8b03-b7d0f7ab6353', '<p>D<span style=\"color: rgb(0, 0, 0);\">ouble Rounds</span></p>\n', 0),
('8c8bbd29-1ba9-4afc-a7e5-b25204b3d2a2', '91cda3d0-d61f-4214-b36d-9243f506ebae', '<p><span style=\"color: rgb(0, 0, 0);\">Both I and II are false.</span></p>\n', 1),
('8cb377be-5167-4671-a8a0-d0616e6e195a', 'a3b48928-1619-44d0-b893-5e7c8b0f9d47', '<p>X<span style=\"color: rgb(0, 0, 0);\">uejia Lai and Bruce Schneier</span></p>\n', 0),
('8cb3ee55-841d-43fa-8bab-176a33172729', 'f369b3f8-96f1-4d1f-8dac-9a75466429b1', '<p><span style=\"color: rgb(0, 0, 0);\">Reference is like a structure.</span></p>\n', 0),
('8cf56955-5f03-4a3a-a4b6-37e93386df4a', 'e19804a7-200b-4652-81b5-8989fc59eca1', '<p><span style=\"color: rgb(0, 0, 0);\">just after line 6</span></p>\n', 0),
('8d4e79b9-b027-4713-b1e5-74358fc7306e', 'e0c1b186-b48d-407f-8fb3-3dd05f6f30fa', '<p><span style=\"color: rgb(0, 0, 0);\">Overloaded functions can have at most one default argument.</span></p>\n', 0),
('8d5a1642-f650-4e26-87eb-dbdc64ca9036', 'd2ca9fcc-b531-4f5c-8871-4492768b419a', '<p><span style=\"color: rgb(0, 0, 0);\">~</span></p>\n', 1),
('8d93c1f8-ac81-4658-81e0-23e9379cd457', 'b554c4f6-5c76-48e7-9825-2e70fb136e66', '<p>M<span style=\"color: rgb(0, 0, 0);\">onoalphabatic</span></p>\n', 0),
('8da3265d-ca4a-4853-8df3-cdc6a9816270', 'a1856142-7415-43da-af24-1f8d5f73883f', '<p>qqqqqqq</p>\n', 1),
('8dc08054-8e2b-4935-b84b-2d7a8bcda377', 'b1e3404b-9cc7-4035-a403-0a107c55ca8b', '<p><span style=\"color: rgb(0, 0, 0);\">Error: Invalid parameter</span></p>\n', 0),
('8dc7c861-ec27-4198-b8d1-922b72b30a9d', 'aaff4ef9-4464-418f-8dc4-c74b471adb71', '<p>Matches public update methods of the 2 classes, whatever the arguments</p>\n', 0),
('8de0381b-d285-40f0-b0a1-c69070ee8687', 'c39b735b-3dd5-408a-ba24-5f6ce096f509', '<p><span style=\"color: rgb(0, 0, 0);\">5 2</span></p>\n', 0),
('8de38a61-cd0c-47ec-8ed0-9643d57550d2', '2e4d385c-81da-42ef-b06d-60b6cd30f85c', '<p><span style=\"color: rgb(0, 0, 0);\">-&gt;</span></p>\n', 0),
('8dfb089d-28ae-4d7d-aee4-206d3d63c7c9', '8baf05e4-839d-4000-8bec-0b060ee79010', '<p>BED</p>\n', 0),
('8e58a390-9c0b-42b2-a9e4-5d414a2bfb7e', '760594b4-9cbe-429a-94d2-5c8ce028b9b8', '<p><span style=\"color: rgb(0, 0, 0);\">no output is produced</span></p>\n', 0),
('8e6818a5-89e8-495a-8cfb-244f8899a6cc', '913b6120-f42a-4e9d-9dab-25e820cfc1e1', '<p><span style=\"color: rgb(0, 0, 0);\">It will compile succesfully.</span></p>\n', 1),
('8ec9c5e5-70fa-4470-8e86-bdbb55986a32', '3ec25e9b-4cf1-47e9-9cc2-c0b44b22c57d', '<p><span style=\"color: rgb(0, 0, 0);\">near=2 far=4 huge=4</span></p>\n', 1),
('8f30c712-4a8c-499d-9efd-946978a4548e', 'ce086ceb-f9ae-4931-9ee5-e78a57e80bf9', '<p><span style=\"color: rgb(58, 58, 58);\">Wired Protected Access</span></p>\n', 0),
('8f434f37-4b9e-437d-876d-f8d158e8fc7b', '3c5cee0d-9753-4d7c-af76-d62e1a93d63b', '<p><span style=\"color: rgb(58, 58, 58);\">Virtual Post Node</span></p>\n', 0),
('8f48e115-3ae4-489e-8a8b-db18274612db', 'e59f3415-988a-4ed7-b619-dedb2b98b652', '<p>5</p>\n', 0),
('8fb2d142-76ef-4e39-b14c-fb0ecde32355', 'e7b7df13-b0ff-4b26-979f-43943e78259d', '<p>If a transaction exists, the current method should run within this transaction. Otherwise, it should start a new transaction and run within its own transaction.</p>\n', 0),
('8fc81a7a-bf29-4d06-bfc1-ab5b105974b0', '3d0d8409-4376-4330-9b1e-7fa0457f7b3b', '<p><span style=\"color: rgb(58, 58, 58);\">Network Injection</span></p>\n', 0),
('8ff7e977-4781-406a-ac28-6f1be609b255', 'bad490d5-e282-425d-9f15-daf2d26d1a42', '<p><span style=\"color: rgb(0, 0, 0);\">9,4</span></p>\n', 0),
('9003e021-0bfd-4c10-8c07-760fe2927f44', '79b212f4-c0d0-4d74-b06f-eaecdd1ca27a', '<p>Pixles</p>\n', 0),
('90113ea6-a428-4905-8c20-4b617f3a8ac4', '37aee43a-1c00-4102-a8e4-c5118a7c7099', '<p><span style=\"color: rgb(0, 0, 0);\">It can be marked static.</span></p>\n', 0),
('90115451-338e-49de-98ed-6f08b5067371', 'e7b7df13-b0ff-4b26-979f-43943e78259d', '<p>The current method must start a new transaction and run within its own transaction. If there is an existing transaction in progress, it is suspended.</p>\n', 1),
('905ee445-a988-41e1-9bfe-df4ceb357a41', 'bd52e1aa-5478-443e-8f9e-088cbb647f4a', '<p><span style=\"color: rgb(58, 58, 58);\">None of the Mentioned</span></p>\n', 0),
('90633a20-5e77-42ba-be72-ee658404b0af', '2d33ff1a-da20-456b-802c-c7a96872bb14', '<p><span style=\"color: rgb(0, 0, 0);\">friend</span></p>\n', 1),
('906d9e5a-61cf-409b-9b8c-29c08e4fc0cb', 'ff5f02b9-c3f0-4523-98f4-020baf45e091', '<p>string</p>\n', 0),
('918488d7-e248-42e3-b78d-96834a9d4dfb', '4ef74cda-cbad-47a3-9f31-2af0a0039cdd', '<p><span style=\"color: rgb(58, 58, 58);\">ii) and iii)</span></p>\n', 0),
('91a6253b-b0f8-47d0-beaa-56993ff74fa8', '0062f70e-3f59-406a-a56a-d361fd45d4eb', '<p><span style=\"color: rgb(0, 0, 0);\">Constructors can have at most five default parameters.</span></p>\n', 0),
('91d76636-e027-4d45-bca2-919418992711', 'b33a66e1-11df-4160-bf45-11cc581c8878', '<p><span style=\"color: rgb(0, 0, 0);\">Destructor has the same name as that of the class with a tilde symbol at the beginning.</span></p>\n', 0),
('91dda8f2-10cf-472e-954f-7976103b052c', 'b36c2012-4724-4174-bc77-b896cadd4578', '<p><span style=\"color: rgb(0, 0, 0);\">Runnable r = new Runnable() { };</span></p>\n', 0),
('9206c996-f2f0-4839-99b5-293c4c0fabf8', '7e4ce2c3-017f-433b-920f-65412d4d6b62', '<p><span style=\"color: rgb(0, 0, 0);\">hello throwit caught finally after</span></p>\n', 1),
('926d40f2-193b-4159-82b3-d0f7047c0b71', 'd32d514e-7fcc-439a-afc2-a8220c2d280e', '<p><span style=\"color: rgb(0, 0, 0);\">As soon as local objects die.</span></p>\n', 0),
('92df9293-509c-4871-86bd-257011cc7138', 'df5344ec-28fe-46fa-904a-e703dd8de6ed', '<p>Outputs</p>\n', 1),
('9315ed43-c89c-4eb1-8d73-2c14ff91fc98', '1833f24c-a2e3-45ce-80e4-207aa4a773a1', '<p>The add() method uses the transaction of the transferMoney() method</p>\n', 1),
('932e68eb-a56b-4074-956b-00bc8e67dc02', '077fdade-a412-4b88-a5a4-4003b3a02420', '<p><span style=\"color: rgb(0, 0, 0);\">Only 2 is correct.</span></p>\n', 0),
('935fe34f-369a-41e4-855c-19c84675cf92', '88c5ad2c-39da-4fd4-a87a-cce01395a388', '<p><span style=\"color: rgb(0, 0, 0);\">an object is used</span></p>\n', 0),
('937439c4-c8aa-4893-893d-172216bb4cb7', '5ef52068-1d5b-448d-93af-216fffd427ef', '<p><span style=\"color: rgb(0, 0, 0);\">Once a reference variable has been defined to refer to a particular variable it cannot refer to any other variable.</span></p>\n', 1),
('93a0b052-f0c9-4bb7-a30b-96647a2fe6f9', 'b537da2c-37cc-4bf9-a4e1-ca3de1d67b9f', '<p><span style=\"color: rgb(0, 0, 0);\">void run()</span></p>\n', 0),
('93a18dde-e9a5-4359-ab9d-806ef52873c9', '1ab87519-1ecb-418c-892a-caab6d67b768', '<p><span style=\"color: rgb(0, 0, 0);\">Runtime exception.</span></p>\n', 0),
('93a31845-5a8e-4bcd-9ede-817a7b3811a7', 'e0c1b186-b48d-407f-8fb3-3dd05f6f30fa', '<p><span style=\"color: rgb(0, 0, 0);\">An overloaded function cannot have default argument.</span></p>\n', 0),
('93b625f7-666e-45ea-a183-746163bfd5e5', 'bee079ca-ab87-4350-aae5-2761bb906c64', '<p><span style=\"color: rgb(0, 0, 0);\">BDC</span></p>\n', 0),
('93c893ca-a555-4e32-a509-8f54a9cfbd00', '5f44caf1-f485-4b74-984f-2f34a56aba35', '<p><span style=\"color: rgb(58, 58, 58);\">nlazeiibljii</span></p>\n', 0),
('93d50767-9777-4fdc-b541-2ec2f919f6da', 'f033ba2b-7979-4a4a-8457-4c1881af4e64', '<p><span style=\"color: rgb(0, 0, 0);\">A referenced does not need to be de-referenced to access a value.</span></p>\n', 1),
('93e1d048-7ff2-4971-8783-29812283f648', 'e0b8c6ef-ff9b-4364-8b03-b7d0f7ab6353', '<p>S<span style=\"color: rgb(0, 0, 0);\">ingle Round</span></p>\n', 0),
('94239a5d-d24f-490a-a789-6cdee3f54d36', '3c900839-f3ac-4fa3-a9dd-e8d29b16f097', '<p>Maybe improve performance when using Hibernate</p>\n', 1),
('9465b736-2b6c-467b-b92d-3d16c0b03709', 'ba1b0113-cee8-40f2-84d5-fa92037c5108', '<p>9</p>\n', 0),
('949ced99-cf19-4f1d-806f-67d22c3ea103', 'b04a8071-8156-48c7-9717-d5a85c8248d8', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 1),
('94c1036f-0896-4fa4-bbd8-7ffa4e619430', '725a330a-d38d-47e2-bc2c-f7a7465fa114', '<p>JPA</p>\n', 0),
('94f281ca-e65e-4682-b7cf-6d1c87155364', 'f5443a7b-decd-46e9-b5b1-d10e9d94f428', '<p><span style=\"color: rgb(0, 0, 0);\">Address of the last element of array</span></p>\n', 0),
('94f35027-e4cb-4973-bb33-1ed5a53adf59', 'fa597df9-dd7d-4260-97b0-56cafd3a9f34', '<p><span style=\"color: rgb(0, 0, 0);\">Multiple inheritance</span></p>\n', 1),
('954a7374-f318-4ce7-9af1-540dce3ea264', 'a975a79e-80b3-4b11-87f3-84dd0d36d389', '<p>4,4,4</p>\n', 1),
('954b891c-d3a6-4c37-a118-b78bf98baf9d', '3d7bf805-d7fa-47d3-a62f-b0dfe5d18950', '<p><span style=\"color: rgb(0, 0, 0);\">Friend function</span></p>\n', 1),
('955e8003-8e11-4312-bd13-ed8a2e89f441', '0297c903-0e7b-4152-bffc-d71a572ef1a2', '<p>27</p>\n', 0),
('9586a325-4e48-4f8b-a9c6-a280687c8a6c', 'c1538c7e-9bae-4644-8645-35f37ecf7f23', '<p>R<span style=\"color: rgb(0, 0, 0);\">oger, Shamir, Adrian</span></p>\n', 0),
('95956ecc-e5dc-43a0-9dc8-0d5b6c25455e', 'b48b7250-99e1-46e5-81eb-398ad924ee3d', '<p><span style=\"color: rgb(0, 0, 0);\">Destructor</span></p>\n', 0),
('95bd34cf-fef4-4b97-b828-70bf05a3e3ba', 'ba1b0113-cee8-40f2-84d5-fa92037c5108', '<p>5</p>\n', 0),
('95c72305-0fde-41c8-b44a-a6c2f2b2b476', 'b1e3404b-9cc7-4035-a403-0a107c55ca8b', '<p><span style=\"color: rgb(0, 0, 0);\">Before modification arr[3] = 4 After modification arr[3] = 10</span></p>\n', 1),
('95e05e53-ae6e-4b80-90eb-a8c23ba68e0d', '619875da-75a2-420e-8efb-ab888e5a9d37', '<p><span style=\"color: rgb(0, 0, 0);\">notify()</span></p>\n', 1),
('95fea147-785a-4751-803d-da577bbf3393', 'ba3276da-6cd7-4d0d-9bae-f3e6cb4a450f', '<p>s<span style=\"color: rgb(0, 0, 0);\">ame symbol</span></p>\n', 0),
('969dbfaa-7058-44b0-a76c-c877ff18f6c2', 'c4bce0ab-3379-451d-a907-a75db166300a', '<p><span style=\"color: rgb(0, 0, 0);\">Boo f = new Boo(24) { };</span></p>\n', 0),
('96b03d23-c521-43c9-93f6-1397525fb08b', '3ed553e3-2750-4efc-a1f2-9d365f86547c', '<p><span style=\"color: rgb(58, 58, 58);\">Virus Detection</span></p>\n', 0),
('97009c20-2d77-408f-8b7f-f767f5de43ed', 'b0ef3a25-c9f0-4e31-9bd9-7de6ee2710e1', '<p><span style=\"color: rgb(58, 58, 58);\">Denial Of Service</span></p>\n', 0),
('970805b9-e2b1-4d8f-ab8d-651d42cdd45d', '5319fc80-c527-4b05-a622-5abc5fd0b7e6', '<p>Yes using the @Transactional bean post processor</p>\n', 0),
('975dd940-97e0-401f-bc1a-584e54bbc6de', '3ed553e3-2750-4efc-a1f2-9d365f86547c', '<p><span style=\"color: rgb(58, 58, 58);\">Intrusion detection</span></p>\n', 0),
('976dd612-ae1e-405c-b67b-b64890f56691', '4086e69d-a1ce-49e1-944e-0ac3c0ab5e12', '<p><span style=\"color: rgb(0, 0, 0);\">Thread t = new Thread(X);</span></p>\n', 0),
('977bea7e-b994-4c1b-8594-b9f005d4fe8f', 'c496f124-ba4d-4b52-bd5c-0e276dda577e', '<p>AED</p>\n', 0),
('97837428-9758-4557-9073-ccf1a090f0a5', 'e640b581-70e9-4876-bed6-979e0020c257', '<p>S<span style=\"color: rgb(0, 0, 0);\">imple Text</span></p>\n', 0),
('9787c393-ff5b-4dbc-8824-78754fc8107b', '3ed553e3-2750-4efc-a1f2-9d365f86547c', '<p><span style=\"color: rgb(58, 58, 58);\">Key wrapping</span></p>\n', 1),
('97e85c6b-6117-4609-a79d-550d3fdf51c1', '4ee9a575-073c-4f4d-972b-730e5a37c1b3', '<p><span style=\"color: rgb(0, 0, 0);\">You must have a reference to an instance of the enclosing class in order to instantiate it.</span></p>\n', 0),
('97edf323-d91f-4698-a7a9-f444065a0b48', 'ba3276da-6cd7-4d0d-9bae-f3e6cb4a450f', '<p>p<span style=\"color: rgb(0, 0, 0);\">rovide two symbols for each</span></p>\n', 0),
('97f4a3c5-772b-4327-8a02-cb2b2380d4ec', 'ea3508e2-270e-4ff5-9e52-2721d9719d6b', '<p><span style=\"color: rgb(0, 0, 0);\">start();</span></p>\n', 1),
('97fe1824-c170-4223-9770-9ca63f547137', '37155d05-5e33-43e7-82ed-5350b5610c85', '<p><span style=\"color: rgb(58, 58, 58);\">Man in the middle attack</span></p>\n', 0),
('984d97fe-d087-4475-a569-74b3f71b27ab', 'd63c33e1-23f7-4a12-b516-ea4b28c8fcf4', '<p><span style=\"color: rgb(0, 0, 0);\">Both A and C</span></p>\n', 0),
('992d2d89-57aa-4575-8480-e410b284d77b', '890a50c2-fb7c-4ed7-94a8-9022f4c9f551', '<p><span style=\"color: rgb(0, 0, 0);\">enter and leave scope</span></p>\n', 1),
('992db3ed-e9ba-45d4-86b0-c42f618cd45b', 'a26e01d1-ab74-4990-966a-1bba5af5de4b', '<p><span style=\"color: rgb(0, 0, 0);\">&amp;&amp;</span></p>\n', 0),
('9939ef6b-5ed1-472f-8ea3-f6a532f84e89', 'ce8ac650-a7ff-49e5-af0f-4a04d18be4e7', '<p><span style=\"color: rgb(0, 0, 0);\">Inheritance</span></p>\n', 1),
('998f737b-856e-4103-b16f-d9ac26bd1d37', '52f03634-86b9-4b8c-813d-88eba7eab87c', '<p><span style=\"color: rgb(0, 0, 0);\">All of the above.</span></p>\n', 1),
('9a84c401-840d-42e4-9938-cab5482b5b14', '6e2f24da-aa99-49dd-9b95-0899bad785fd', '<p>Idle</p>\n', 0),
('9a938725-61bb-4a34-9ed4-cc5953d6ea61', '6b8dd378-7455-44cd-8784-518d341655bc', '<p>let</p>\n', 0),
('9ac5d303-2829-46d0-a5a8-37c14d919db3', '584b5e7f-ad40-4f23-8543-120500a58384', '<p><span style=\"color: rgb(58, 58, 58);\">2 pair of 5 similar rounds ; every alternate</span></p>\n', 0),
('9acf0ae1-f739-4ae0-9f54-cad285b820ce', '80be3ee9-500d-4ae2-9c82-c560e2be3d57', '<p>s<span style=\"color: rgb(0, 0, 0);\">ecret key</span></p>\n', 0),
('9ad98e69-69c1-4628-83bf-0f348c24643e', 'b0e3c6dc-8d5f-4031-9a20-ba5e2a06e1eb', '<p>plaintext</p>\n', 1),
('9b2af7c9-f11c-4d63-9ac8-7824d8d7d0c0', 'df5344ec-28fe-46fa-904a-e703dd8de6ed', '<p>Frames</p>\n', 0),
('9b2e8a59-9c14-4bc6-8df4-51c8ca5db44a', '90c6a5e4-2b54-444f-a053-c64f4104454f', '<p><span style=\"color: rgb(58, 58, 58);\">MPAHT</span></p>\n', 0),
('9b769ec5-2bd0-49a4-85c3-8e8ef2fae943', '084dfd57-8b1c-4835-9b79-7aba5f9367d2', '<p><span style=\"color: rgb(58, 58, 58);\">Random Polyalphabetic, Plaintext, Beaufort, Playfair</span></p>\n', 0),
('9bc5ec6a-a967-44fb-97fd-b7e01369b9f6', '1eb8d787-20d0-4ebf-8b4b-820e50709c24', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 0),
('9bd9b309-3351-4c0b-acf9-2d557e82e4f3', 'cd59c15f-bc1b-4ba5-b31a-989cd2d5d8bf', '<p><span style=\"color: rgb(0, 0, 0);\">All the argument will be the default argument.</span></p>\n', 0),
('9be37ff5-22d5-4a2f-8338-01e1e412fda0', '865bd10a-abf4-46f7-b1fb-6daa2e9e9549', '<p><span style=\"color: rgb(0, 0, 0);\">1,2 and 3</span></p>\n', 0),
('9c495014-3843-4a6a-9465-89c6f170b899', '8eca3eb8-e9b9-4f76-9e72-c861cba69ac6', '<p>argv is a member of function pointer.</p>\n', 0),
('9c5445f2-b825-419e-ad66-1ac7fc821f49', '447549cc-b15f-461d-848d-6c082c980fea', '<p><span style=\"color: rgb(0, 0, 0);\">j = -1</span></p>\n', 0),
('9c6f6da3-5a23-4782-9a7f-77defe082774', 'b769793f-14ac-4991-b7e8-4420bb0dbca6', '<p><span style=\"color: rgb(0, 0, 0);\">65480,65496</span></p>\n', 1),
('9c7a1a13-b1ea-4878-8f80-8f02ff81217f', 'e4064b35-e49e-404a-9bd5-d81ae5d4c0bb', '<p><span style=\"color: rgb(0, 0, 0);\">#</span></p>\n', 0),
('9c7ef783-c067-4cd1-ad06-f6e7bc70aa70', '7e30eb56-b62a-412a-9f9b-a7354b2167ca', '<p><span style=\"color: rgb(0, 0, 0);\">An AssertionError is thrown and finished is output.</span></p>\n', 0),
('9c8eb41c-68cf-4214-9e64-5939559b16aa', '1fbc2aa6-3102-4cf2-82d6-9691502bb110', '<p><span style=\"color: rgb(0, 0, 0);\">A static data member can be accessed directly from main().</span></p>\n', 0),
('9c9673d6-3db4-4672-a8a2-d6b2839b9b13', '84b518db-44d8-4c10-8585-790550ef409a', '<p><span style=\"color: rgb(0, 0, 0);\">Public</span></p>\n', 0),
('9ca1acc5-9d87-4f11-9078-73e1d093ca91', '52f03634-86b9-4b8c-813d-88eba7eab87c', '<p><span style=\"color: rgb(0, 0, 0);\">Friend function can access protected data members of the class.</span></p>\n', 0),
('9cbb7c0b-9732-4e76-8b76-ba45949c896c', 'ba1b0113-cee8-40f2-84d5-fa92037c5108', '<p>10</p>\n', 1),
('9cc022cf-527a-4600-bc51-315b5dc43b55', 'b036a1b5-69ab-441e-80eb-e46e23047797', '<p><span style=\"color: rgb(58, 58, 58);\">RC6</span></p>\n', 0),
('9ceac5dc-e2c8-4c73-9006-c376940fbf8d', '49477fde-d1a5-4438-afd9-39a623f787c3', '<p><span style=\"color: rgb(0, 0, 0);\">true false</span></p>\n', 0),
('9d6e5942-bbbd-445b-8f6f-bf93e5b3ec29', '22c8c4e3-8004-4f7a-a886-bc958b03d27c', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are incorrect.</span></p>\n', 0),
('9d8ce3b7-1041-4cdf-bc48-21281bcfb6ff', '1fbc2aa6-3102-4cf2-82d6-9691502bb110', '<p><span style=\"color: rgb(0, 0, 0);\">A static data member is shared among all the object of the class.</span></p>\n', 0),
('9d9397d1-1bc1-4cd1-a34c-e58ca63b0af4', 'b48b7250-99e1-46e5-81eb-398ad924ee3d', '<p><span style=\"color: rgb(0, 0, 0);\">Zero-argument Constructor</span></p>\n', 0),
('9da14649-885d-4764-b31b-d7220a9bc72b', 'e640b581-70e9-4876-bed6-979e0020c257', '<p>P<span style=\"color: rgb(0, 0, 0);\">lain Text</span></p>\n', 1),
('9de10f1f-2cee-4e54-9da1-d22e8f0f23ff', 'afd657e2-d410-4a9a-8a15-3bc291dbecea', '<p><span style=\"color: rgb(0, 0, 0);\">no output</span></p>\n', 0),
('9de8fe17-1584-44e0-94fc-cddb6605f31e', '32be3e83-1e43-45a6-8df1-989761afd66e', '<p><span style=\"color: rgb(0, 0, 0);\">2,3,4</span></p>\n', 1),
('9ded3bb7-da58-441c-a249-fa38652c87c4', '708b65f3-0eb2-4769-a9c2-5f3dbdcb8aab', '<p><span style=\"color: rgb(0, 0, 0);\">finally exception finished</span></p>\n', 1),
('9df17b7d-4830-49b9-a6f8-919c3b3b3c62', '84b518db-44d8-4c10-8585-790550ef409a', '<p><span style=\"color: rgb(0, 0, 0);\">Static</span></p>\n', 1),
('9e4f965a-bfb4-48c4-88ec-1d3f9041b3ca', '91713327-0672-4bfd-b5b6-4f4b35ff9d68', '<p><span style=\"color: rgb(0, 0, 0);\">true</span></p>\n', 0),
('9e677c77-9d8e-4bb8-823f-521c822b79b0', '21cca90f-af01-476b-8969-61c577d8f5f9', '<p><span style=\"color: rgb(0, 0, 0);\">Default arguments can be provided for pointers to functions.</span></p>\n', 0),
('9e7fe46e-a875-4ce5-9595-112ad63a66cb', '6b8dd378-7455-44cd-8784-518d341655bc', '<p>ink</p>\n', 1),
('9eab9553-3103-4e05-a0ab-6ac922f44c71', 'cf47b14d-a23a-41e1-8af4-4b820f70164d', '<p><span style=\"color: rgb(0, 0, 0);\">1300,1400,1500</span></p>\n', 0),
('9ed9565e-7ed4-4ed1-a34f-aea46be96bca', '7218096a-30cf-47fa-bdb6-4d3197c445b9', '<p><span style=\"color: rgb(0, 0, 0);\">12,6,garbage</span></p>\n', 0),
('9efd015a-1ce1-4d43-b2f8-b750d6f7b26b', '6bcd2e5d-4ecc-4f7c-9673-6a4c4c822c2b', '<p>6 bits</p>\n', 0),
('9f113d3c-9869-478e-85e6-adc093731787', 'd16c1a0f-0f5c-418d-a664-4df03e59d63b', '<p><span style=\"color: rgb(0, 0, 0);\">new Thread(new MyRunnable()).start();</span></p>\n', 1),
('9f297ccf-8f3e-41dd-8447-ff721eef3ac9', '31b7ded0-5c4b-4c4c-a8f1-aa337b8cb46e', '<p><span style=\"color: rgb(0, 0, 0);\">Line 12</span></p>\n', 0),
('9f3ec375-d77d-4902-9225-9deac2b74f88', 'e00f2b76-14f5-43cd-89a3-1cdc87ccdec0', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,4</span></p>\n', 1),
('9f646f7b-8bde-4787-a3e3-620003cdf0dc', '3ec25e9b-4cf1-47e9-9cc2-c0b44b22c57d', '<p><span style=\"color: rgb(0, 0, 0);\">near=4 far=8 huge=8</span></p>\n', 0),
('9fa932f9-a62c-40da-bf11-65c051fb13d9', 'b0ef3a25-c9f0-4e31-9bd9-7de6ee2710e1', '<p><span style=\"color: rgb(58, 58, 58);\">Network Injection</span></p>\n', 0),
('9fe8f5a0-3a62-4bb6-92be-251deba6276b', '084dfd57-8b1c-4835-9b79-7aba5f9367d2', '<p><span style=\"color: rgb(58, 58, 58);\">Random Polyalphabetic, Vignere, Playfair, Plaintext</span></p>\n', 1),
('9ff968c3-2854-4135-ac29-ba7e71263ba2', '5a307b74-35cb-4282-9095-f9b477970c1a', '<p><span style=\"color: rgb(58, 58, 58);\">Man in the middle attack</span></p>\n', 0),
('9ffd137c-5a6a-4967-9705-938723aed2cc', '4deb4223-67d8-4fb2-be7c-3c0cb7631017', '<p><span style=\"color: rgb(0, 0, 0);\">garbage value</span></p>\n', 0),
('a00cbe9f-716b-4b6c-ba8f-b7df0edffd01', '3b6cd918-13cb-4c31-aaf9-454f9e4d13c1', '<p><span style=\"color: rgb(58, 58, 58);\">ABANDONED LOCK</span></p>\n', 0),
('a039c337-d12a-43d9-a7ba-31341e4bda35', 'f033ba2b-7979-4a4a-8457-4c1881af4e64', '<p><span style=\"color: rgb(0, 0, 0);\">A referenced has to be de-referenced to access a value.</span></p>\n', 0),
('a0501a01-adc4-46e8-95e0-51304f5a8465', '8fddb5aa-a4b9-42c8-94a8-d9b2efe30f91', '<p><span style=\"color: rgb(58, 58, 58);\">KD</span></p>\n', 1),
('a06b4a0e-ce57-4db1-ad2c-4014a190fce5', '1c66aaab-23d3-4cd9-9bbf-00ba530949d2', '<p><span style=\"color: rgb(58, 58, 58);\">Message Field</span></p>\n', 0),
('a076c011-4b1f-46dc-94d8-df23733dfff2', 'bd2eebab-5454-4e6b-a84e-c5178d090099', '<p><span style=\"color: rgb(58, 58, 58);\">e, a</span></p>\n', 0),
('a078bb73-f940-4fc0-992c-921cc5091f9b', 'c063d3e6-028b-4123-823c-0d4b0d36449c', '<p><span style=\"color: rgb(0, 0, 0);\">2,3,5</span></p>\n', 1),
('a08b0d66-da26-4f45-b92f-c1222b80295b', '34ceb489-65b7-42ad-a670-ce40cfef106d', '<p><span style=\"color: rgb(0, 0, 0);\">treemap</span></p>\n', 0),
('a0f47960-d2db-4b8b-9cbd-499a1ec6d268', 'a975a79e-80b3-4b11-87f3-84dd0d36d389', '<p>2,2,2</p>\n', 0),
('a0fdcb95-70ce-44d3-92f0-36fbfbf4d8d2', 'a399587a-9d5b-4c67-b8db-196b7d8b9b45', '<p>0</p>\n', 0),
('a1877f12-bcef-4980-a9a3-962dba866ee7', '447549cc-b15f-461d-848d-6c082c980fea', '<p><span style=\"color: rgb(0, 0, 0);\">j = 0</span></p>\n', 0),
('a196dc67-97b9-4a3d-ba71-16a66c3f540d', '4c513303-bc22-4e1d-a6d8-59d29d89f615', '<p>4</p>\n', 0),
('a1f2e601-3f07-49ce-b4cc-b7920f834341', 'e055d7f6-680c-4dee-8ad9-48d050f36c44', '<p>D<span style=\"color: rgb(0, 0, 0);\">ata Encryption Subscription</span></p>\n', 0),
('a206d0ee-de5a-4771-a509-2e75643e0241', 'b554c4f6-5c76-48e7-9825-2e70fb136e66', '<p>S<span style=\"color: rgb(0, 0, 0);\">ami alphabetic</span></p>\n', 0),
('a2416609-ad91-4359-946a-552960fee1c5', 'ea3508e2-270e-4ff5-9e52-2721d9719d6b', '<p><span style=\"color: rgb(0, 0, 0);\">construct();</span></p>\n', 0),
('a243f7ab-f248-47d4-bfa5-706e8ca11697', 'd28935cf-4e6b-4ed5-8139-c1b1f4d9e838', '<p><span style=\"color: rgb(0, 0, 0);\">Class is an instance of object.</span></p>\n', 0),
('a24d2b09-377a-4de1-a8bf-1287b750b5b1', '99d5a8bf-4fe9-4289-81ae-3ee84b62b381', '<p>MESS</p>\n', 1),
('a2519ac2-8cae-4957-a1d4-afd33e253cd7', '323fe7ec-17cc-4cf5-94b8-44a3a2941d5e', '<p><span style=\"color: rgb(0, 0, 0);\">constructor</span></p>\n', 0),
('a29dd275-c918-47bc-a566-95aad5927099', '7c8397ee-c948-4bc1-894c-f5a309d72197', '<p><span style=\"color: rgb(0, 0, 0);\">A default argument is checked for type at the time of declaration and evaluated at the time of call.</span></p>\n', 0),
('a2c250cc-15f7-4fe1-9474-6e89464ee11f', '99c1fc9a-32d6-4eca-a788-6b4dd8e805fd', '<p>8</p>\n', 0),
('a2e87d9b-d4f7-4211-881b-91430eaf20ac', '65b919ee-839d-49b5-a4d4-51d7fb7312bf', '<p><span style=\"color: rgb(0, 0, 0);\">ptr is a array 30 pointers.</span></p>\n', 0),
('a309eb8f-8ac9-42be-a5c0-578400b0537f', '49477fde-d1a5-4438-afd9-39a623f787c3', '<p><span style=\"color: rgb(0, 0, 0);\">true true</span></p>\n', 0),
('a324fcc2-40e8-488d-b0a4-245374948a69', 'd63c33e1-23f7-4a12-b516-ea4b28c8fcf4', '<p><span style=\"color: rgb(0, 0, 0);\">A reference must always be initialized.</span></p>\n', 1),
('a377e03f-3313-4352-ac0c-8816e4ed8f3b', 'a8334b78-4e12-4f74-9a7e-68f78a6c4e89', '<p><span style=\"color: rgb(0, 0, 0);\">overload</span></p>\n', 0),
('a38cf14d-22a1-4781-b2e0-4817f05a4b1c', '729b473d-5d24-4a02-abf2-e46e675289b6', '<p><span style=\"color: rgb(0, 0, 0);\">Foo.Bar b = new Foo.Bar();</span></p>\n', 0),
('a3ec9513-7cc8-4374-9a3d-8bef37bba39b', 'eb70aee0-3931-4e3c-982f-c39907fd0c4d', '<p><span style=\"color: rgb(0, 0, 0);\">throws RuntimeException</span></p>\n', 0),
('a404e039-47f0-499f-8162-6cf678ae2e45', 'e055d7f6-680c-4dee-8ad9-48d050f36c44', '<p>D<span style=\"color: rgb(0, 0, 0);\">ata Encryption Standard</span></p>\n', 1),
('a41a2b30-79fa-44cc-8187-0e27a2125a8c', '3b6cd918-13cb-4c31-aaf9-454f9e4d13c1', '<p><span style=\"color: rgb(58, 58, 58);\">ENCRYPTED LOCK</span></p>\n', 0),
('a42f54d5-9216-48d2-8420-6854612a6f93', '35d93b30-fa1e-4cfd-85d8-4d233bdd43fc', '<p><span style=\"color: rgb(0, 0, 0);\">Friend keyword can be used for a function in the public section of a class.</span></p>\n', 0),
('a4428abf-b562-42ce-827f-dbd5739e3d39', '30f09c42-1ad0-4478-b022-867f637ec317', '<p>1</p>\n', 0),
('a4869acb-99f5-4954-ada8-8951afeab267', 'ec0f190a-a108-4cec-8b41-54589f088cd1', '<p><span style=\"color: rgb(0, 0, 0);\">There are syntax errors on lines 1 and 6.</span></p>\n', 0),
('a4adc0f6-6f4f-48ec-8e80-d468aabfb1a7', '93948488-fc2b-4e4f-b8cb-ae2ec8850ab6', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,3,4</span></p>\n', 0),
('a50e221d-b033-4757-ad09-07e907d1a528', '64e9e93f-d24d-42c8-8b38-8321b974f9fd', '<p><span style=\"color: rgb(0, 0, 0);\">111</span></p>\n', 0),
('a525667f-1102-4e61-9f2c-e6cdd67df40f', '700ecdf9-0656-4644-a3f1-ff8b4ee795e0', '<p><span style=\"color: rgb(0, 0, 0);\">Runtime.getRuntime().gc()</span></p>\n', 0),
('a52eb7cc-6f54-490f-b84f-205c782b261c', '35d93b30-fa1e-4cfd-85d8-4d233bdd43fc', '<p><span style=\"color: rgb(0, 0, 0);\">Friend keyword can be used on main().</span></p>\n', 1),
('a52fe1ba-a32a-42c3-a408-5c9691e5a1c6', '17c9a576-4af8-4d6b-9662-0b3771e50109', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.Hashtable</span></p>\n', 1),
('a5497eef-e658-4d10-a8cc-ee7bc9679979', '0efca4f7-d5ac-430a-9956-de997ed89038', '<p><span style=\"color: rgb(58, 58, 58);\">reducing the signal strength to the lowest level such that it still provides requisite coverage</span></p>\n', 0),
('a5a848e1-6e09-4f02-a813-73f8cbc5f7c5', 'a4b27f43-e63e-4083-89a6-bad1ae316ba7', '<p><span style=\"color: rgb(0, 0, 0);\">ostream.h</span></p>\n', 0),
('a5c8af11-db25-44db-8045-07a87e8acc26', '5a307b74-35cb-4282-9095-f9b477970c1a', '<p><span style=\"color: rgb(58, 58, 58);\">Non-Traditional Networks</span></p>\n', 0),
('a6406585-8d5a-4ff5-8024-e7f27221723b', '3d0d8409-4376-4330-9b1e-7fa0457f7b3b', '<p><span style=\"color: rgb(58, 58, 58);\">Man in the middle attack</span></p>\n', 1),
('a674d561-26b5-488e-be06-7f906d1ede53', '9d7139a0-90e1-4ac9-a5fe-307aeb603c9e', '<p><span style=\"color: rgb(58, 58, 58);\">A scheme in which the password is XOR with a key and stored</span></p>\n', 0),
('a686ce1e-d488-4538-953a-aa6acfa74b82', 'bc45e0af-cdc1-4f11-ae94-d95e0935f31d', '<p><span style=\"color: rgb(58, 58, 58);\">tbqyrvmwuwjphfvvyyrfznydokvl</span></p>\n', 0),
('a69e7636-1032-4a93-bfc7-19c2c5a55315', 'a975a79e-80b3-4b11-87f3-84dd0d36d389', '<p>1,1,1</p>\n', 0),
('a6d29d93-b80b-413d-8cf8-e7e4f712f1a1', '9da40fa1-e8ea-4dee-b61c-9ffbda01d1d2', '<p>16</p>\n', 0),
('a6db9bf1-2151-4f07-be78-47d5299752ac', 'cc400152-7308-476a-8652-e3a3ea09dd3a', '<p>2</p>\n', 0),
('a6ea1f2f-ac65-4138-85ad-7a074ff38d16', '6f59cdd9-2569-4096-9893-20ee4a99663a', '<p><span style=\"color: rgb(0, 0, 0);\">exits synchronized code</span></p>\n', 0),
('a7106861-9d6f-44b3-869a-ce5cb95d5ff8', 'e640b581-70e9-4876-bed6-979e0020c257', '<p>Empty Text</p>\n', 0),
('a71a5158-5880-4ec3-9408-0ba84f3f0b6d', '88449f01-af37-4535-b9a3-352abc40aac1', '<p><span style=\"color: rgb(0, 0, 0);\">Destructors can take arguments but constructors cannot.</span></p>\n', 0),
('a72207ee-04ff-459c-a0a6-d56af309e725', '1c129c2c-fe24-4c2f-95f7-b414217628ee', '<p><span style=\"color: rgb(0, 0, 0);\">char *p = (char *)(malloc*)(100);</span></p>\n', 0),
('a769f696-d2c6-4a7c-917c-cd6746b21e86', 'c39b735b-3dd5-408a-ba24-5f6ce096f509', '<p><span style=\"color: rgb(0, 0, 0);\">6 3</span></p>\n', 1),
('a79e460c-2258-4b28-a880-9f4d739e523a', '88449f01-af37-4535-b9a3-352abc40aac1', '<p>Constructors can take arguments but destructors cannot.</p>\n', 1),
('a7a622ce-f2c6-4e4a-8f80-35813fa08e11', 'df5344ec-28fe-46fa-904a-e703dd8de6ed', '<p>Bits</p>\n', 0),
('a8b2ffd3-d876-4734-a056-e34fea2cf412', 'fe91ca63-860c-4001-a397-23a6e2ebddbd', '<p>6</p>\n', 0),
('a94ea778-cf0b-4010-9002-8f40783f20f4', '6e5146f8-bb17-481b-9748-dd3c300dae40', '<p><span style=\"color: rgb(0, 0, 0);\">Garbage value</span></p>\n', 0),
('a95af4a9-905b-400c-b915-506438fdace8', '90c6a5e4-2b54-444f-a053-c64f4104454f', '<p><span style=\"color: rgb(58, 58, 58);\">THWOE</span></p>\n', 0),
('a9ebc728-6c35-4d38-8afb-774e681e18ed', '64e9e93f-d24d-42c8-8b38-8321b974f9fd', '<p><span style=\"color: rgb(0, 0, 0);\">0</span></p>\n', 0),
('aa2d59cf-a492-4e37-abdc-8832cd0378c7', '95eb037d-9935-4054-9dd5-148513dc49d6', '<p>True</p>\n', 0),
('aa2eb72a-0a63-49c2-b218-2fac3539df85', '93948488-fc2b-4e4f-b8cb-ae2ec8850ab6', '<p><span style=\"color: rgb(0, 0, 0);\">1,3,5,4</span></p>\n', 0),
('aa4ba34a-af1f-4c41-870c-c23807b2592e', '37155d05-5e33-43e7-82ed-5350b5610c85', '<p><span style=\"color: rgb(58, 58, 58);\">Network Injection</span></p>\n', 1),
('aa583e89-4338-4f0f-96db-c9acb75960ad', 'f5443a7b-decd-46e9-b5b1-d10e9d94f428', '<p><span style=\"color: rgb(0, 0, 0);\">Base address of the array</span></p>\n', 1),
('aa7bf1db-e97b-4190-a097-f5b9dcfac1ab', 'b0e3c6dc-8d5f-4031-9a20-ba5e2a06e1eb', '<p>decryption</p>\n', 0),
('aa80d54b-0f0c-4ac1-a3ab-37bfa79ded75', 'a933686f-3aed-46fc-96d8-3bde8801091c', '<p><span style=\"color: rgb(0, 0, 0);\">Both B or C</span></p>\n', 0),
('aa83241c-b45a-4bf5-932e-0908492a92b1', 'ff5f02b9-c3f0-4523-98f4-020baf45e091', '<p><span style=\"color: rgb(0, 0, 0);\">interface</span></p>\n', 1),
('aa917069-ac23-471a-ba7c-e90b83357719', 'd16c1a0f-0f5c-418d-a664-4df03e59d63b', '<p><span style=\"color: rgb(0, 0, 0);\">new MyRunnable().start();</span></p>\n', 0),
('aaf7a8da-8d64-4440-a8cf-ad0b18b1a87c', 'd45b9106-7c6a-42a0-a6e0-c104a80889d4', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are correct.</span></p>\n', 0),
('ab302e9e-8d3c-4202-b6d1-9196d1eb0009', 'ce4ebe51-0e12-4727-a811-75c41915d087', '<p><span style=\"color: rgb(0, 0, 0);\">No parameter of a function can be default.</span></p>\n', 0),
('ab4a2af7-1c7d-4834-8e1c-bb93df0091f4', '904e4e87-425e-4368-b975-19f60d58592c', '<p><span style=\"color: rgb(0, 0, 0);\">Constructor</span></p>\n', 0),
('ab991d57-88b8-4d5a-8935-1578c8440ea5', 'fd98ac26-a592-41d9-bc84-1afb240ba084', '<p><span style=\"color: rgb(0, 0, 0);\">cmp is a void type pointer function</span></p>\n', 0),
('abc616e0-e58b-482f-9648-26fc34d175b4', 'b340aaab-3b82-4090-9225-bb3ea0f67227', '<p><span style=\"color: rgb(0, 0, 0);\">1,3,6</span></p>\n', 1),
('abceb642-f374-4158-9257-6b688f2c179b', 'f6e76ebe-9e06-4c3f-a99c-b9290b576d17', '<p>T<span style=\"color: rgb(0, 0, 0);\">hird Party</span></p>\n', 0),
('abf05363-baee-44b4-9368-d2a010d0b09e', '34ceb489-65b7-42ad-a670-ce40cfef106d', '<p><span style=\"color: rgb(0, 0, 0);\">The answer depends on the implementation of the existing instance</span></p>\n', 0),
('ac0383b6-a579-45c9-97d0-53fe74229e86', '7e4ce2c3-017f-433b-920f-65412d4d6b62', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 0),
('acc511cf-ac38-401b-a1b6-ff09cc276a50', '1ca48e83-f7f3-4c31-ab75-458c80cfba69', '<p><span style=\"color: rgb(0, 0, 0);\">class</span></p>\n', 0),
('ace5f689-6e3a-4909-8b2a-98f45fda389f', '28343bad-2ee2-498f-81b3-2cd9f90ddfa1', '<p><span style=\"color: rgb(0, 0, 0);\">3,2,1</span></p>\n', 0),
('ad0c8789-44f1-40ab-ab38-2c56d7dc764a', '531a7e26-8941-497a-b2b1-7932aa79e8e5', '<p>True</p>\n', 0),
('ad5f5392-19bb-48b8-858f-0561bf14c2cb', 'd2ca9fcc-b531-4f5c-8871-4492768b419a', '<p><span style=\"color: rgb(0, 0, 0);\">$</span></p>\n', 0),
('ad791b8b-bc8d-479b-8261-d1baa40e7852', 'e76565e1-009f-46f6-8017-efccbd01dba5', '<p><span style=\"color: rgb(0, 0, 0);\">Garbage collector never invoked in methodA()</span></p>\n', 1),
('ad7d81be-779a-418a-aa2e-290e2693e84b', 'cc400152-7308-476a-8652-e3a3ea09dd3a', '<p>4</p>\n', 1),
('ad885594-a500-4bec-8c87-89ebacf21188', '4b724f8d-7f59-4503-b92f-ff444be4a93f', '<p><span style=\"color: rgb(0, 0, 0);\">Create constructor</span></p>\n', 0),
('adaed941-baa2-4a5e-86a7-f2cf1ac0a778', 'bd2eebab-5454-4e6b-a84e-c5178d090099', '<p><span style=\"color: rgb(58, 58, 58);\">e, i</span></p>\n', 0),
('addf963e-3d8f-4704-be91-1e5f6e891175', '07383d27-accb-446f-818a-c2f084e306f6', '<p><span style=\"color: rgb(58, 58, 58);\">D.DSS</span></p>\n', 0),
('adeb68bf-a084-4d7a-92cb-434c5d2e8ce1', '904e4e87-425e-4368-b975-19f60d58592c', '<p><span style=\"color: rgb(0, 0, 0);\">Destructor</span></p>\n', 0),
('ae1c457c-2e94-4c1f-acb1-69826490d1b8', 'e9d4c9b1-c6cd-4cb0-b22f-320409c73854', '<p>Always commit</p>\n', 0),
('ae8509c6-e143-403c-b7a4-25db71362dab', '9da40fa1-e8ea-4dee-b61c-9ffbda01d1d2', '<p>14</p>\n', 1),
('aea6a53f-0219-4f0a-81b0-1f03d1e7f37e', 'bbea72ad-5557-4a75-9b10-9deb2ab52434', '<p><span style=\"color: rgb(0, 0, 0);\">Public members of the base class become private members of derived class.</span></p>\n', 0),
('aeee61a5-e055-4742-abae-e8a5cfb84236', '0efca4f7-d5ac-430a-9956-de997ed89038', '<p><span style=\"color: rgb(58, 58, 58);\">installing the wireless access point away from exteriors of the building</span></p>\n', 0),
('aef40d6e-5912-45bc-8fed-579f359848e5', '3144b4d7-e4a8-4df1-b596-6cbaa0459097', '<p>14</p>\n', 0),
('af47d3d3-4040-41eb-9168-4b5521e7034f', 'bc45e0af-cdc1-4f11-ae94-d95e0935f31d', '<p><span style=\"color: rgb(58, 58, 58);\">baiuvmwuwjphfoeiyrfznydokvl</span></p>\n', 0),
('af7c819e-bbb3-446c-8e3d-4591e5eca66d', 'a399587a-9d5b-4c67-b8db-196b7d8b9b45', '<p><span style=\"color: rgb(0, 0, 0);\">garbage value</span></p>\n', 0);
INSERT INTO `quiz_options` (`id`, `question_id`, `body`, `isCorrect`) VALUES
('af9794fe-0a67-40fc-a302-eb9a53590b27', '946b9fc9-deab-427c-a5e0-32076d95438e', '<p><span style=\"color: rgb(0, 0, 0);\">If a is true and b is true then the output is \"A &amp;&amp; B\"</span></p>\n', 0),
('afd77a13-2a5f-40ef-9f3a-609de21f28a2', 'd67ccf4b-7a89-47e5-8f8a-6eba109a8bc8', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.LinkedHashSet</span></p>\n', 0),
('b02877ac-6ab0-49bb-85da-646199081c8d', '6b8dd378-7455-44cd-8784-518d341655bc', '<p>ite</p>\n', 0),
('b085c430-7ed5-4f96-91dc-aeca632a51b2', '700ecdf9-0656-4644-a3f1-ff8b4ee795e0', '<p><span style=\"color: rgb(0, 0, 0);\">x.finalize()</span></p>\n', 0),
('b0ab72dd-ed10-46ef-bd26-c79593c28418', 'f369b3f8-96f1-4d1f-8dac-9a75466429b1', '<p><span style=\"color: rgb(0, 0, 0);\">An array of references is acceptable.</span></p>\n', 0),
('b0e973e6-a595-48a8-a6e9-8ccc34161c52', '533ddb28-1a7e-4d65-9261-89385b0b4187', '<p>void com.test.service.MyServiceImpl#transfert(Account account, Money amount)</p>\n', 0),
('b0fec0b2-dd08-4256-b4b3-8044013c2fd8', '2a80b448-834d-48ee-b7ca-c90f34cae525', '<p>e<span style=\"color: rgb(0, 0, 0);\">ntity authentication</span></p>\n', 0),
('b106c5cb-3315-4a83-8aa8-ffa57727dbcc', 'ba1b0113-cee8-40f2-84d5-fa92037c5108', '<p><span style=\"color: rgb(0, 0, 0);\">3+7</span></p>\n', 0),
('b1426649-45b5-468b-9e10-1765f936563e', '1c129c2c-fe24-4c2f-95f7-b414217628ee', '<p><span style=\"color: rgb(0, 0, 0);\">char *p = (char*)malloc(100);</span></p>\n', 1),
('b1a5a358-9256-4a82-a440-6e3efb36d116', 'b340aaab-3b82-4090-9225-bb3ea0f67227', '<p><span style=\"color: rgb(0, 0, 0);\">2,0,1</span></p>\n', 0),
('b1d5b364-f69c-49fd-8a59-76dc4988b567', '196cb202-2bcb-4662-9a33-8443184e8e41', '<p><span style=\"color: rgb(0, 0, 0);\">Calling the wait() method on an object.</span></p>\n', 0),
('b1fd9863-913a-4180-8fea-dc40f48d1464', 'a75eb5ab-b1fd-4b9c-8559-eee5667cd4d5', '<p><span style=\"color: rgb(0, 0, 0);\">stream slip stream</span></p>\n', 0),
('b2300430-346c-4765-9fe3-ef24970b113b', 'e857bb8f-9626-4b99-baf2-a840a3a43a4f', '<p><span style=\"color: rgb(58, 58, 58);\">O(log2 n)</span></p>\n', 1),
('b2678b28-c301-4293-8869-62c9398ba3dd', '0e9e1d1d-7829-461e-8921-1287127e9a1f', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are correct.</span></p>\n', 1),
('b2987768-91be-4589-9965-ea6100b44ebd', '4d5539a5-da8a-4f45-9783-ef8fd852e303', '<p><span style=\"color: rgb(0, 0, 0);\">syntax</span></p>\n', 1),
('b2a341d1-ec55-454d-9207-e429a75ed8fa', '97f90d30-7e06-44d5-9f59-fd0ab34c777b', '<p><span style=\"color: rgb(0, 0, 0);\">Both I and II are correct.</span></p>\n', 0),
('b2c46fd9-71c7-4cd2-b517-b98ba03b1423', 'bd52e1aa-5478-443e-8f9e-088cbb647f4a', '<p><span style=\"color: rgb(58, 58, 58);\">O [ n</span><sup style=\"color: rgb(58, 58, 58);\">50</sup><span style=\"color: rgb(58, 58, 58);\">].</span></p>\n', 0),
('b2efc992-7573-4108-9a3f-fd2e0b4330a9', 'd01e5f86-cf60-4533-aa1c-a2053ca58ac8', '<p><span style=\"color: rgb(0, 0, 0);\">3,2,15</span></p>\n', 1),
('b34b2561-34a8-4468-8eee-8628c2a5bbe6', '88449f01-af37-4535-b9a3-352abc40aac1', '<p><span style=\"color: rgb(0, 0, 0);\">Destructors can be overloaded but constructors cannot be overloaded</span></p>\n', 0),
('b3de29f8-85c1-41b2-9040-97cf6da19e79', '80116422-6102-41fe-a39d-72ea96de9433', '<p><span style=\"color: rgb(0, 0, 0);\">float *(ptr)*int;</span></p>\n', 0),
('b3e767c0-96b6-4ccc-a5c6-8afcffb83382', '1f43a0b2-87aa-4d6a-91aa-0f26a9ff06e6', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,3,4,5</span></p>\n', 0),
('b44fdecb-ec90-43d9-916f-5f26280bc4a3', '66d2b74a-54af-4cbc-acde-d45a3a011afc', '<p><span style=\"color: rgb(0, 0, 0);\">132 132</span></p>\n', 0),
('b4917106-39f7-46ca-86de-ecadb5edb854', '74ef9396-e72e-43dc-8039-a466f427ee2a', '<p><span style=\"color: rgb(0, 0, 0);\">Object</span></p>\n', 1),
('b4d2d190-2bd7-40fd-b8a7-8e25fe97fe59', 'a933686f-3aed-46fc-96d8-3bde8801091c', '<p><span style=\"color: rgb(0, 0, 0);\">Function prototype</span></p>\n', 1),
('b51be96e-5fb0-4782-b883-4eb6aa24d175', '4c8e4bb8-c80b-4f69-b94f-3c556f2c4f21', '<p><span style=\"color: rgb(0, 0, 0);\">The compiler would report an error.</span></p>\n', 0),
('b548ad9f-ee34-4e31-b3f4-6a293b718455', '790ed3fe-84db-406f-8398-f7bd0a9363e0', '<p>r</p>\n', 0),
('b55858ba-97ed-47e9-90e6-33829736aec4', '07383d27-accb-446f-818a-c2f084e306f6', '<p><span style=\"color: rgb(58, 58, 58);\">D.DRS</span></p>\n', 1),
('b57f09df-1c7a-46e2-bbbc-659bed09c88f', 'bcfa0f27-a65a-4bb9-9704-6f62a4a1838f', '<p><span style=\"color: rgb(0, 0, 0);\">Making at least one member function as pure virtual function.</span></p>\n', 1),
('b58acfa8-4e3d-4d5a-9c69-1585ae2b013d', 'ea1e9589-a40d-4098-b2d5-92069713050f', '<p><span style=\"color: rgb(58, 58, 58);\">44 words</span></p>\n', 0),
('b5fe74de-c3a1-4744-a542-3ea9eb7c2b55', '729b473d-5d24-4a02-abf2-e46e675289b6', '<p><span style=\"color: rgb(0, 0, 0);\">Bar b = new f.Bar();</span></p>\n', 0),
('b6032cfe-c85a-4d96-8403-e58aa90a2e57', '7ed8d220-751e-4618-8245-95e7ad8ca941', '<p>o<span style=\"color: rgb(0, 0, 0);\">ne-to-many relationship</span></p>\n', 1),
('b61047cb-5a96-49b7-aaa3-97ac3cac17b6', '4c8e4bb8-c80b-4f69-b94f-3c556f2c4f21', '<p><span style=\"color: rgb(0, 0, 0);\">The program may crash if some important data gets overwritten</span></p>\n', 1),
('b612defc-23cd-4333-95ad-bc521590c766', '99c1fc9a-32d6-4eca-a788-6b4dd8e805fd', '<p>4</p>\n', 1),
('b61b7566-a3c5-4d1e-a282-24af7036cd1f', '2a80b448-834d-48ee-b7ca-c90f34cae525', '<p>n<span style=\"color: rgb(0, 0, 0);\">onrepudiation of messages</span></p>\n', 0),
('b6703cfa-1de9-478d-932c-2a2ba5ccb9ed', 'c549266d-0fa5-411a-a88f-af7543d0a610', '<p><span style=\"color: rgb(0, 0, 0);\">Both A and B.</span></p>\n', 0),
('b6728a26-27e1-422b-a422-16d1f31f271c', '8290b212-9c4b-4e5b-a0aa-9bec42f61bc9', '<p><span style=\"color: rgb(0, 0, 0);\">0 1 2</span></p>\n', 0),
('b69aec92-635d-4041-a634-72d34e694b32', 'a74fbf22-9c52-4858-8112-51e5e5a0b0f8', '<p><span style=\"color: rgb(0, 0, 0);\">garbage value</span></p>\n', 0),
('b8165fae-cd8c-462f-ad50-2d38bf09946f', 'e519b7fd-04c0-4be8-8929-99d259fb91ca', '<p><span style=\"color: rgb(0, 0, 0);\">Zero</span></p>\n', 1),
('b84db9dd-fc92-437b-931f-7038b91072e4', 'f5443a7b-decd-46e9-b5b1-d10e9d94f428', '<p><span style=\"color: rgb(0, 0, 0);\">First element of the array</span></p>\n', 0),
('b8674af1-5ad5-46fe-b1a4-e99198164b99', 'e00f2b76-14f5-43cd-89a3-1cdc87ccdec0', '<p><span style=\"color: rgb(0, 0, 0);\">3,2,1</span></p>\n', 0),
('b8983f7c-f424-48a2-9346-700d442f9eef', '99d5a8bf-4fe9-4289-81ae-3ee84b62b381', '<p>error</p>\n', 0),
('b8a3edf3-e085-401a-9d4f-e7244826a868', '1ca48e83-f7f3-4c31-ab75-458c80cfba69', '<p><span style=\"color: rgb(0, 0, 0);\">runnable</span></p>\n', 0),
('b8ffc4d9-384e-425d-a9b8-d52a15dad815', '1c66aaab-23d3-4cd9-9bbf-00ba530949d2', '<p><span style=\"color: rgb(58, 58, 58);\">Message Digest</span></p>\n', 1),
('b915d20c-727a-4d68-ace6-97d7d8bc5d42', '92dc67ba-8162-4a2f-b44b-6edb7fe8cde5', '<p>p<span style=\"color: rgb(0, 0, 0);\">lain cipher</span></p>\n', 0),
('b9991242-f34b-42fb-bd99-6a0df10440fd', '790ed3fe-84db-406f-8398-f7bd0a9363e0', '<p>q</p>\n', 0),
('b9b1d28e-4bf6-458e-b922-8e503e404af0', '77f984fe-9782-4a1c-a8ee-20591ea67f9c', '<p><span style=\"color: rgb(0, 0, 0);\">&amp;&amp;</span></p>\n', 0),
('b9f4090e-0e52-4592-a1cd-d967bfeae734', 'ee9c5618-a5d6-4a19-9c86-cbbdf7473677', '<p>Others</p>\n', 1),
('ba477703-8699-4559-8030-5e5b308c8742', 'bc97a1ca-62d7-465d-bcbc-e50439d5aa69', '<p><span style=\"color: rgb(0, 0, 0);\">int [] myList = {\"1\", \"2\", \"3\"};</span></p>\n', 0),
('ba5b51bf-84cd-4b84-94f5-62f4f205f1da', 'c809565d-5e85-49ed-8c9d-03b6a002b687', '<p>From inside the main().</p>\n', 0),
('ba62855f-3326-4c8b-8216-dc38d7a72050', '3750c3b3-5ad8-48ca-9efe-b818013d4866', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.TreeMap</span></p>\n', 0),
('ba6ac6c3-070a-4b7f-bddf-f04200afa8cb', 'e59f3415-988a-4ed7-b619-dedb2b98b652', '<p>10</p>\n', 0),
('babfe6f2-c99f-4e4a-be59-3ee4a4650579', '3d464d28-b913-4dd0-8c4d-c7bbb248cd5b', '<p>110</p>\n', 1),
('bb34eefe-446f-481a-b4d2-a4626dfe9498', 'f1df04a8-5473-45cd-8b62-58626a2abeef', '<p><span style=\"color: rgb(0, 0, 0);\">Compilation fails.</span></p>\n', 0),
('bb9d4cb2-72e2-4d25-acda-35726c51d781', 'bd401b0a-b28c-4a06-91b1-fcb79903419b', '<p><span style=\"color: rgb(58, 58, 58);\">O[ an</span><sup style=\"color: rgb(58, 58, 58);\">10</sup><span style=\"color: rgb(58, 58, 58);\">&nbsp;].</span></p>\n', 0),
('bbbc39a7-04ea-40c5-8355-444a9d2ca80b', 'efeca7b0-1664-4b18-b683-672fba5d00c3', '<p>RowCallbackHandler</p>\n', 0),
('bc01fa93-51fd-40f2-88b5-10d0d46c8ea2', '4ae3ce39-fa01-4a89-ac5c-388656909464', '<p><span style=\"color: rgb(58, 58, 58);\">Secure Set Independent Device</span></p>\n', 0),
('bc09e488-c90e-4e77-911b-42c3e33bfd58', '7e4ce2c3-017f-433b-920f-65412d4d6b62', '<p>hello throwit RuntimeException caught after</p>\n', 0),
('bc0ccf72-6e7e-4526-82cc-4b61a5111bed', 'f1e65d34-919d-4f09-92be-4de4485b340f', '<p><span style=\"color: rgb(0, 0, 0);\">C is printed before exiting with an error message.</span></p>\n', 1),
('bc1d0b7b-8603-4e66-90bf-5e0c635526c7', 'bba85f8a-b0f8-4da6-b838-9b9a099667e8', '<p><span style=\"color: rgb(58, 58, 58);\">Rijndael</span></p>\n', 0),
('bc266d4d-8be6-48ec-98a1-d622405fab20', '9e94b142-28cd-4a67-8df9-03d809595ae5', '<p><span style=\"color: rgb(0, 0, 0);\">Member functions</span></p>\n', 0),
('bcb1ee06-f32d-40a6-881e-c00ebd009ba5', 'b769793f-14ac-4991-b7e8-4420bb0dbca6', '<p><span style=\"color: rgb(0, 0, 0);\">65480,65499</span></p>\n', 0),
('bcdb2313-a444-4a99-9dea-1eff54283e9e', '760594b4-9cbe-429a-94d2-5c8ce028b9b8', '<p><span style=\"color: rgb(0, 0, 0);\">ok dokey</span></p>\n', 0),
('bd1915d9-57e8-496e-9db6-44db0b0e2390', '0fbd2d42-f8d6-4edc-afa2-48610846fe73', '<p>JDBC statement execution</p>\n', 0),
('bd4ef6e6-c9e1-4cc7-8dcb-5ffc542013bb', '17e90cb5-caa0-4095-b182-a28b8d5cfaf3', '<p><span style=\"color: rgb(58, 58, 58);\">Wi-Fi4</span></p>\n', 0),
('bd74f3da-7c97-4f8f-82f7-f48355423122', 'b1e3404b-9cc7-4035-a403-0a107c55ca8b', '<p><span style=\"color: rgb(0, 0, 0);\">none of these</span></p>\n', 0),
('bdd502c5-a3f9-4741-8e4a-6aa7ac6d9f98', 'e00f2b76-14f5-43cd-89a3-1cdc87ccdec0', '<p><span style=\"color: rgb(0, 0, 0);\">1,4,2</span></p>\n', 0),
('be134d58-caa2-4c86-8b77-1d8cc6bbae41', '561422fd-1a46-425d-9431-9ee58b197054', '<p><span style=\"color: rgb(58, 58, 58);\">8031810176</span></p>\n', 0),
('be3381b2-082a-4e0b-b7e6-d6644ee1f2df', 'f706fdd5-ce7a-4982-89b8-db4f5984eda8', '<p><span style=\"color: rgb(0, 0, 0);\">1,5</span></p>\n', 0),
('be3427e8-7382-4550-8b3f-478148722f2f', '09f472e3-b4a0-42c1-acb0-03d022211980', '<p><span style=\"color: rgb(58, 58, 58);\">32 words</span></p>\n', 0),
('be393c3d-a87d-4f58-8693-3c3c92997ef6', '00f89d07-f5eb-46d6-bfa0-79ca7810086f', '<p><span style=\"color: rgb(0, 0, 0);\">after line 5</span></p>\n', 0),
('bea7a9f5-8988-4ddc-a565-022d29c64657', 'd0ce266f-5e20-4189-8d9a-86c2e135d8ae', '<p><span style=\"color: rgb(0, 0, 0);\">2 and 4</span></p>\n', 0),
('bed16b82-f619-4ef7-8261-73c603d9cd6b', '7904cb02-22a4-4e63-ba11-7852f41343a0', '<p><span style=\"color: rgb(0, 0, 0);\">7 7</span></p>\n', 0),
('bf3e2712-87dc-40a0-85a4-df7662a13d1b', 'fc3f855c-31e0-40a9-8b68-9ba0c614cd8c', '<p><span style=\"color: rgb(0, 0, 0);\">float f = \"1\";</span></p>\n', 0),
('bf5d6a5b-dafc-47f3-aa47-2e1da177f994', 'fe91ca63-860c-4001-a397-23a6e2ebddbd', '<p>4</p>\n', 0),
('bf89b37e-2ccc-40a2-8e83-6e69f0725785', 'c85ea1ba-7bb7-4db0-8fb5-7ea92ecb6d4b', '<p><span style=\"color: rgb(0, 0, 0);\">Line 12</span></p>\n', 0),
('bfa22bf9-e3fb-4e80-af63-75263e85674f', '1fbc2aa6-3102-4cf2-82d6-9691502bb110', '<p><span style=\"color: rgb(0, 0, 0);\">Both A and B.</span></p>\n', 1),
('bfc573ed-f946-4c5b-9f59-cf08590ef7a4', '32be3e83-1e43-45a6-8df1-989761afd66e', '<p><span style=\"color: rgb(0, 0, 0);\">4,4,4</span></p>\n', 0),
('bfd17d26-efdf-4d3c-85ce-68fdd6d8570d', '0fbd2d42-f8d6-4edc-afa2-48610846fe73', '<p>Data source access</p>\n', 1),
('c0a2abfa-1bcb-4343-95a1-2d3dcb5fd550', 'a83c9ada-5b44-4255-8864-97972f262216', '<p><span style=\"color: rgb(0, 0, 0);\">MyOuter.MyInner m = new MyOuter.MyInner();</span></p>\n', 1),
('c0a72d19-b9e6-4d18-9404-360eaff9ba2c', '84d8768c-cb94-498c-93fd-c1f89af08c90', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 0),
('c13510c6-9017-4d6b-b933-e9abf0026e9f', '9e8583dc-1815-4287-abda-e8679e4292e6', '<p>Separate</p>\n', 0),
('c13522e4-c2ca-4bb3-b35d-fa7d3d87be22', 'f215b4e5-e1df-48c3-8c77-edd383f16a9c', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 2</span></p>\n', 1),
('c1434396-af09-40fe-a651-e26c2d2b6d14', 'e0261cd8-bdce-4ed7-a43c-6c71ac89fdca', '<p>40</p>\n', 0),
('c176686a-02ed-4519-9c84-98965a0904a4', '82ec7648-df7f-464e-b07a-976a6624d775', '<p><span style=\"color: rgb(58, 58, 58);\">Malicious Association</span></p>\n', 1),
('c1ac58bc-877d-43bf-8d01-ac8241d3cb64', 'c7291bb0-18e6-4c84-a804-a488cf4f600e', '<p>o<span style=\"color: rgb(0, 0, 0);\">ne single group</span></p>\n', 0),
('c1cd2760-c106-4afc-9811-c7b52ce296a5', 'c8d851f2-6f5f-443a-9587-a69d40f14942', '<p><span style=\"color: rgb(0, 0, 0);\">protected</span></p>\n', 0),
('c1cec6c4-96a4-4edf-9d65-5c3450aaad9e', 'aabd6946-5fe4-4387-8128-349497038ad4', '<p><span style=\"color: rgb(0, 0, 0);\">Nothing. The program will not compile because no catch clauses are specified</span></p>\n', 0),
('c231de5c-b6aa-4f5e-93ce-7827b5f85999', '7ea903f4-db9a-402e-8f35-b14e1beb5468', '<p><span style=\"color: rgb(0, 0, 0);\">Line 20</span></p>\n', 0),
('c24c5277-a648-4387-95eb-3c98483f958e', '9fc7ae8e-2313-428f-b979-3fa9ad032420', '<p><span style=\"color: rgb(58, 58, 58);\">Barrier security</span></p>\n', 0),
('c25d40f3-b41f-4bf7-8354-8c1a13813a3f', '41a58626-c56c-43ef-a3ec-0494b8ab70c0', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 0),
('c270be18-d1dd-4e7a-9fd2-cde5b2ab119f', '36118c14-761f-458d-96f4-b01706f8d03e', '<p>Protected and public methods</p>\n', 0),
('c28ac637-efd9-4715-b663-e8226dbd7762', 'caf0ad30-c32e-46e7-aae1-0b34b2cf1810', '<p>error</p>\n', 0),
('c290351e-b7f6-4992-9438-7acf1bf83ea6', 'e555a426-2862-43d6-9848-3dd90cc431f0', '<p>3</p>\n', 1),
('c2b0ceca-4a75-4e5c-9155-6fc7f878961f', '7fd064b7-792b-435b-ac13-dcfd81888a5a', '<p><span style=\"color: rgb(58, 58, 58);\">Device security</span></p>\n', 0),
('c2d2f95d-ee15-42e3-aae5-c14c1ed02c19', '0062f70e-3f59-406a-a56a-d361fd45d4eb', '<p><span style=\"color: rgb(0, 0, 0);\">Constructors cannot have default parameters.</span></p>\n', 0),
('c2d41203-dc19-43df-92bc-7a2fb36b9f00', '49477fde-d1a5-4438-afd9-39a623f787c3', '<p><span style=\"color: rgb(0, 0, 0);\">false false</span></p>\n', 0),
('c2ea0ceb-0d7d-420a-a43a-273b6d1fd023', '28343bad-2ee2-498f-81b3-2cd9f90ddfa1', '<p><span style=\"color: rgb(0, 0, 0);\">1,3,2</span></p>\n', 0),
('c2f46b1c-9c1b-4f1e-9b6a-974020c2c0c5', 'caf0ad30-c32e-46e7-aae1-0b34b2cf1810', '<p>25</p>\n', 0),
('c31b5872-acc1-4344-829f-103cc213002a', '708b65f3-0eb2-4769-a9c2-5f3dbdcb8aab', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 0),
('c346cb70-f18c-4da4-9c47-1b07220af32f', 'aaff4ef9-4464-418f-8dc4-c74b471adb71', '<p>No joint point is defined</p>\n', 1),
('c348ce43-286a-4b6a-a6f5-eda2140ee5cf', '7a31c9b3-872b-419b-a706-fe04ca0b7a85', '<p><span style=\"color: rgb(0, 0, 0);\">8 5</span></p>\n', 0),
('c3b0ecdc-c4a6-4d68-88a6-3b7a04fdacbf', 'aabd6946-5fe4-4387-8128-349497038ad4', '<p><span style=\"color: rgb(0, 0, 0);\">Nothing. The program will not compile because no exceptions are specified.</span></p>\n', 0),
('c3f24d17-756c-472f-afce-d1b7acfee50c', 'bf8eb032-5d85-4375-b9b9-1c0acd84b8c4', '<p>3 keys</p>\n', 0),
('c41728c9-5387-4729-8ee5-9ee7be9f9ee6', '196cb202-2bcb-4662-9a33-8443184e8e41', '<p><span style=\"color: rgb(0, 0, 0);\">Calling read() method on an InputStream object.</span></p>\n', 0),
('c4886451-6fe5-4664-898e-6a87e02860ae', '4086e69d-a1ce-49e1-944e-0ac3c0ab5e12', '<p><span style=\"color: rgb(0, 0, 0);\">Thread t = new Thread(X); t.start();</span></p>\n', 0),
('c4886f0f-a493-429f-96ad-520c81f8e24a', 'eeca8ea1-0c10-4ad1-8d87-dfb2eaeaaac0', '<p><span style=\"color: rgb(58, 58, 58);\">1AD</span></p>\n', 0),
('c49702e7-e67b-4bfc-80c3-78b67e11afc3', '2d33ff1a-da20-456b-802c-c7a96872bb14', '<p><span style=\"color: rgb(0, 0, 0);\">private</span></p>\n', 0),
('c4db337b-3f5d-4f2d-992a-65889c003cc1', '07383d27-accb-446f-818a-c2f084e306f6', '<p><span style=\"color: rgb(58, 58, 58);\">D.SQR</span></p>\n', 0),
('c512e202-9338-4ad8-94fc-9dcb7960d969', '31b7ded0-5c4b-4c4c-a8f1-aa337b8cb46e', '<p><span style=\"color: rgb(0, 0, 0);\">Line 14</span></p>\n', 1),
('c532bc05-7d1a-4b61-8010-9e483ef6ad3a', '0108f3dd-8269-4758-8484-ef8811eb7393', '<p><span style=\"color: rgb(58, 58, 58);\">0.065</span></p>\n', 1),
('c5e39c4d-acc5-40a5-a30b-df4eb6ec16ef', '708b65f3-0eb2-4769-a9c2-5f3dbdcb8aab', '<p>finally</p>\n', 0),
('c652e9c1-49f7-45e4-82ec-98bd624a1cb8', 'eda3cf93-9ccf-4905-a6b9-b5d242186c2d', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are correct.</span></p>\n', 0),
('c6b17b20-efa3-4d5e-b7c2-e90b91915b05', 'b769793f-14ac-4991-b7e8-4420bb0dbca6', '<p><span style=\"color: rgb(0, 0, 0);\">65480,65489</span></p>\n', 0),
('c6b463fd-56c3-4259-901b-3fa92d0bef20', 'af6c3012-5eb0-4e91-86b0-993dd42b9fbe', '<p><span style=\"color: rgb(0, 0, 0);\">C++ does not allow the redefinition of a default parameter.</span></p>\n', 1),
('c6b6d491-1e5b-4f9a-8d99-1b77923e979b', 'ac944f01-eb77-42d2-a9a2-2db2f2fb0cf0', '<p>The execution of all public method having at least one parameter</p>\n', 0),
('c6cf13b8-aca4-4bec-82b4-489d4cd16c3d', '242f678d-c55e-4203-b28e-cc361350e933', '<p><span style=\"color: rgb(0, 0, 0);\">can be called</span></p>\n', 0),
('c705a3f1-85a9-4fda-81bc-744a32cf0230', 'e9d4c9b1-c6cd-4cb0-b22f-320409c73854', '<p>Rollback for checked exceptions</p>\n', 0),
('c70dd8a0-73ec-49de-aeb8-feb114354676', '187b908d-43dc-42fb-9646-ce50de416144', '<p><span style=\"color: rgb(0, 0, 0);\">6,3,1</span></p>\n', 0),
('c7102a62-97c2-4cf6-b76c-82ad0a7aa1e4', '2220c5d6-60a5-40f4-890d-a5d6a92e0bcb', '<p>A predicate that matches join points</p>\n', 0),
('c7114cb2-4697-44f8-8c24-bb42f0d94af1', 'd0ce266f-5e20-4189-8d9a-86c2e135d8ae', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 3</span></p>\n', 1),
('c71d6728-33e0-4c5e-bd10-865d668dad05', '242f678d-c55e-4203-b28e-cc361350e933', '<p><span style=\"color: rgb(0, 0, 0);\">cannot overloaded</span></p>\n', 0),
('c74b70b7-3b61-46b9-8c34-359bbc58eaef', 'a4b27f43-e63e-4083-89a6-bad1ae316ba7', '<p>iostream.h</p>\n', 1),
('c7687246-fc1e-4a9f-8fd0-6b8eec70b6cb', '5a960629-a10b-4e13-9cc5-09f3524a473d', '<p><span style=\"color: rgb(0, 0, 0);\">An object may be declared as a friend.</span></p>\n', 0),
('c78d8122-d0c4-489c-85fc-da756df6b358', '187b908d-43dc-42fb-9646-ce50de416144', '<p><span style=\"color: rgb(0, 0, 0);\">1,2,6</span></p>\n', 1),
('c798f5e2-1798-4062-9dc3-0fd533d71c4f', '198bbfd5-0f7a-47f6-a53b-df13da867262', '<p><span style=\"color: rgb(0, 0, 0);\">Representation of void pointer</span></p>\n', 0),
('c7b02a75-b860-4abc-acf2-4fdd3296c267', 'af6c3012-5eb0-4e91-86b0-993dd42b9fbe', '<p><span style=\"color: rgb(0, 0, 0);\">The default value for an argument cannot be function call.</span></p>\n', 0),
('c7bc1f38-62d7-4aca-9d36-0c503ec13036', '1a8b93f4-3305-4385-9c6a-112b55c9d7a7', '<p><span style=\"color: rgb(0, 0, 0);\">Two seconds after lock B is released.</span></p>\n', 0),
('c7e43b19-f0d6-4205-b593-15f3d116f82c', '09f472e3-b4a0-42c1-acb0-03d022211980', '<p><span style=\"color: rgb(58, 58, 58);\">54 words</span></p>\n', 0),
('c7ee9b6d-430b-4231-9e7c-e9c6c844ff86', '6bcd2e5d-4ecc-4f7c-9673-6a4c4c822c2b', '<p>8 bits</p>\n', 1),
('c8126463-0da6-4a15-a43b-0f971f3d8d96', '3c270c94-de39-4667-90fb-333d922156f4', '<p><span style=\"color: rgb(0, 0, 0);\">It compiles</span></p>\n', 0),
('c8131d46-5667-46ca-972c-7e2bad271018', 'a26e01d1-ab74-4990-966a-1bba5af5de4b', '<p><span style=\"color: rgb(0, 0, 0);\">!</span></p>\n', 0),
('c8300831-b6f8-4e8d-b700-cff019829c38', 'f6b546b8-4b06-4c87-b7a1-429152a17f1e', '<p><span style=\"color: rgb(0, 0, 0);\">Java.util.HashTable</span></p>\n', 0),
('c861147b-0a19-4638-8d0d-3bd60c2eeefc', '4ee9a575-073c-4f4d-972b-730e5a37c1b3', '<p><span style=\"color: rgb(0, 0, 0);\">It must extend the enclosing class.</span></p>\n', 0),
('c8958287-5bc9-4428-99c8-f5072e560492', '828e9cfd-e9c2-4fd6-9812-8fa676dfd2aa', '<p>False</p>\n', 1),
('c8aac710-4c37-4e45-9404-88723eeb07dc', '00f89d07-f5eb-46d6-bfa0-79ca7810086f', '<p><span style=\"color: rgb(0, 0, 0);\">There is no way to be absolutely certain.</span></p>\n', 1),
('c8fd8bd1-b4a0-4cb7-8dd3-82c0cf795dc7', '8e47c529-dc2c-431d-85dd-e681f150c82d', '<p>Both B and C</p>\n', 1),
('c95b2a22-9105-47b6-9ef9-e20df550d7a6', '176d6148-dea3-4472-a96c-963d199fca6f', '<p>Empty Text</p>\n', 0),
('c9924811-736b-4638-98a4-dbaa91b4b442', '308839d1-bb63-4629-977c-faf1a8a0aa7f', '<p>Scanning a package to detect annotated entity classes (with @Entity)</p>\n', 0),
('c9b32a98-e07c-4226-a12b-e3360472ce93', '584b5e7f-ad40-4f23-8543-120500a58384', '<p><span style=\"color: rgb(58, 58, 58);\">8 ; the first and last</span></p>\n', 0),
('c9b7e3e4-b1af-40cd-baed-97d4ba3043f6', '765ce8ef-18e7-465e-86cd-226efbb1b1ee', '<p><span style=\"color: rgb(0, 0, 0);\">1,3,6</span></p>\n', 1),
('ca43c16a-9fc2-40ff-b2c3-f58a40eb68ed', '4ae3ce39-fa01-4a89-ac5c-388656909464', '<p><span style=\"color: rgb(58, 58, 58);\">Secure Service Identifier</span></p>\n', 0),
('ca54a027-377c-4694-bad4-dfd2e83fdb3b', 'c809565d-5e85-49ed-8c9d-03b6a002b687', '<p><span style=\"color: rgb(0, 0, 0);\">From inside the constructor.</span></p>\n', 0),
('ca614e7a-4e70-480c-9102-c2bf539b9499', '7e30eb56-b62a-412a-9f9b-a7354b2167ca', '<p><span style=\"color: rgb(0, 0, 0);\">An AssertionError is thrown with the message \"assertion failed.\"</span></p>\n', 0),
('ca681dd9-a9ca-4967-ac06-a836a12fc302', 'f1e65d34-919d-4f09-92be-4de4485b340f', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 0),
('ca7386cd-a3cd-404a-8c66-3362ba4a97ac', '011fc229-cf60-46f5-8e89-e7b86fdec220', '<p><span style=\"color: rgb(0, 0, 0);\">subclasses</span></p>\n', 0),
('cab7a980-ffac-4d1a-b840-00101bc48100', 'b48b7250-99e1-46e5-81eb-398ad924ee3d', '<p><span style=\"color: rgb(0, 0, 0);\">Copy Constructor</span></p>\n', 0),
('cad83b47-d81b-4ec5-8004-b97a04dd4102', '71b0ecfc-c30b-441f-a9ce-813b5cc64f01', '<p>2</p>\n', 1),
('caf251ba-b2f7-41a1-bc9a-fa9b25bd7662', 'c7291bb0-18e6-4c84-a804-a488cf4f600e', '<p>f<span style=\"color: rgb(0, 0, 0);\">our groups</span></p>\n', 0),
('cb138327-cf4c-4d17-8830-b95aa8cba175', 'e0260f32-3bc1-4560-b507-3dbf955822ac', '<p><span style=\"color: rgb(0, 0, 0);\">57 22</span></p>\n', 1),
('cb26c5c9-c2fa-440e-b69b-09678b892e35', '5f44caf1-f485-4b74-984f-2f34a56aba35', '<p><span style=\"color: rgb(58, 58, 58);\">nlazeiibljji</span></p>\n', 1),
('cb273e99-ddaa-44f4-8a25-5af760e9ff9c', 'caf0ad30-c32e-46e7-aae1-0b34b2cf1810', '<p>11</p>\n', 1),
('cb28d5f7-fef8-460a-a44a-6c8067fa69b3', '64e9e93f-d24d-42c8-8b38-8321b974f9fd', '<p><span style=\"color: rgb(0, 0, 0);\">1</span></p>\n', 0),
('cb290e66-3c35-4d3b-80d8-cdf9605df1bb', '272a179d-3e85-4263-9b74-bed69505520d', '<p><span style=\"color: rgb(0, 0, 0);\">No error</span></p>\n', 1),
('cb779404-2327-43c6-ad7b-b8a51caa6f78', 'c549266d-0fa5-411a-a88f-af7543d0a610', '<p><span style=\"color: rgb(0, 0, 0);\">float = Show(int, float) Function(Tmp);</span></p>\n', 0),
('cbd079be-f753-41fe-8cdc-bdf83efb88da', '3d7f4959-cc33-4ec7-a0df-be440f033e68', '<p>-</p>\n', 0),
('cbe98005-bd17-4ce9-a8fb-79ba3e01be48', 'c549266d-0fa5-411a-a88f-af7543d0a610', '<p><span style=\"color: rgb(0, 0, 0);\">int Function(int Tmp = Show());</span></p>\n', 1),
('cbeb9f47-4553-4aad-8219-38dbe2a07f11', 'ae069b2b-a594-4d86-8d8d-3ad8da065342', '<p>False</p>\n', 1),
('cc0cf013-609c-42f2-89a1-f4ab7709b7b5', '8fddb5aa-a4b9-42c8-94a8-d9b2efe30f91', '<p>LD</p>\n', 0),
('cc0d26d8-d57d-4c03-ae64-6dcea2549b95', '80116422-6102-41fe-a39d-72ea96de9433', '<p><span style=\"color: rgb(0, 0, 0);\">float (*ptr)(int)</span></p>\n', 0),
('cc1dc138-7311-473a-a30d-65da3f2943ce', '3d464d28-b913-4dd0-8c4d-c7bbb248cd5b', '<p>111</p>\n', 0),
('cc2c6723-dee8-4c07-a256-c39157e2e09f', 'b04a8071-8156-48c7-9717-d5a85c8248d8', '<p><span style=\"color: rgb(0, 0, 0);\">\"odd\" will always be output.</span></p>\n', 0),
('cc3ae5c9-e1ab-4562-ae00-67d3eb132d7a', '4b724f8d-7f59-4503-b92f-ff444be4a93f', '<p><span style=\"color: rgb(0, 0, 0);\">Copy constructor</span></p>\n', 1),
('cc6eb96b-3ce2-45a9-93cf-6bf4dc7bbe61', '07383d27-accb-446f-818a-c2f084e306f6', '<p>C.DRS</p>\n', 0),
('cc8d4b52-d5f7-40bc-a387-9821afa0b85b', '7f2b1a60-53c9-4d8f-85e0-5f6e16b2e3cf', '<p><span style=\"color: rgb(0, 0, 0);\">f is a simple declaration of pointer variable.</span></p>\n', 0),
('cca5e7e8-ef8b-444d-a59e-a253b6b53e67', '97f90d30-7e06-44d5-9f59-fd0ab34c777b', '<p>Only I is correct.</p>\n', 1),
('ccb4bb98-c610-4473-89fe-c18179603c00', 'fd476b5d-6858-43d6-8a38-1f015e057016', '<p>HP</p>\n', 0),
('ccbb392b-c20d-4734-9220-fe305da454ea', 'ded1a528-d5ec-4307-84bf-303c6a5b718f', '<p>E<span style=\"color: rgb(0, 0, 0);\">lectronic Cipher Book</span></p>\n', 0),
('ccca4237-4ef4-4247-89ed-9f7980f59af9', '37155d05-5e33-43e7-82ed-5350b5610c85', '<p><span style=\"color: rgb(58, 58, 58);\">Malicious Association</span></p>\n', 0),
('cd10524f-0660-433a-b312-9aa61a751322', 'c063d3e6-028b-4123-823c-0d4b0d36449c', '<p><span style=\"color: rgb(0, 0, 0);\">2,1,3</span></p>\n', 0),
('cd3cdb06-0fb2-42ff-9302-cce55b86010d', '5f44caf1-f485-4b74-984f-2f34a56aba35', '<p><span style=\"color: rgb(58, 58, 58);\">mlaaeiibljki</span></p>\n', 0),
('cd5584a1-9eb0-41ca-bf2d-8249fc9ebc9f', '91713327-0672-4bfd-b5b6-4f4b35ff9d68', '<p><span style=\"color: rgb(0, 0, 0);\">false</span></p>\n', 0),
('cd6068da-1f88-4352-b826-6d71f7c01a76', 'ce4ebe51-0e12-4727-a811-75c41915d087', '<p><span style=\"color: rgb(0, 0, 0);\">Minimum one parameter of a function must be a default parameter.</span></p>\n', 0),
('cd64e7d4-c0b2-49bd-abaf-fa32e3897070', '09f472e3-b4a0-42c1-acb0-03d022211980', '<p><span style=\"color: rgb(58, 58, 58);\">64 words</span></p>\n', 0),
('cd696059-6003-4466-84e9-f499c4792bb0', 'feb50af5-92f8-424e-9eed-054649c25bec', '<p><span style=\"color: rgb(0, 0, 0);\">Private</span></p>\n', 1),
('cd9899a0-dac5-4d98-80ca-64556fe47dfb', '524eebd2-6eb0-47f2-9664-ea0c206837cf', '<p><span style=\"color: rgb(0, 0, 0);\">1 and -2147483648</span></p>\n', 0),
('cdd51951-fab4-4fbf-925c-ea48269aad2d', 'e0260f32-3bc1-4560-b507-3dbf955822ac', '<p><span style=\"color: rgb(0, 0, 0);\">45 38</span></p>\n', 0),
('ceaf6a7b-3af9-4ac2-b7ad-c4d6405b16a6', 'f6e76ebe-9e06-4c3f-a99c-b9290b576d17', '<p>B<span style=\"color: rgb(0, 0, 0);\">oth Party</span></p>\n', 1),
('ceb399ab-89ff-4b56-95ba-d77540cd4fb5', '49477fde-d1a5-4438-afd9-39a623f787c3', '<p><span style=\"color: rgb(0, 0, 0);\">false true</span></p>\n', 1),
('cec2350e-176a-4979-8981-b913c91608b7', '5192d827-d122-4384-808b-cda84660cb82', '<p><span style=\"color: rgb(0, 0, 0);\">Both B and C are incorrect.</span></p>\n', 1),
('ced6b431-8958-433e-88c7-76a1033bc99b', '08722535-474c-4047-b8d6-e836f3bb5e08', '<p><span style=\"color: rgb(0, 0, 0);\">try, virtual, throw, final, volatile, transient</span></p>\n', 0),
('ced8108a-6e98-41d9-9980-e342d23df72d', 'e0261cd8-bdce-4ed7-a43c-6c71ac89fdca', '<p>30</p>\n', 0),
('cf271f41-268b-426f-b711-852c8b08eff0', '7ea903f4-db9a-402e-8f35-b14e1beb5468', '<p><span style=\"color: rgb(0, 0, 0);\">Line 25</span></p>\n', 0),
('cf86861c-d72e-4dbd-baf8-35a9d123725e', 'bee079ca-ab87-4350-aae5-2761bb906c64', '<p><span style=\"color: rgb(0, 0, 0);\">BBC</span></p>\n', 0),
('cfeca83e-5af8-403f-80f2-f4ef56abe771', '21cca90f-af01-476b-8969-61c577d8f5f9', '<p><span style=\"color: rgb(0, 0, 0);\">A function can have all its arguments as default.</span></p>\n', 0),
('d049e181-7865-4a2c-b269-6bb65b5b4583', '5319fc80-c527-4b05-a622-5abc5fd0b7e6', '<p>Yes with the TransactionTemplate class</p>\n', 1),
('d0c12e13-70f8-47bc-9fef-9c6dda37f818', '3144b4d7-e4a8-4df1-b596-6cbaa0459097', '<p>16</p>\n', 0),
('d0d4acc1-6ff5-4160-b66b-10e711f87cf8', '7481f7dc-1ab2-4fd4-9820-aa937343e56b', '<p><span style=\"color: rgb(0, 0, 0);\">By declaring it abstract using the static keyword.</span></p>\n', 0),
('d0e39e75-763e-4570-8783-d45cba7c938e', '1f43a0b2-87aa-4d6a-91aa-0f26a9ff06e6', '<p><span style=\"color: rgb(0, 0, 0);\">garbage value 1,2,3,4</span></p>\n', 1),
('d0f4745d-05e0-4eeb-ac54-eba51ac925e4', '5f44caf1-f485-4b74-984f-2f34a56aba35', '<p><span style=\"color: rgb(58, 58, 58);\">olaaeiibljki</span></p>\n', 0),
('d0f67b9a-cf2d-43ee-a438-321868d25181', '8368390f-56ab-40ab-98c9-92f37e7b6925', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.Set</span></p>\n', 1),
('d1037c08-068c-4edc-863d-20e81a700c3e', 'a933686f-3aed-46fc-96d8-3bde8801091c', '<p><span style=\"color: rgb(0, 0, 0);\">Function call</span></p>\n', 0),
('d1403230-d9fa-4050-ad3e-a96ec660f690', 'f1df04a8-5473-45cd-8b62-58626a2abeef', '<p><span style=\"color: rgb(0, 0, 0);\">An AssertionError is thrown.</span></p>\n', 1),
('d1b092a6-17ff-492d-a06f-2551dd9990fe', '2744ee9f-4688-4f81-9c27-fb83fa76e67c', '<p><span style=\"color: rgb(0, 0, 0);\">The compiler always provides a zero argument constructor.</span></p>\n', 0),
('d202c2fc-3a89-4c33-ab8d-70a93294a7e6', '4b2d3b92-3853-4e20-bbab-ed52d9362f81', '<p><span style=\"color: rgb(58, 58, 58);\">O[ax</span><sup style=\"color: rgb(58, 58, 58);\">7</sup><span style=\"color: rgb(58, 58, 58);\">].</span></p>\n', 0),
('d20cfea0-a44c-4d15-8320-506a9b88979c', '41a58626-c56c-43ef-a3ec-0494b8ab70c0', '<p><span style=\"color: rgb(0, 0, 0);\">small</span></p>\n', 0),
('d214a721-65dc-4d27-bf14-dc5415c04f80', 'a8334b78-4e12-4f74-9a7e-68f78a6c4e89', '<p><span style=\"color: rgb(0, 0, 0);\">friend</span></p>\n', 0),
('d2e2df6e-7088-49a0-a743-b0e506f0f6af', '6e5146f8-bb17-481b-9748-dd3c300dae40', '<p><span style=\"color: rgb(0, 0, 0);\">10 , 223</span></p>\n', 0),
('d33542c6-c0ac-42eb-a39d-1928440371be', 'ce086ceb-f9ae-4931-9ee5-e78a57e80bf9', '<p><span style=\"color: rgb(58, 58, 58);\">Wireless Personal Access</span></p>\n', 0),
('d33b3e1b-5518-40b5-ab13-2dfa8e3e0dca', '7966aecd-baa5-4807-b467-60e29664d74f', '<p>0</p>\n', 0),
('d34bf4d1-f1bb-4d5a-b62c-1563da5e6c08', 'a83c9ada-5b44-4255-8864-97972f262216', '<p><span style=\"color: rgb(0, 0, 0);\">MyOuter.MyInner mi = new MyInner();</span></p>\n', 0),
('d3cd9d73-fb38-4429-807b-1268ae0fbd6d', 'bd401b0a-b28c-4a06-91b1-fcb79903419b', '<p><span style=\"color: rgb(58, 58, 58);\">O[ e</span><sup style=\"color: rgb(58, 58, 58);\">n</sup><span style=\"color: rgb(58, 58, 58);\">&nbsp;+ n</span><sup style=\"color: rgb(58, 58, 58);\">10</sup><span style=\"color: rgb(58, 58, 58);\">&nbsp;].</span></p>\n', 0),
('d3e24b06-e94d-464d-8eb5-5ff59e0695f4', 'd67ccf4b-7a89-47e5-8f8a-6eba109a8bc8', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.List</span></p>\n', 0),
('d44d144d-c385-4e63-b528-9d87722c04af', '30f09c42-1ad0-4478-b022-867f637ec317', '<p>10</p>\n', 1),
('d473fbcc-659b-4bed-97ad-5c3e3193a450', '2744ee9f-4688-4f81-9c27-fb83fa76e67c', '<p><span style=\"color: rgb(0, 0, 0);\">Both B and C.</span></p>\n', 1),
('d485c35b-06eb-4d23-b6fb-e4c6e8cb995d', 'fba871db-f705-436f-a009-399009759a03', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are correct.</span></p>\n', 0),
('d485e1e1-d6f0-4936-bf81-04212ae7c585', 'd28935cf-4e6b-4ed5-8139-c1b1f4d9e838', '<p>Object is an instance of data type.</p>\n', 0),
('d499aadb-a627-4d87-ae1c-3702dcbd6fc3', '3d7bf805-d7fa-47d3-a62f-b0dfe5d18950', '<p><span style=\"color: rgb(0, 0, 0);\">Virtual function</span></p>\n', 0),
('d4cd40d7-b9ea-4716-8c4e-2e7c3d242853', '243a91a1-7c5d-46af-9a5f-5a4d58f85266', '<p><span style=\"color: rgb(0, 0, 0);\">It can extend exactly one class and implement exactly one interface.</span></p>\n', 0),
('d4df19d4-3268-424f-abb0-134bbf8fee1e', '91713327-0672-4bfd-b5b6-4f4b35ff9d68', '<p><span style=\"color: rgb(0, 0, 0);\">An exception is thrown at runtime</span></p>\n', 0),
('d4f35103-7b0d-49d3-af13-59447cedd99b', 'e641806b-38f2-47e1-b314-1151ccd08d03', '<p><span style=\"color: rgb(0, 0, 0);\">Encapsulation</span></p>\n', 0),
('d4fb036a-327e-4be6-a9f3-2ef118f74fe5', '2220c5d6-60a5-40f4-890d-a5d6a92e0bcb', '<p>An aspect and a pointcut</p>\n', 0),
('d524b742-10ee-42ca-8ba7-ddd5458b3cc0', '4799b43f-71bf-4de0-b429-dd1b5b7fc6b1', '<p><span style=\"color: rgb(0, 0, 0);\">none of the above</span></p>\n', 0),
('d5353d6b-b306-446d-9d58-88acc792d7e5', '6026287c-3c29-4b96-93ad-93a679e106b4', '<p>False</p>\n', 1),
('d551bbf5-924a-406f-979c-212f120c026a', 'ec0f190a-a108-4cec-8b41-54589f088cd1', '<p><span style=\"color: rgb(0, 0, 0);\">There are syntax errors on lines 1, 6, and 8.</span></p>\n', 0),
('d583f0ac-4234-48a6-892a-aa1e6906f141', '2aa3a438-9382-499b-82ed-30c279f3651d', '<p>1</p>\n', 0),
('d5974887-36ea-4290-8665-1b077d051d0d', '8290b212-9c4b-4e5b-a0aa-9bec42f61bc9', '<p><span style=\"color: rgb(0, 0, 0);\">2 1 2 0 1 2</span></p>\n', 1),
('d610decb-cf5c-444f-9f4e-bcaedc763f9f', '89e92cdb-fe98-4c4c-98fc-f284b493c19c', '<p><span style=\"color: rgb(0, 0, 0);\">It is sometimes good practice to throw an AssertionError explicitly.</span></p>\n', 1),
('d6345dda-208f-4e97-b90e-5923d8271248', '9e8583dc-1815-4287-abda-e8679e4292e6', '<p>Authenticated</p>\n', 1),
('d681b6dc-d15d-467a-a068-6a289a8b9ee3', '755f4ada-0a94-4e78-a843-b24ba53f51c4', '<p>same</p>\n', 1),
('d6d69b88-8fd5-4cc4-bff9-e6c50a13e564', 'ea7802e1-52b2-4004-857d-d946cfc1c4c6', '<p>cipher</p>\n', 0),
('d7081f09-006d-441c-ba2b-b2e955ad0b32', 'fac6f8af-5dbe-4f68-859f-2e976a34ce9e', '<p>Flat</p>\n', 0),
('d7479360-8112-4a09-ab48-24b7eb368f18', 'a618a981-ddae-47e4-aa93-f9c1ba3b5fe3', '<p>X<span style=\"color: rgb(0, 0, 0);\">OR cipher</span></p>\n', 0),
('d79a7a77-6ba0-4db1-a10e-1adfca88acf3', '9e5d778a-b338-46fa-88f7-8e4a63601293', '<p><span style=\"color: rgb(0, 0, 0);\">Default constructor</span></p>\n', 0),
('d8ade6e0-cd43-4052-96b5-8a6c047094ba', 'c85ea1ba-7bb7-4db0-8fb5-7ea92ecb6d4b', '<p><span style=\"color: rgb(0, 0, 0);\">Line 14</span></p>\n', 0),
('d8b561f6-b0de-4922-a219-272535740222', '2f55f179-55b6-4e54-bc03-ab78558c28ba', '<p><span style=\"color: rgb(0, 0, 0);\">pf is a function of pointer variable.</span></p>\n', 0),
('d8f2b98d-c6a7-4b8e-b415-c26daad9126f', '6621a40a-7e9b-448d-8e23-8bc853b9b6b8', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 2</span></p>\n', 0),
('d929a96b-e9e9-44c5-b3eb-06087653ebca', '1891aa80-0d8c-4204-bfcb-13f456c761dd', '<p><span style=\"color: rgb(0, 0, 0);\">value = 8</span></p>\n', 1),
('d93e1f1a-37cc-4b5f-abd8-9682a51c4cd0', 'd32d514e-7fcc-439a-afc2-a8220c2d280e', '<p><span style=\"color: rgb(0, 0, 0);\">When the program terminates.</span></p>\n', 1),
('d94ab933-6af7-4c1f-b0c6-449b825735bf', '85d09d6c-782c-4c72-bb1a-53f1cbce37e5', '<p><span style=\"color: rgb(0, 0, 0);\">Both A and C.</span></p>\n', 1),
('d964d89e-21ac-42c0-8528-0f33e86f1929', '7218096a-30cf-47fa-bdb6-4d3197c445b9', '<p><span style=\"color: rgb(0, 0, 0);\">12,6,12</span></p>\n', 1),
('d990f423-7f4b-48b8-9db8-7336289e806e', 'ff5f02b9-c3f0-4523-98f4-020baf45e091', '<p>unsigned</p>\n', 0),
('d9952987-1982-4cd2-9896-faedb1c2198b', 'd32d514e-7fcc-439a-afc2-a8220c2d280e', '<p><span style=\"color: rgb(0, 0, 0);\">When the control comes out of the block in which they are being used.</span></p>\n', 0),
('d9ad5b34-e423-4b2d-a600-67cc0dbf2071', 'fb20dfb2-8232-482d-8c2d-56c664ecae0e', '<p><span style=\"color: rgb(0, 0, 0);\">During execution</span></p>\n', 0),
('d9addc41-60a8-42d8-b53a-112ed8c46320', 'b0ef3a25-c9f0-4e31-9bd9-7de6ee2710e1', '<p><span style=\"color: rgb(58, 58, 58);\">Accidental Association</span></p>\n', 1),
('d9b88b58-9626-44b2-8b8c-e67277942f5c', '760594b4-9cbe-429a-94d2-5c8ce028b9b8', '<p><span style=\"color: rgb(0, 0, 0);\">dokey</span></p>\n', 1),
('da100f7a-a948-4d58-a167-c81ac1f58025', 'f706fdd5-ce7a-4982-89b8-db4f5984eda8', '<p><span style=\"color: rgb(0, 0, 0);\">1,4</span></p>\n', 1),
('da5eab16-9dce-4161-bfb6-e6571b8eb58a', 'bf8eb032-5d85-4375-b9b9-1c0acd84b8c4', '<p>2 keys</p>\n', 1),
('daf5982a-8f29-4368-9071-4b18b1d3bad8', '7c8397ee-c948-4bc1-894c-f5a309d72197', '<p><span style=\"color: rgb(0, 0, 0);\">We cannot provide a default value to a particular argument in the middle of an argument list.</span></p>\n', 0),
('dc3bd15f-fc42-42e1-a518-827a7881cce2', 'feb50af5-92f8-424e-9eed-054649c25bec', '<p><span style=\"color: rgb(0, 0, 0);\">Public</span></p>\n', 0),
('dc547d0b-aeef-4542-9d81-72b9082423d2', 'afd657e2-d410-4a9a-8a15-3bc291dbecea', '<p>11</p>\n', 0),
('dc9efdf2-b9cc-4d2a-8ebb-361ffdc78427', '865bd10a-abf4-46f7-b1fb-6daa2e9e9549', '<p><span style=\"color: rgb(0, 0, 0);\">2,5 and 6</span></p>\n', 1),
('dca2e37c-610e-41af-84a0-57ccfc0aec42', 'a8334b78-4e12-4f74-9a7e-68f78a6c4e89', '<p><span style=\"color: rgb(0, 0, 0);\">override</span></p>\n', 0),
('dcb710b5-b7f4-40df-a814-49fdd208e825', 'a8334b78-4e12-4f74-9a7e-68f78a6c4e89', '<p><span style=\"color: rgb(0, 0, 0);\">operator</span></p>\n', 1),
('dd05163a-bdc1-4fea-8143-853fd895a9ea', '7e826e02-3c47-421e-b261-c86b37f0d65a', '<p><span style=\"color: rgb(0, 0, 0);\">after line 14</span></p>\n', 1),
('dd1a3fc1-db27-4ab6-b190-90d911c422cc', 'f26dcb4d-fad7-4545-9718-221c9eeee2fa', '<p>C<span style=\"color: rgb(0, 0, 0);\">orrupting Data</span></p>\n', 0),
('dd7d6a52-97d6-4c19-931c-b5155fb73d7f', '88c5ad2c-39da-4fd4-a87a-cce01395a388', '<p><span style=\"color: rgb(0, 0, 0);\">an object goes out of scope.</span></p>\n', 0),
('dd811b07-5272-4a40-b9ba-4c5ae5f52899', '4d5539a5-da8a-4f45-9783-ef8fd852e303', '<p><span style=\"color: rgb(0, 0, 0);\">logical</span></p>\n', 0),
('dda11884-8dad-4da0-86c7-40e8beb76017', 'ce4ebe51-0e12-4727-a811-75c41915d087', '<p><span style=\"color: rgb(0, 0, 0);\">Only one parameter of a function can be a default parameter.</span></p>\n', 0),
('ddb22dd6-b8d2-4b3c-9498-2298eff834e7', 'ca8f5506-6a7e-4fd4-af12-aa29e6abde01', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are correct.</span></p>\n', 1),
('ddb28e8b-1a42-4de8-9645-482dfb930c32', '206a984d-c83e-4002-977a-a30f35311af3', '<p>b<span style=\"color: rgb(0, 0, 0);\">lock of slots</span></p>\n', 0),
('ddb5ae20-c55c-4ef9-8ba3-ac41ec260828', 'a74fbf22-9c52-4858-8112-51e5e5a0b0f8', '<p><span style=\"color: rgb(0, 0, 0);\">error</span></p>\n', 0),
('ddbbdf9b-cd99-4fb4-9492-4fcab6ba844a', '71cf4a33-0a65-44f0-b029-6c50b38dd9c5', '<p>States</p>\n', 1),
('ddcec8e8-7bed-4da6-8f1b-ef3f30193f58', '0fe541b4-b569-461d-95dc-3f481c037578', '<p>hel</p>\n', 0),
('de0f0e39-c39f-478f-b935-3ab9dc72f466', 'd01e5f86-cf60-4533-aa1c-a2053ca58ac8', '<p><span style=\"color: rgb(0, 0, 0);\">4,5,6</span></p>\n', 0),
('de0f466f-32fa-4947-9a3c-a755ca0a95fd', '3b9036c1-9afc-4e6e-b5b5-9c38f46c5c81', '<p>IBM</p>\n', 1),
('de58ed9e-4e50-4f0f-874f-72811572f739', 'fac6f8af-5dbe-4f68-859f-2e976a34ce9e', '<p>Long</p>\n', 1),
('de5a4616-1981-4237-994d-2367dc654dd5', '700ecdf9-0656-4644-a3f1-ff8b4ee795e0', '<p><span style=\"color: rgb(0, 0, 0);\">Only the garbage collection system can destroy an object.</span></p>\n', 1),
('de949c4b-a44b-4b0b-8a7c-6c047ea90d99', 'aaff4ef9-4464-418f-8dc4-c74b471adb71', '<p>Matches any update methods of the 2 classes, with one more arguments and whatever method visibility</p>\n', 0),
('deb22e8e-2663-448a-aba5-55db31b3475e', '5319fc80-c527-4b05-a622-5abc5fd0b7e6', '<p>No</p>\n', 0),
('ded7c314-34a6-42f9-bbae-45890112dcea', '533ddb28-1a7e-4d65-9261-89385b0b4187', '<p>void com.test.service.account.MyServiceImpl#transfert(Account account, Money amount)</p>\n', 0),
('def800d0-4c91-47ad-857b-0d310e634533', '8ad8976b-ab4b-4c8d-8df5-9561c01f9f63', '<p><span style=\"color: rgb(0, 0, 0);\">After line 7</span></p>\n', 0),
('deffa99c-821a-4b0a-810a-f5646124ef43', 'fd98ac26-a592-41d9-bc84-1afb240ba084', '<p><span style=\"color: rgb(0, 0, 0);\">cmp is a function that return a void pointer.</span></p>\n', 0),
('df4a6a44-3b61-4fe3-bbe4-90e590be04b1', '2304d08a-9266-468d-bb87-e16e12f21c50', '<p><span style=\"color: rgb(0, 0, 0);\">Class members are public by default.</span></p>\n', 0),
('df671573-e30c-46bc-ac56-e46389616189', '6f59cdd9-2569-4096-9893-20ee4a99663a', '<p><span style=\"color: rgb(0, 0, 0);\">notifyall()</span></p>\n', 0),
('df74728f-124a-414d-b158-6a4161c9ed72', '0efca4f7-d5ac-430a-9956-de997ed89038', '<p><span style=\"color: rgb(58, 58, 58);\">none of the mentioned</span></p>\n', 1),
('df798dd3-1f10-4db6-8be2-8250d00847d8', '5a960629-a10b-4e13-9cc5-09f3524a473d', '<p><span style=\"color: rgb(0, 0, 0);\">A class may be declared as a friend.</span></p>\n', 1),
('dfab945a-0664-4894-8f45-08f2c20489bc', '578da245-d329-468f-9a1f-b88d0c6a631e', '<p><span style=\"color: rgb(0, 0, 0);\">*(*(*(*(a+i)+j)+k)+l)</span></p>\n', 1),
('dfbf758e-a4aa-44c8-9f4d-82dc3376748f', '561422fd-1a46-425d-9431-9ee58b197054', '<p><span style=\"color: rgb(58, 58, 58);\">308915776</span></p>\n', 1),
('dfc3f4e4-c491-4ea2-a8e5-fb181b500f9a', 'd06bafc9-d627-4b2b-9c27-8c1710e74635', '<p>-</p>\n', 0),
('dfeb3b61-eef1-4b84-a543-1bd568fadf30', '3ed553e3-2750-4efc-a1f2-9d365f86547c', '<p><span style=\"color: rgb(58, 58, 58);\">One-way password file</span></p>\n', 0),
('dff88a3d-8709-4734-8f0a-0260566b2943', '84b518db-44d8-4c10-8585-790550ef409a', '<p><span style=\"color: rgb(0, 0, 0);\">Friend</span></p>\n', 0),
('e04aac7e-ac3f-4d0e-aa55-a8dcb3951548', '0297c903-0e7b-4152-bffc-d71a572ef1a2', '<p>9</p>\n', 0),
('e050173f-7053-4b3d-b577-808b4e08b213', '1f6c7a3a-d55d-47be-b51d-a80c5dc1e595', '<p><span style=\"color: rgb(0, 0, 0);\">A class member and a class object.</span></p>\n', 0),
('e0baafea-b82e-4c02-a7e9-04bb2ea0fb9a', '8ad8976b-ab4b-4c8d-8df5-9561c01f9f63', '<p><span style=\"color: rgb(0, 0, 0);\">After line 8</span></p>\n', 0),
('e10d16a0-9da6-4d14-b479-9c262edd1f18', 'c237ee18-4031-4f40-83b4-9183d41b8b30', '<p><span style=\"color: rgb(0, 0, 0);\">start();</span></p>\n', 0),
('e169e355-122e-4ef8-812d-3d2db1ca5b79', '1ab87519-1ecb-418c-892a-caab6d67b768', '<p><span style=\"color: rgb(0, 0, 0);\">Preprocessing error.</span></p>\n', 0),
('e193bcd4-8c52-4c9d-a845-610b9ae9f30a', '18fa0c62-31b5-4a88-8430-9f2bf4656a25', '<p>Yes</p>\n', 1),
('e19eb839-bc72-4e0d-bcff-1704f6a3f864', '74ef9396-e72e-43dc-8039-a466f427ee2a', '<p><span style=\"color: rgb(0, 0, 0);\">Member Variables</span></p>\n', 0),
('e2463048-06a9-4c80-806c-4d0dbdee9ca4', 'e7b7df13-b0ff-4b26-979f-43943e78259d', '<p>If a transaction is in progress, the current method should run within the nested transaction of the existing transaction. Otherwise, a new transaction has to be started and run within its own transaction.</p>\n', 0),
('e2728900-8fb9-4b7a-80eb-06b953b0f0fa', '97015c85-5098-4743-831a-b4bcc1950f6d', '<p><span style=\"color: rgb(0, 0, 0);\">-11,34</span></p>\n', 1),
('e29f833f-0aba-434e-9ef6-ac8488d054b2', 'c063d3e6-028b-4123-823c-0d4b0d36449c', '<p><span style=\"color: rgb(0, 0, 0);\">2,5,3</span></p>\n', 0),
('e2ea5a43-af12-4179-b0d7-a766c625f4c6', '2f55f179-55b6-4e54-bc03-ab78558c28ba', '<p><span style=\"color: rgb(0, 0, 0);\">pf is a pointer to a function which return int</span></p>\n', 1),
('e2fd7a05-7cb1-4470-8ff1-0cd9ba70ed47', 'bad490d5-e282-425d-9f15-daf2d26d1a42', '<p><span style=\"color: rgb(0, 0, 0);\">error</span></p>\n', 0),
('e32729da-652c-444b-a278-b1d55a1629fb', '423d0c00-55e9-421f-bb94-60d723008a53', '<p>False</p>\n', 0),
('e353cc8b-ee33-44b6-ae35-018a4bfe323c', 'a83c9ada-5b44-4255-8864-97972f262216', '<p><span style=\"color: rgb(0, 0, 0);\">MyOuter.MyInner mi = m.new MyOuter.MyInner();</span></p>\n', 0),
('e368a324-93d4-4d19-8a51-6a234b6430c5', '7ea903f4-db9a-402e-8f35-b14e1beb5468', '<p><span style=\"color: rgb(0, 0, 0);\">Line 22</span></p>\n', 1),
('e3cc1e30-a94c-493f-a3a1-6dba3b3b26ae', 'ac6579d6-88ab-428a-86e2-9c8718cf93ff', '<p><span style=\"color: rgb(0, 0, 0);\">2 and 1</span></p>\n', 0),
('e3db3670-2637-42e3-b2f2-618f216a94a7', '96e0f0b7-9758-4a0c-aff2-e126b0a812e2', '<p>Keys</p>\n', 0),
('e454ea19-f294-4953-a479-cae9091dc76d', '3ec25e9b-4cf1-47e9-9cc2-c0b44b22c57d', '<p><span style=\"color: rgb(0, 0, 0);\">near=4 far=4 huge=8</span></p>\n', 0),
('e4684486-5276-4224-94f3-1dca40ba3c7d', '3d7f4959-cc33-4ec7-a0df-be440f033e68', '<p>-</p>\n', 0),
('e49f111e-3f9a-4d7c-8e4e-1965bf4adedd', '91cda3d0-d61f-4214-b36d-9243f506ebae', '<p><span style=\"color: rgb(0, 0, 0);\">Only II is true.</span></p>\n', 0),
('e4aff61e-aa30-4dc2-bb34-b291560dbd52', '84d8768c-cb94-498c-93fd-c1f89af08c90', '<p><span style=\"color: rgb(0, 0, 0);\">It prints \"barhi\"</span></p>\n', 0),
('e4d8572e-d482-4be6-8a91-37e91ae2fe12', 'aabd6946-5fe4-4387-8128-349497038ad4', '<p><span style=\"color: rgb(0, 0, 0);\">Hello world</span></p>\n', 0),
('e54a34ee-b49f-4e16-9924-f9e2ef2f94e8', 'b0ef3a25-c9f0-4e31-9bd9-7de6ee2710e1', '<p><span style=\"color: rgb(58, 58, 58);\">Malicious Threat</span></p>\n', 0),
('e571777c-96a0-4faf-9202-43a090123139', '1f6c7a3a-d55d-47be-b51d-a80c5dc1e595', '<p><span style=\"color: rgb(0, 0, 0);\">A class and a member of that class.</span></p>\n', 0),
('e58d2db4-7d5b-4bc2-9d02-c6f9379c663c', 'd52b0536-cc2e-4f1a-891a-b9d4c64d613c', '<p><span style=\"color: rgb(0, 0, 0);\">virtual</span></p>\n', 0),
('e5a78bbe-b503-4a1b-9170-4eae533400f3', '6f59cdd9-2569-4096-9893-20ee4a99663a', '<p><span style=\"color: rgb(0, 0, 0);\">wait()</span></p>\n', 1),
('e620ac49-22b6-40ad-bc04-f16b1bd27266', 'c237ee18-4031-4f40-83b4-9183d41b8b30', '<p><span style=\"color: rgb(0, 0, 0);\">stop();</span></p>\n', 0),
('e636294c-f67d-4f52-8571-a39586be6fd2', '5a307b74-35cb-4282-9095-f9b477970c1a', '<p><span style=\"color: rgb(58, 58, 58);\">Identity Theft</span></p>\n', 0),
('e63a605f-2251-4395-acd7-3de19c8b0f0f', '25832c05-7b76-4df7-a741-1854d0e41986', '<p><span style=\"color: rgb(58, 58, 58);\">hash code</span></p>\n', 0),
('e642d5c6-cc8f-4ef9-994a-2469520e445a', 'a3b48928-1619-44d0-b893-5e7c8b0f9d47', '<p>X<span style=\"color: rgb(0, 0, 0);\">uejia Lai and Carlisle Adams</span></p>\n', 0),
('e6e5f2cd-da12-4b74-a668-cfba297c4911', 'ed608859-47c0-4427-bda0-785eec794f44', '<p><span style=\"color: rgb(0, 0, 0);\">Pointer</span></p>\n', 1),
('e6eac76d-0cf2-4d22-a179-bee1d5e80633', 'd28935cf-4e6b-4ed5-8139-c1b1f4d9e838', '<p><span style=\"color: rgb(0, 0, 0);\">Class is an instance of data type.</span></p>\n', 0),
('e73ac628-8b53-4c2d-8c2c-2ee69fd97b13', '3750c3b3-5ad8-48ca-9efe-b818013d4866', '<p><span style=\"color: rgb(0, 0, 0);\">java.util.LinkedHashMap</span></p>\n', 1),
('e73e98af-eb42-40b0-a993-a9259dc134f7', 'e0fa7a82-435d-48e4-a40a-c8067a2cd41a', '<p><span style=\"color: rgb(0, 0, 0);\">char (*ptr[3])();</span></p>\n', 0),
('e7dc50c4-7965-4f18-9d6b-77b06f9e85fa', '899ce371-3a99-4773-a84d-641a3f2702e9', '<p><span style=\"color: rgb(0, 0, 0);\">one</span></p>\n', 0),
('e8218c47-3f96-4e92-a34d-15dd1c58c5c8', '219175a4-21bf-44be-b7f2-45fd40c9f294', '<p><span style=\"color: rgb(0, 0, 0);\">It is not allowed.</span></p>\n', 0),
('e8530da7-bd28-43d4-9992-2b92e05ba079', '66fbdb8a-db97-49ad-94aa-8ba92956bb22', '<p><span style=\"color: rgb(0, 0, 0);\">void Display(void) = 0;</span></p>\n', 0),
('e86ea15e-b7eb-4ff9-ab34-1d04bcb8e5f2', '90c6a5e4-2b54-444f-a053-c64f4104454f', '<p><span style=\"color: rgb(58, 58, 58);\">THWAE</span></p>\n', 0),
('e8865cf9-4a70-42e2-a49a-455f71b68ab5', 'c8d851f2-6f5f-443a-9587-a69d40f14942', '<p><span style=\"color: rgb(0, 0, 0);\">private</span></p>\n', 1),
('e8982cf0-6633-42a0-9203-288fd777b02a', 'a26e01d1-ab74-4990-966a-1bba5af5de4b', '<p><span style=\"color: rgb(0, 0, 0);\">||</span></p>\n', 0),
('e89fea0b-3db1-436d-9c91-eb03fa622d46', 'a3b48928-1619-44d0-b893-5e7c8b0f9d47', '<p>X<span style=\"color: rgb(0, 0, 0);\">uejia Lai and Stafford Tavares</span></p>\n', 0),
('e8c10d8a-64bc-4794-b957-1eb93085f30e', 'bc97a1ca-62d7-465d-bcbc-e50439d5aa69', '<p><span style=\"color: rgb(0, 0, 0);\">int [] myList = {\"4\", \"3\", \"7\"};</span></p>\n', 1),
('e8eb7b34-7210-43ed-a8da-6a4539f84301', '9fc7ae8e-2313-428f-b979-3fa9ad032420', '<p><span style=\"color: rgb(58, 58, 58);\">Traffic security</span></p>\n', 0),
('e8f38383-5f4c-4655-a5ef-5ce40275a0ec', '1be3d7f7-3260-462a-91d9-ab3703c473ad', '<p><span style=\"color: rgb(0, 0, 0);\">Only 2 is correct.</span></p>\n', 0),
('e90ef1a6-97db-4a49-b168-4a9c3a6ec845', '3c900839-f3ac-4fa3-a9dd-e8d29b16f097', '<p>It is mandatory for using Spring exception translation mechanism</p>\n', 0),
('e95a482d-9c89-4f25-8e3e-43ffeed23d6e', '8e47c529-dc2c-431d-85dd-e681f150c82d', '<p><span style=\"color: rgb(0, 0, 0);\">Functions</span></p>\n', 0),
('e9a55aae-22e2-45f9-af36-4f4e67fc1909', 'f72e747a-827e-4e04-b603-7ca59887c3d4', '<p><span style=\"color: rgb(0, 0, 0);\">Singleton class</span></p>\n', 1),
('e9af6c05-99ed-4159-80f5-10162e79fcd7', '75e2ff6b-2c73-41f7-a043-3a15115802e4', '<p><span style=\"color: rgb(0, 0, 0);\">Both data and functions can be either private or public.</span></p>\n', 1),
('e9f9cfde-7f91-4be9-833b-d7df384150cc', 'bba3169a-eab7-4e53-ad26-53da07863940', '<p><span style=\"color: rgb(0, 0, 0);\">Java.util.Set</span></p>\n', 0),
('ea887627-4262-48f1-bcad-aa397097f6b8', '82ec7648-df7f-464e-b07a-976a6624d775', '<p><span style=\"color: rgb(58, 58, 58);\">Man in the middle attack</span></p>\n', 0),
('ea88b508-34e2-4e27-b819-67d7e776f7af', '176d6148-dea3-4472-a96c-963d199fca6f', '<p>Plain Text</p>\n', 0),
('ea8b7230-53c0-49cc-a138-aa66747d6566', '524eebd2-6eb0-47f2-9664-ea0c206837cf', '<p><span style=\"color: rgb(0, 0, 0);\">-2147483648 and -1</span></p>\n', 0),
('eab93bf8-0187-4ab3-ba83-6c7e2c97db5f', 'ed608859-47c0-4427-bda0-785eec794f44', '<p><span style=\"color: rgb(0, 0, 0);\">Enum</span></p>\n', 0),
('eaf584ba-a6cf-4efa-9179-aae04aa94e85', '700ecdf9-0656-4644-a3f1-ff8b4ee795e0', '<p><span style=\"color: rgb(0, 0, 0);\">x.delete()</span></p>\n', 0),
('eb28cfbb-b891-4151-8502-fb65d4bcf9f6', 'f72e747a-827e-4e04-b603-7ca59887c3d4', '<p><span style=\"color: rgb(0, 0, 0);\">Friend class</span></p>\n', 0),
('eb37881e-6747-4b90-afc5-b8c9e7489b79', 'e250045e-c9f3-4f71-91c9-4f64cb31adab', '<p>Depending the application persistence technology, the HibernateTransactionManager or the DataSourceTransactionManager could be used as bean class</p>\n', 0),
('eb6e5636-0a68-4081-8171-6e01fcbcb527', '578da245-d329-468f-9a1f-b88d0c6a631e', '<p><span style=\"color: rgb(0, 0, 0);\">((((a+i)+j)+k)+l)</span></p>\n', 0),
('eb6f7942-76f3-4ed6-b37a-23c335a91e95', '04dee710-a928-43fe-b6a1-46ab880bf061', '<p>Advice that could throw an exception</p>\n', 0),
('eb81a73a-098a-42c1-9e34-e47320b950b0', '399f009c-57ac-4b26-9274-263263cf10b6', '<p><span style=\"color: rgb(0, 0, 0);\">error</span></p>\n', 0);
INSERT INTO `quiz_options` (`id`, `question_id`, `body`, `isCorrect`) VALUES
('eba9b8fe-e6c7-4840-9888-75357ec58b96', '1ea2d422-f6ec-44e9-9b0b-dd4bb7998814', '<p><span style=\"color: rgb(0, 0, 0);\">Destructor of base class should always be private.</span></p>\n', 0),
('ec23382d-eb9b-47a0-aa88-2967a27e6b09', '8c4c9829-2484-4452-aaa5-ff89691ffaf9', '<p><span style=\"color: rgb(0, 0, 0);\">Top-down</span></p>\n', 0),
('ec58cd3d-41b0-4b92-b121-0e7279b20e4e', '1c66aaab-23d3-4cd9-9bbf-00ba530949d2', '<p><span style=\"color: rgb(58, 58, 58);\">Message Leap</span></p>\n', 0),
('ec6476bb-7493-4370-90d6-acedc7f59fd1', '76d0fc55-6800-4fb7-a851-6af402f10d85', '<p><span style=\"color: rgb(0, 0, 0);\">4,8</span></p>\n', 0),
('eca7c042-98c1-410b-bbd0-5da9141f205f', '76d0fc55-6800-4fb7-a851-6af402f10d85', '<p><span style=\"color: rgb(0, 0, 0);\">2,4</span></p>\n', 0),
('eca812df-47dc-4183-9478-7b4a3e9b5566', '1833f24c-a2e3-45ce-80e4-207aa4a773a1', '<p>Other behavior</p>\n', 0),
('ecc6ef62-5df6-45e4-8722-b9f762b77d3d', '8eca3eb8-e9b9-4f76-9e72-c861cba69ac6', '<p><span style=\"color: rgb(0, 0, 0);\">argv is a function pointer.</span></p>\n', 0),
('ece7b2b5-e538-4393-a0aa-db410fc4cc16', 'ea7802e1-52b2-4004-857d-d946cfc1c4c6', '<p>Shift cipher</p>\n', 0),
('eced0983-f6fb-4455-a3b0-3e2b1aad26b8', '38b623ae-fa30-4f87-a680-64352230bdd4', '<p><span style=\"color: rgb(0, 0, 0);\">hmello</span></p>\n', 0),
('edc70c52-c487-42bb-a09a-79fc177f70a1', 'defbfe25-0773-4497-9be4-ab82e5e187a0', '<p><span style=\"color: rgb(0, 0, 0);\">Overloaded function must have default arguments.</span></p>\n', 0),
('edf3e0cd-af40-4dc1-b08e-28e9587c5a48', 'a1856142-7415-43da-af24-1f8d5f73883f', '<p>sdfsf</p>\n', 0),
('edfa2982-fadc-4cab-8aa8-2293f21d51d9', '96e0f0b7-9758-4a0c-aff2-e126b0a812e2', '<p>Each other</p>\n', 1),
('ee0b4ff1-bd2e-4d04-b10f-d6ff208cf286', '865bd10a-abf4-46f7-b1fb-6daa2e9e9549', '<p><span style=\"color: rgb(0, 0, 0);\">2,5 and 4</span></p>\n', 0),
('ee6616e3-8415-40d7-95d9-31ab26f50944', '97fabea5-cfcf-415e-992f-938cdcadd08f', '<p>Advice that surrounds a method invocation and can perform custom behavior before and after the method invocation</p>\n', 0),
('ee6c0ddb-e0c9-4f08-aeb1-8f0753b2f35d', 'd0ce266f-5e20-4189-8d9a-86c2e135d8ae', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 2</span></p>\n', 0),
('ee746669-2fc4-4cf0-9e7d-95275eb5322c', '7a31c9b3-872b-419b-a706-fe04ca0b7a85', '<p><span style=\"color: rgb(0, 0, 0);\">8 3</span></p>\n', 0),
('ee8766f5-b912-47c1-a4b6-697b2f141835', '272a179d-3e85-4263-9b74-bed69505520d', '<p><span style=\"color: rgb(0, 0, 0);\">Error: LValue required in strcpy</span></p>\n', 0),
('eea77383-130f-4705-abb2-71c3c9eacd19', '7e30eb56-b62a-412a-9f9b-a7354b2167ca', '<p><span style=\"color: rgb(0, 0, 0);\">finished</span></p>\n', 0),
('eeab5b81-8825-43ae-8871-2cacf8792083', 'a3b48928-1619-44d0-b893-5e7c8b0f9d47', '<p>X<span style=\"color: rgb(0, 0, 0);\">uejia Lai and James Massey</span></p>\n', 1),
('eeabceb9-1365-4ff1-9ac1-2adfbef50a82', '25832c05-7b76-4df7-a741-1854d0e41986', '<p><span style=\"color: rgb(58, 58, 58);\">keyed hash function</span></p>\n', 1),
('eee91c34-61ff-4fd8-8a66-29b5c92e0563', '2aaadbba-6513-4195-8c86-b88eae5aa6e5', '<p>A point cut could select methods that have a custom annotation</p>\n', 1),
('ef6f58ca-2f76-4bac-a454-896404884522', 'c39b735b-3dd5-408a-ba24-5f6ce096f509', '<p><span style=\"color: rgb(0, 0, 0);\">5 3</span></p>\n', 0),
('ef777251-b1f8-4abe-80d4-74cf5cb16752', 'a59bba93-b0b5-4c07-800c-5aa4380a5c10', '<p><span style=\"color: rgb(58, 58, 58);\">180 bits</span></p>\n', 0),
('ef99cf02-0023-49d8-abd5-3a789c5bb974', '4c513303-bc22-4e1d-a6d8-59d29d89f615', '<p>3</p>\n', 0),
('ef9a6fac-921d-4376-95e3-d438738b7537', 'defbfe25-0773-4497-9be4-ab82e5e187a0', '<p><span style=\"color: rgb(0, 0, 0);\">A function can be overloaded more than once.</span></p>\n', 1),
('efac1da3-90a1-4851-9ee1-dc176d1889c7', '910e0026-671e-4ea7-bedd-57997b5e5f91', '<p>t<span style=\"color: rgb(0, 0, 0);\">wo keys are used</span></p>\n', 0),
('efd80cf9-a768-410f-898d-4fc16aa7414d', '9fecd0f8-9776-47c2-afd7-10afa3fd4746', '<p><span style=\"color: rgb(0, 0, 0);\">count = 3</span></p>\n', 1),
('efe4ca8a-a40e-4e98-8bc4-da86b82adae1', '0e5a5173-cdc6-4b73-a39d-396c0d220374', '<p>Round Size</p>\n', 0),
('f009fb55-358d-41dd-8aad-4e3946043bb5', '4d5539a5-da8a-4f45-9783-ef8fd852e303', '<p><span style=\"color: rgb(0, 0, 0);\">virtual</span></p>\n', 0),
('f03152b1-dea1-4d79-b31d-68048a7eb3a0', '6bcd2e5d-4ecc-4f7c-9673-6a4c4c822c2b', '<p>4 bits</p>\n', 0),
('f0364313-98ae-4acd-879e-fb5a7402b1c5', 'f033ba2b-7979-4a4a-8457-4c1881af4e64', '<p><span style=\"color: rgb(0, 0, 0);\">A referenced has to be double de-referenced to access a value.</span></p>\n', 0),
('f03a6f4d-c0fa-4092-972d-fe90f2d99186', '7ea903f4-db9a-402e-8f35-b14e1beb5468', '<p><span style=\"color: rgb(0, 0, 0);\">Line 23</span></p>\n', 0),
('f052af5a-4a13-424c-8c08-39839d56c6ac', '7966aecd-baa5-4807-b467-60e29664d74f', '<p>2</p>\n', 0),
('f053c62f-aaf2-49c5-b919-42883a23ab57', 'fb20dfb2-8232-482d-8c2d-56c664ecae0e', '<p><span style=\"color: rgb(0, 0, 0);\">During linking</span></p>\n', 0),
('f0872eaa-5f48-4426-a5e8-52948bbc3667', '9e94b142-28cd-4a67-8df9-03d809595ae5', '<p><span style=\"color: rgb(0, 0, 0);\">Private data members</span></p>\n', 0),
('f0d63a07-fb70-465b-87ca-dc61a05f142f', 'c4bce0ab-3379-451d-a907-a75db166300a', '<p><span style=\"color: rgb(0, 0, 0);\">Boo f = new Bar() { };</span></p>\n', 1),
('f0f89004-e8df-42a9-8ee9-8a81e3403305', 'f974efc2-ad86-4d15-bf7b-45f7d74183bc', '<p><span style=\"color: rgb(0, 0, 0);\">0.1.2.3</span></p>\n', 0),
('f0fcefea-cc72-4ad9-be46-e2c16d374591', 'e250045e-c9f3-4f71-91c9-4f64cb31adab', '<p>The tx namespace provides JTA transaction manager declaration shortcut syntax</p>\n', 0),
('f10f02d6-ad5f-4ded-a63f-81fd8a281306', '93948488-fc2b-4e4f-b8cb-ae2ec8850ab6', '<p><span style=\"color: rgb(0, 0, 0);\">5,4,3,2</span></p>\n', 0),
('f11aa458-a066-4926-bea9-9518156f0242', '6e5146f8-bb17-481b-9748-dd3c300dae40', '<p><span style=\"color: rgb(0, 0, 0);\">Address of i: Address of j</span></p>\n', 0),
('f121a838-6516-47b6-9e1e-c97d7c08b316', '4ae3ce39-fa01-4a89-ac5c-388656909464', '<p><span style=\"color: rgb(58, 58, 58);\">Secure Set Identifier</span></p>\n', 1),
('f16271c1-760d-4fb0-af4f-e8156cb487d7', '7e4ce2c3-017f-433b-920f-65412d4d6b62', '<p><span style=\"color: rgb(0, 0, 0);\">hello throwit caught</span></p>\n', 0),
('f1677119-efbc-4a6f-b09b-d2e923a3766a', '323fe7ec-17cc-4cf5-94b8-44a3a2941d5e', '<p><span style=\"color: rgb(0, 0, 0);\">main</span></p>\n', 0),
('f168b03e-f2cf-413e-9f34-a619b388a8eb', '6621a40a-7e9b-448d-8e23-8bc853b9b6b8', '<p><span style=\"color: rgb(0, 0, 0);\">2 and 1</span></p>\n', 0),
('f16ecab6-fe4c-4acb-98b9-d4e7341e6368', '91cda3d0-d61f-4214-b36d-9243f506ebae', '<p><span style=\"color: rgb(0, 0, 0);\">Only I is true.</span></p>\n', 0),
('f1920b2e-130c-4850-9fd3-154dbc3d4a9a', '3d7bf805-d7fa-47d3-a62f-b0dfe5d18950', '<p><span style=\"color: rgb(0, 0, 0);\">Const function</span></p>\n', 0),
('f1a5ac9e-33e1-454f-b5d9-ccf4983df33e', 'e4064b35-e49e-404a-9bd5-d81ae5d4c0bb', '<p><span style=\"color: rgb(0, 0, 0);\">.</span></p>\n', 0),
('f1b94262-40b1-4d09-81ac-0a4b734073ae', '61a0aeb4-2451-4177-8177-4cfbb94280b3', '<p><span style=\"color: rgb(0, 0, 0);\">In the first statement 6 specifies a particular element, whereas in the second statement it specifies a type</span></p>\n', 0),
('f1c1c6b4-8f96-4b43-86e0-c48bb63d2556', '206a984d-c83e-4002-977a-a30f35311af3', '<p>b<span style=\"color: rgb(0, 0, 0);\">lock of symbols</span></p>\n', 1),
('f1d89275-7232-405c-aac7-7f9f3417b94e', '9fecd0f8-9776-47c2-afd7-10afa3fd4746', '<p><span style=\"color: rgb(0, 0, 0);\">count = 6</span></p>\n', 0),
('f1dbab20-cc1d-45d4-9904-811a84a6ffc7', 'bbea72ad-5557-4a75-9b10-9deb2ab52434', '<p><span style=\"color: rgb(0, 0, 0);\">Public members of the base class become public members of derived class.</span></p>\n', 1),
('f1fad4df-7e65-400b-b2ad-0e29a2a92c40', '2f55f179-55b6-4e54-bc03-ab78558c28ba', '<p><span style=\"color: rgb(0, 0, 0);\">pf is a function pointer.</span></p>\n', 0),
('f2108181-28a7-4d32-8bfe-e6f83e0ff653', '1c66aaab-23d3-4cd9-9bbf-00ba530949d2', '<p><span style=\"color: rgb(58, 58, 58);\">Message Score</span></p>\n', 0),
('f218333c-a1c6-4a9e-b798-ba8583ba0a2f', 'bc45e0af-cdc1-4f11-ae94-d95e0935f31d', '<p><span style=\"color: rgb(58, 58, 58);\">abqdnwewuwjphfvrrtrfznsdokvl</span></p>\n', 0),
('f21bc8f5-b788-44c0-be8d-e2427155539b', '2744ee9f-4688-4f81-9c27-fb83fa76e67c', '<p><span style=\"color: rgb(0, 0, 0);\">It is necessary that a constructor in a class should always be public.</span></p>\n', 0),
('f2625400-4f9d-4c21-8f70-c3e12efac83c', '1a8b93f4-3305-4385-9c6a-112b55c9d7a7', '<p><span style=\"color: rgb(0, 0, 0);\">Two seconds after thread A is notified.</span></p>\n', 0),
('f268a3f3-6262-4144-b553-0ad838fa5c00', '5192d827-d122-4384-808b-cda84660cb82', '<p><span style=\"color: rgb(0, 0, 0);\">int Sum(int a = 5, int b);</span></p>\n', 0),
('f26a96b6-fd39-4fe0-a423-8c8f26e3d2e4', '3b9036c1-9afc-4e6e-b5b5-9c38f46c5c81', '<p>Sony</p>\n', 0),
('f2a6a41f-92fe-4b55-bb9a-4665c3b2222c', '729b473d-5d24-4a02-abf2-e46e675289b6', '<p><span style=\"color: rgb(0, 0, 0);\">Bar b = f.new Bar();</span></p>\n', 0),
('f2ab6ba8-4690-40e9-be52-a18d058cb392', 'f974efc2-ad86-4d15-bf7b-45f7d74183bc', '<p><span style=\"color: rgb(0, 0, 0);\">1,3,4,5</span></p>\n', 0),
('f2c3aa0d-34c1-4f92-8f8e-5c682c61469b', 'e519b7fd-04c0-4be8-8929-99d259fb91ca', '<p><span style=\"color: rgb(0, 0, 0);\">As many as we want</span></p>\n', 0),
('f323b39b-c821-49d8-aad1-e636f67c3fc1', '83a40812-b708-43fd-9f03-7c466ae09d0f', '<p><span style=\"color: rgb(0, 0, 0);\">0 to 65535</span></p>\n', 1),
('f360ba58-613a-4fdf-a3ad-3be689a68cdc', '31b7ded0-5c4b-4c4c-a8f1-aa337b8cb46e', '<p><span style=\"color: rgb(0, 0, 0);\">Line 5</span></p>\n', 0),
('f383ab5f-6e03-4286-92f7-7cd620c1f0b9', 'a1856142-7415-43da-af24-1f8d5f73883f', '<p>sdfsf</p>\n', 0),
('f3852e3d-3e19-4c47-a44a-347024b87cb0', '725a330a-d38d-47e2-bc2c-f7a7465fa114', '<p>NoSQL</p>\n', 1),
('f3911695-c98a-4d11-9f9d-c542f321cf31', 'e857bb8f-9626-4b99-baf2-a840a3a43a4f', '<p><span style=\"color: rgb(58, 58, 58);\">O(2log n)</span></p>\n', 0),
('f3b25788-da2e-4ee3-bcde-71fbf480588a', 'ce8ac650-a7ff-49e5-af0f-4a04d18be4e7', '<p><span style=\"color: rgb(0, 0, 0);\">Encapsulation</span></p>\n', 0),
('f3bd044a-0cd6-4aca-bb84-dd4da38052c5', 'a399587a-9d5b-4c67-b8db-196b7d8b9b45', '<p>error</p>\n', 0),
('f3cfa0d8-bbef-4f4d-9671-299c7dcfef91', '4087e203-cbbc-4382-8a71-7124b31c1059', '<p><span style=\"color: rgb(0, 0, 0);\">i = 5 and j = 5</span></p>\n', 0),
('f3dc94aa-98d0-47ac-bfe7-5c0ac027fc4c', '447549cc-b15f-461d-848d-6c082c980fea', '<p><span style=\"color: rgb(0, 0, 0);\">compilation fails</span></p>\n', 1),
('f3e57e25-84aa-48fb-a7f2-84a3fee05528', '8368390f-56ab-40ab-98c9-92f37e7b6925', '<p><span style=\"color: rgb(0, 0, 0);\">&nbsp;</span>java.util.Collection</p>\n', 0),
('f40b7d6a-2575-491c-8097-05f414f6a1cb', 'fe91ca63-860c-4001-a397-23a6e2ebddbd', '<p>2</p>\n', 1),
('f48a04e1-71cd-46e6-89ff-47d1a9c0bd1b', '0fcc2fed-debd-4713-98ad-d22f8eccd462', '<p>Secrets</p>\n', 1),
('f510f7e0-924a-4e48-9733-11ee87091bcb', '83a40812-b708-43fd-9f03-7c466ae09d0f', '<p><span style=\"color: rgb(0, 0, 0);\">0 to 65585</span></p>\n', 0),
('f59b6c09-6c49-443a-8a9f-9c5594daf605', '6d1d18af-a086-4496-887b-0df172bee5f8', '<p>Only classes that implements at least one interface could be proxied</p>\n', 0),
('f5bdcc18-27cd-435a-a8fc-84d214c7f785', '31b7ded0-5c4b-4c4c-a8f1-aa337b8cb46e', '<p><span style=\"color: rgb(0, 0, 0);\">Line 8</span></p>\n', 0),
('f5d5a00d-469b-4061-9488-538801b41bb8', '077fdade-a412-4b88-a5a4-4003b3a02420', '<p><span style=\"color: rgb(0, 0, 0);\">Both 1 and 2 are correct.</span></p>\n', 0),
('f61d6256-1c7f-4ed9-ae65-2a3bbe0447de', '87606ac0-8a6a-4f4e-93f5-9cbfe271f447', '<p>-</p>\n', 0),
('f6d12e27-2e8e-4aed-9e71-60fd48879ba7', 'b2b7bbcf-b532-4a21-bc96-9b52d8b4fcf9', '<p>8</p>\n', 0),
('f726044e-a840-404a-b6bd-35673e59ad35', 'aabd6946-5fe4-4387-8128-349497038ad4', '<p><span style=\"color: rgb(0, 0, 0);\">hello world finally executing</span></p>\n', 1),
('f72d0c1c-c857-464f-acd0-e786571065f6', '910e0026-671e-4ea7-bedd-57997b5e5f91', '<p>None</p>\n', 0),
('f7a2a9a0-90e9-4486-a280-79a1de687dd2', 'd06bafc9-d627-4b2b-9c27-8c1710e74635', '<p>-</p>\n', 0),
('f7cc85e6-7af9-4b02-af19-22e313071e95', 'bcfa0f27-a65a-4bb9-9704-6f62a4a1838f', '<p><span style=\"color: rgb(0, 0, 0);\">Declaring it abstract using virtual keyword.</span></p>\n', 0),
('f7eb6a2c-af80-4246-be62-ef164c976986', '011fc229-cf60-46f5-8e89-e7b86fdec220', '<p><span style=\"color: rgb(0, 0, 0);\">native</span></p>\n', 1),
('f80b7855-303b-4c4d-97af-2a90787bfdb7', '41a58626-c56c-43ef-a3ec-0494b8ab70c0', '<p><span style=\"color: rgb(0, 0, 0);\">huge</span></p>\n', 0),
('f836d0c0-052d-4700-bc5c-f3009f22fc9f', '2304d08a-9266-468d-bb87-e16e12f21c50', '<p><span style=\"color: rgb(0, 0, 0);\">Structure members are private by default.</span></p>\n', 0),
('f840bc5d-acba-4f6f-8cb1-1cad0c5d7896', '93948488-fc2b-4e4f-b8cb-ae2ec8850ab6', '<p><span style=\"color: rgb(0, 0, 0);\">1,3,4,5</span></p>\n', 1),
('f8707de1-b87b-48d3-952f-dd763bd3c2d6', 'a1856142-7415-43da-af24-1f8d5f73883f', '<p>sdfs</p>\n', 0),
('f88e92dd-ef74-44fa-a1ba-934f19442870', '3c900839-f3ac-4fa3-a9dd-e8d29b16f097', '<p>Spring optimises its transaction interceptor</p>\n', 0),
('f8a72000-7792-4eba-b855-23f8c251a31f', '4deb4223-67d8-4fb2-be7c-3c0cb7631017', '<p><span style=\"color: rgb(0, 0, 0);\">i= FFE2 ptr=12 j=FFE4 ptr=24</span></p>\n', 0),
('f8df4542-7122-44b1-9620-18e890dbe302', 'f6b546b8-4b06-4c87-b7a1-429152a17f1e', '<p><span style=\"color: rgb(0, 0, 0);\">Java.util.Map</span></p>\n', 1),
('f910dfb0-d9fb-484f-a611-df5090181ac7', '21cca90f-af01-476b-8969-61c577d8f5f9', '<p><span style=\"color: rgb(0, 0, 0);\">A default argument cannot be redefined in later declaration.</span></p>\n', 0),
('f917699d-ac8a-4ffb-b3ac-b24e6ae98a50', 'b48b7250-99e1-46e5-81eb-398ad924ee3d', '<p><span style=\"color: rgb(0, 0, 0);\">Copy Destructor</span></p>\n', 1),
('f9354c4a-af11-4a87-815f-dbe92f54d5ed', 'e0fa7a82-435d-48e4-a40a-c8067a2cd41a', '<p><span style=\"color: rgb(0, 0, 0);\">char (*ptr)*[3];</span></p>\n', 0),
('f942126f-8d4b-4541-8f69-da5ae043cff2', 'ec0f190a-a108-4cec-8b41-54589f088cd1', '<p><span style=\"color: rgb(0, 0, 0);\">There is a syntax error on line 1.</span></p>\n', 0),
('f95c1e55-e28a-4a9c-b0c6-4f3dbef6a3b8', '35d93b30-fa1e-4cfd-85d8-4d233bdd43fc', '<p><span style=\"color: rgb(0, 0, 0);\">Friend keyword can be used in the class to allow access to another class.</span></p>\n', 0),
('f97898f9-0221-46cf-bfca-ada11526a51b', '913b6120-f42a-4e9d-9dab-25e820cfc1e1', '<p><span style=\"color: rgb(0, 0, 0);\">It will not compile because a class cannot be protectedly inherited from other class.</span></p>\n', 0),
('f97c3d17-b892-4572-a1c8-80f9ad4288c6', '3272b79a-d9dc-48da-b35f-389d22c9d540', '<p><span style=\"color: rgb(58, 58, 58);\">0.048</span></p>\n', 0),
('f98b792c-1019-49ed-ae6a-deb79fa5de34', 'eb70aee0-3931-4e3c-982f-c39907fd0c4d', '<p><span style=\"color: rgb(0, 0, 0);\">throws Exception</span></p>\n', 1),
('f9908637-e280-4814-9104-9f749d177657', 'eda3cf93-9ccf-4905-a6b9-b5d242186c2d', '<p><span style=\"color: rgb(0, 0, 0);\">Only 1 is correct.</span></p>\n', 1),
('fa46bb13-adb5-4944-ad25-8ead83698987', '052cf1ba-3e99-4f1a-8800-67b12a910796', '<p><span style=\"color: rgb(0, 0, 0);\">Compilation fails because of an error at line 9.</span></p>\n', 0),
('fa473a5a-08e8-4401-ad99-cdbc53f709be', 'ce8ac650-a7ff-49e5-af0f-4a04d18be4e7', '<p><span style=\"color: rgb(0, 0, 0);\">Dynamic binding</span></p>\n', 0),
('fa69d6c1-4bcd-444c-b203-b1a14ced0c1b', 'c809565d-5e85-49ed-8c9d-03b6a002b687', '<p><span style=\"color: rgb(0, 0, 0);\">Both A and B.</span></p>\n', 1),
('fa8e520f-d85f-4a43-b83b-e277e4d65622', 'ac944f01-eb77-42d2-a9a2-2db2f2fb0cf0', '<p>The execution of all public method</p>\n', 1),
('faafcad5-3523-4491-8799-379b0f159a76', '8290b212-9c4b-4e5b-a0aa-9bec42f61bc9', '<p><span style=\"color: rgb(0, 0, 0);\">2 1 2 1 2 1</span></p>\n', 0),
('fab639e7-312d-4cd3-b6d3-20708e53efe2', 'ba3276da-6cd7-4d0d-9bae-f3e6cb4a450f', '<p>All of them</p>\n', 0),
('fad8b7de-341c-4d88-a5f9-497ac3a96f8f', '3c900839-f3ac-4fa3-a9dd-e8d29b16f097', '<p>It is not possible</p>\n', 0),
('fae57636-5032-4cbe-a384-ac4386632690', '77f984fe-9782-4a1c-a8ee-20591ea67f9c', '<p>!!</p>\n', 0),
('fae821ec-7da2-4065-bc99-3cbaed7d9b68', '946b9fc9-deab-427c-a5e0-32076d95438e', '<p><span style=\"color: rgb(0, 0, 0);\">If a is true and b is false then the output is \"notB\"</span></p>\n', 0),
('fb9c8312-7cb6-4e18-b691-6e2e08a6bed3', '7a31c9b3-872b-419b-a706-fe04ca0b7a85', '<p><span style=\"color: rgb(0, 0, 0);\">5 3</span></p>\n', 0),
('fba4ac98-eab5-4fbb-922c-f802f0487019', '2d33ff1a-da20-456b-802c-c7a96872bb14', '<p><span style=\"color: rgb(0, 0, 0);\">protected</span></p>\n', 0),
('fbb31326-ed46-43c2-889e-68e90e8e4060', 'fa597df9-dd7d-4260-97b0-56cafd3a9f34', '<p><span style=\"color: rgb(0, 0, 0);\">Multilevel inheritance</span></p>\n', 0),
('fbd2d6a4-f5c2-40c4-9fed-ccb111292c46', 'c2471e9e-8556-4f79-ab89-a5483142d378', '<p><span style=\"color: rgb(0, 0, 0);\">4,2,4</span></p>\n', 0),
('fbeefde1-e9b2-42d5-9b24-1f79acab08f3', '97015c85-5098-4743-831a-b4bcc1950f6d', '<p><span style=\"color: rgb(0, 0, 0);\">error</span></p>\n', 0),
('fc07854b-bd1c-410e-992d-3f2fbc7bab35', 'f1df04a8-5473-45cd-8b62-58626a2abeef', '<p><span style=\"color: rgb(0, 0, 0);\">finished</span></p>\n', 0),
('fc85f30b-4cf2-4cc9-8a16-996de05b67e9', 'fc3f855c-31e0-40a9-8b68-9ba0c614cd8c', '<p><span style=\"color: rgb(0, 0, 0);\">float f = 1.0;</span></p>\n', 0),
('fc966199-6148-4e63-a1d6-1bc9ef305b8e', 'c85ea1ba-7bb7-4db0-8fb5-7ea92ecb6d4b', '<p><span style=\"color: rgb(0, 0, 0);\">Line 22</span></p>\n', 1),
('fcbf9f53-78e0-4343-a4e6-840b007da213', '92dc67ba-8162-4a2f-b44b-6edb7fe8cde5', '<p>C<span style=\"color: rgb(0, 0, 0);\">aesar cipher</span></p>\n', 1),
('fdd09f4b-bc99-4616-b714-a79aa0136d00', '4ae3ce39-fa01-4a89-ac5c-388656909464', '<p><span style=\"color: rgb(58, 58, 58);\">Service Set Independent Device</span></p>\n', 0),
('fde580a4-fe76-41c2-a005-0e0aad93a8c9', '82ec7648-df7f-464e-b07a-976a6624d775', '<p><span style=\"color: rgb(58, 58, 58);\">Network Injection</span></p>\n', 0),
('fe4a1300-463d-4765-bbdd-0944b7127dcd', 'f215b4e5-e1df-48c3-8c77-edd383f16a9c', '<p><span style=\"color: rgb(0, 0, 0);\">1 and 5</span></p>\n', 0),
('fe81764a-512a-4830-8a50-b1e73150af55', 'feb50af5-92f8-424e-9eed-054649c25bec', '<p><span style=\"color: rgb(0, 0, 0);\">Protected</span></p>\n', 0),
('fed60453-fa56-434a-b2fd-88454e91775a', '0108f3dd-8269-4758-8484-ef8811eb7393', '<p><span style=\"color: rgb(58, 58, 58);\">0.038</span></p>\n', 0),
('fed6276b-e595-4255-9e1b-ecbf12f7f057', '0e5a5173-cdc6-4b73-a39d-396c0d220374', '<p>Encryption Size</p>\n', 0),
('ff3a7828-1440-4acc-8029-028396280d64', '243a91a1-7c5d-46af-9a5f-5a4d58f85266', '<p><span style=\"color: rgb(0, 0, 0);\">It can implement multiple interfaces regardless of whether it also extends a class.</span></p>\n', 0),
('ff63656d-3ca9-41cf-a8bf-50c8f26fc5d3', 'fd98ac26-a592-41d9-bc84-1afb240ba084', '<p><span style=\"color: rgb(0, 0, 0);\">cmp is a pointer to a function which returns void .</span></p>\n', 1),
('ff817567-90b4-42bf-b1d8-223bc7bef085', '7904cb02-22a4-4e63-ba11-7852f41343a0', '<p><span style=\"color: rgb(0, 0, 0);\">14 0</span></p>\n', 0),
('ffa96dd8-04b9-4a76-b5a9-d8eae85eb80d', 'dee34d3d-37c5-4e82-828f-091bedae5dd9', '<p><span style=\"color: rgb(0, 0, 0);\">Default</span></p>\n', 0);

-- --------------------------------------------------------

--
-- Table structure for table `quiz_password_resets`
--

CREATE TABLE `quiz_password_resets` (
  `email` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `token` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- --------------------------------------------------------

--
-- Table structure for table `quiz_questions`
--

CREATE TABLE `quiz_questions` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `exam_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `question` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_questions`
--

INSERT INTO `quiz_questions` (`id`, `exam_id`, `question`, `created_at`, `updated_at`) VALUES
('0062f70e-3f59-406a-a56a-d361fd45d4eb', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:20:21', '2021-02-23 15:20:21'),
('00f89d07-f5eb-46d6-bfa0-79ca7810086f', '9a2a718e-7e68-4837-aa55-68febbc0136e', '<p>void start() {&nbsp;<p>&nbsp;&nbsp;A a = new A();&nbsp;</p><p>&nbsp;&nbsp;B b = new B();&nbsp;</p><p>&nbsp;&nbsp;a.s(b);&nbsp;</p><p>&nbsp;&nbsp;b = null; /* Line 5 */</p><p>&nbsp;&nbsp;a = null;&nbsp;/* Line 6 */</p><p>&nbsp;&nbsp;System.out.println(\"start completed\"); /* Line 7 */</p><p>}</p><p><br></p><p>When is the B object, created in line 3, eligible for garbage collection?</p></p>\n', '2021-02-24 19:49:04', '2021-02-24 19:49:04'),
('0108f3dd-8269-4758-8484-ef8811eb7393', '677ec257-eaf6-438f-9897-4efc22c379a5', '<p><span style=\"color: rgb(58, 58, 58);\">The Index of Coincidence for English language is approximately</span><p><br></p><p><span style=\"color: rgb(58, 58, 58);\">Hint: the answer is C</span></p></p>\n', '2021-02-21 18:31:51', '2021-02-21 18:31:51'),
('011fc229-cf60-46f5-8e89-e7b86fdec220', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '<p><span style=\"color: rgb(0, 0, 0);\">Which is a reserved word in the Java programming language?</span></p>\n', '2021-02-24 19:54:24', '2021-02-24 19:54:24'),
('0297c903-0e7b-4152-bffc-d71a572ef1a2', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p>What will be the output of the program ?<p><br></p><p>#include</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int i=3, *j, k;</p><p>&nbsp;&nbsp;j = &amp;i;</p><p>&nbsp;&nbsp;printf(\"%dn\", i**j*i+*j);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:15:25', '2021-02-23 14:15:25'),
('04dee710-a928-43fe-b6a1-46ab880bf061', '137cb6ee-d459-4a0d-956d-94b26c97a592', '<p>What is an after throwing advice?</p>\n', '2021-02-20 18:19:04', '2021-02-20 18:19:04'),
('052cf1ba-3e99-4f1a-8800-67b12a910796', '5118424b-7611-415a-ae13-a1659bb974c0', '<p>What will be the output of the program?<p><br></p><p>class Exc0 extends Exception { }&nbsp;</p><p>class Exc1 extends Exc0 { } /* Line 2 */</p><p>public class Test&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;public static void main(String args[])&nbsp;</p><p>&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Exc1(); /* Line 9 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;catch (Exc0 e0) /* Line 11 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"Ex0 caught\");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;catch (Exception e)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"exception caught\");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p></p>\n', '2021-02-23 18:24:09', '2021-02-23 18:24:09'),
('07383d27-accb-446f-818a-c2f084e306f6', '659ba20a-23ef-46e3-937b-fe2413577197', '<p>pi in terms of base 26 is</p>\n', '2021-02-21 10:14:01', '2021-02-21 10:14:01'),
('077fdade-a412-4b88-a5a4-4003b3a02420', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p>Which of the following statements is correct?<p><br></p><p>Once a reference variable has been defined to refer to a particular variable it can refer to any other variable.</p><p>A reference is not a constant pointer.</p></p>\n', '2021-02-23 15:44:38', '2021-02-23 15:44:38'),
('084dfd57-8b1c-4835-9b79-7aba5f9367d2', '677ec257-eaf6-438f-9897-4efc22c379a5', '<p><span style=\"color: rgb(58, 58, 58);\">Choose from among the following cipher systems, from best to the worst, with respect to ease of decryption using frequency analysis.</span></p>\n', '2021-02-21 18:23:04', '2021-02-21 18:23:04'),
('08722535-474c-4047-b8d6-e836f3bb5e08', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '<p><span style=\"color: rgb(0, 0, 0);\">Which one of these lists contains only Java programming language keywords?</span></p>\n', '2021-02-24 19:55:48', '2021-02-24 19:55:48'),
('09f472e3-b4a0-42c1-acb0-03d022211980', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">In AES the 4&times;4 bytes matrix key is transformed into a keys of size __________</span></p>\n', '2021-02-22 13:02:14', '2021-02-22 13:02:14'),
('0e5a5173-cdc6-4b73-a39d-396c0d220374', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The Advanced Encryption Standard (AES), has three different configurations with respect to the number of rounds and</span></p>\n', '2021-02-20 19:55:57', '2021-02-20 19:55:57'),
('0e9e1d1d-7829-461e-8921-1287127e9a1f', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p>Which of the following statements is correct?<p><br></p><p>An array of references is acceptable.</p><p>We can also create a reference to a reference.</p></p>\n', '2021-02-23 15:40:01', '2021-02-23 15:40:01'),
('0efca4f7-d5ac-430a-9956-de997ed89038', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">Which of these is not a valid Signal-Hiding Technique for Wireless networks?</span></p>\n', '2021-02-21 19:27:28', '2021-02-21 19:27:28'),
('0fbd2d42-f8d6-4edc-afa2-48610846fe73', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '<p>What is not provided by the JdbcTemplate?</p>\n', '2021-02-20 18:47:30', '2021-02-20 18:47:30'),
('0fcc2fed-debd-4713-98ad-d22f8eccd462', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">Symmetric-key cryptography started thousands of years ago when people needed to exchange</span></p>\n', '2021-02-20 20:14:43', '2021-02-20 20:14:43'),
('0fe541b4-b569-461d-95dc-3f481c037578', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include&lt;stdio.h&gt;</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;const char *s = \"\";</p><p class=\"ql-align-justify\">&nbsp;&nbsp;char str[] = \"Hello\";</p><p class=\"ql-align-justify\">&nbsp;&nbsp;s = str;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;while(*s)</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%c\", *s++);</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 13:51:10', '2021-02-23 13:51:10'),
('176d6148-dea3-4472-a96c-963d199fca6f', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">An encryption algorithm transforms the plaintext into</span></p>\n', '2021-02-20 19:58:52', '2021-02-20 19:58:52'),
('17c9a576-4af8-4d6b-9662-0b3771e50109', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p><span style=\"color: rgb(0, 0, 0);\">Which collection class allows you to access its elements by associating a key with an element\'s value, and provides synchronization?</span></p>\n', '2021-02-25 02:47:28', '2021-02-25 02:47:28'),
('17e90cb5-caa0-4095-b182-a28b8d5cfaf3', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">Another name for the Wireless Ethernet 802.11a is-</span></p>\n', '2021-02-21 19:31:09', '2021-02-21 19:31:09'),
('1833f24c-a2e3-45ce-80e4-207aa4a773a1', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '<p>Assuming @Transactional annotation support is enabled and the transferMoney method is called through a Spring AOP proxy, what is the behaviour of the following code sample?<p><br></p><p>@Transactional(propagation=Propagation.REQUIRED)</p><p>public void transferMoney(Account src, Account target, double amount) {</p><p>    add(src, -amount);</p><p>    add(src, amount);</p><p>}</p><p><br></p><p>@Transactional(propagation=Propagation.REQUIRES_NEW)</p><p>public void add(Amount account, Double amount) {</p><p>    // IMPLEMENTATION</p><p>}</p></p>\n', '2021-02-20 19:28:11', '2021-02-20 19:28:11'),
('187b908d-43dc-42fb-9646-ce50de416144', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p>Which three are methods of the Object class?<p><br></p><p>notify();</p><p>notifyAll();</p><p>isInterrupted();</p><p>synchronized();</p><p>interrupt();</p><p>wait(long msecs);</p><p>sleep(long msecs);</p><p>yield();</p></p>\n', '2021-02-24 20:05:52', '2021-02-24 20:05:52'),
('1891aa80-0d8c-4204-bfcb-13f456c761dd', '2ac55e0a-9465-497e-a756-0cee16244c10', '<p>What will be the output of the program?<p><br></p><p>public class SwitchTest&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;public static void main(String[] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"value =\" + switchIt(4));&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;public static int switchIt(int x)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int j = 1;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;switch (x)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case l: j++;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 2: j++;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 3: j++;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 4: j++;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 5: j++;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default: j++;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return j + x;&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p></p>\n', '2021-02-25 03:14:22', '2021-02-25 03:14:22'),
('18fa0c62-31b5-4a88-8430-9f2bf4656a25', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">Can a class have virtual destructor?</span></p>\n', '2021-02-23 15:32:38', '2021-02-23 15:32:38'),
('196cb202-2bcb-4662-9a33-8443184e8e41', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p><span style=\"color: rgb(0, 0, 0);\">Which cannot directly cause a thread to stop executing?</span></p>\n', '2021-02-24 20:04:25', '2021-02-24 20:04:25'),
('198bbfd5-0f7a-47f6-a53b-df13da867262', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p><span style=\"color: rgb(0, 0, 0);\">What is (void*)0?</span></p>\n', '2021-02-23 14:21:44', '2021-02-23 14:21:44'),
('1a8b93f4-3305-4385-9c6a-112b55c9d7a7', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p>Assume the following method is properly synchronized and called from a thread A on an object B:<p><br></p><p>wait(2000);</p><p>After calling this method, when will the thread A become a candidate to get another turn at the CPU?</p></p>\n', '2021-02-24 20:00:05', '2021-02-24 20:00:05'),
('1ab87519-1ecb-418c-892a-caab6d67b768', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">What happens when a class with parameterized constructors and having no default constructor is used in a program and we create an object that needs a zero-argument constructor?</span></p>\n', '2021-02-23 15:33:13', '2021-02-23 15:33:13'),
('1be3d7f7-3260-462a-91d9-ab3703c473ad', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p>Which of the following statements is correct?<p><br></p><p>Change a reference changes the referent.</p><p>We can create an array of references.</p></p>\n', '2021-02-23 15:43:20', '2021-02-23 15:43:20'),
('1c129c2c-fe24-4c2f-95f7-b414217628ee', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p>Can you combine the following two statements into one?<p><br></p><p>char *p;</p><p>p = (char*) malloc(100);</p></p>\n', '2021-02-23 14:21:14', '2021-02-23 14:21:14'),
('1c62daee-e9e6-46ca-9dfe-8dc3c99c5014', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p class=\"ql-align-justify\">Which of the following is a mechanism of static polymorphism?</p>\n', '2021-02-23 14:49:23', '2021-02-23 14:49:23'),
('1c66aaab-23d3-4cd9-9bbf-00ba530949d2', '76724e02-ddca-4592-80f3-b06b389013b9', '<p><span style=\"color: rgb(58, 58, 58);\">When a hash function is used to provide message authentication, the hash function value is referred to as</span></p>\n', '2021-02-22 12:46:47', '2021-02-22 12:46:47'),
('1ca48e83-f7f3-4c31-ab75-458c80cfba69', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p><span style=\"color: rgb(0, 0, 0);\">Which class or interface defines the wait(), notify(),and notifyAll() methods?</span></p>\n', '2021-02-24 19:58:46', '2021-02-24 19:58:46'),
('1ea2d422-f6ec-44e9-9b0b-dd4bb7998814', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct regarding destructor of base class?</span></p>\n', '2021-02-23 15:13:06', '2021-02-23 15:13:06'),
('1eb8d787-20d0-4ebf-8b4b-820e50709c24', '5118424b-7611-415a-ae13-a1659bb974c0', '<p>What will be the output of the program?<p><br></p><p>public class Foo&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;public static void main(String[] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println( \"Finally\" );&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p></p>\n', '2021-02-23 19:40:37', '2021-02-23 19:40:37'),
('1f43a0b2-87aa-4d6a-91aa-0f26a9ff06e6', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p>What will be the output of the program in Turb C (under DOS)?<p><br></p><p>#include&lt;stdio.h&gt;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int arr[5], i=0;</p><p>&nbsp;&nbsp;while(i&lt;5)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;arr[i]=++i;</p><p><br></p><p>&nbsp;&nbsp;for(i=0; i&lt;5; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%d, \", arr[i]);</p><p><br></p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:37:00', '2021-02-23 13:37:00'),
('1f6c7a3a-d55d-47be-b51d-a80c5dc1e595', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following two entities (reading from Left to Right) can be connected by the dot operator?</span></p>\n', '2021-02-23 15:12:23', '2021-02-23 15:12:23'),
('1fbc2aa6-3102-4cf2-82d6-9691502bb110', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">What is correct about the static data member of a class?</span></p>\n', '2021-02-23 14:58:19', '2021-02-23 14:58:19'),
('1fdbaafd-3b2c-40ac-bcc1-90875bfd099e', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:45:18', '2021-02-23 15:45:18'),
('206a984d-c83e-4002-977a-a30f35311af3', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">A transposition cipher reorders (permutes) symbols in a</span></p>\n', '2021-02-20 20:17:16', '2021-02-20 20:17:16'),
('20d0a3e4-6c45-4de7-821a-f1562636ae4a', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p><span style=\"color: rgb(0, 0, 0);\">A pointer is</span></p>\n', '2021-02-23 14:17:14', '2021-02-23 14:17:14'),
('219175a4-21bf-44be-b7f2-45fd40c9f294', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p class=\"ql-align-justify\">What will happen if a class is not having any name?</p>\n', '2021-02-23 14:56:04', '2021-02-23 14:56:04'),
('21cca90f-af01-476b-8969-61c577d8f5f9', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is incorrect?</span></p>\n', '2021-02-23 15:21:02', '2021-02-23 15:21:02'),
('2220c5d6-60a5-40f4-890d-a5d6a92e0bcb', '137cb6ee-d459-4a0d-956d-94b26c97a592', '<p>What is an advice?</p>\n', '2021-02-20 18:17:18', '2021-02-20 18:17:18'),
('2291d61d-ea1f-44b8-b3d5-effdbdb15673', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The ciphers of today are called</span></p>\n', '2021-02-20 20:04:47', '2021-02-20 20:04:47'),
('22c8c4e3-8004-4f7a-a886-bc958b03d27c', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p>Which of the following statements is correct?<p>Pointer to a reference and reference to a pointer both are valid.</p><p>When we use reference, we are actually referring to a referent.</p></p>\n', '2021-02-23 15:36:01', '2021-02-23 15:36:01'),
('2304d08a-9266-468d-bb87-e16e12f21c50', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statements is correct in C++?</span></p>\n', '2021-02-23 15:00:49', '2021-02-23 15:00:49'),
('242f678d-c55e-4203-b28e-cc361350e933', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">Constructors __________ to allow different approaches of object construction.</span></p>\n', '2021-02-23 15:26:55', '2021-02-23 15:26:55'),
('243a91a1-7c5d-46af-9a5f-5a4d58f85266', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '<p><span style=\"color: rgb(0, 0, 0);\">Which is true about an anonymous inner class?</span></p>\n', '2021-02-25 03:11:10', '2021-02-25 03:11:10'),
('25832c05-7b76-4df7-a741-1854d0e41986', '76724e02-ddca-4592-80f3-b06b389013b9', '<p><span style=\"color: rgb(58, 58, 58);\">Message authentication code is also known as</span></p>\n', '2021-02-22 12:47:23', '2021-02-22 12:47:23'),
('272a179d-3e85-4263-9b74-bed69505520d', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include&lt;stdio.h&gt;</p><p class=\"ql-align-justify\">#include&lt;stdlib.h&gt;</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">union employee</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;char name[15];</p><p class=\"ql-align-justify\">&nbsp;&nbsp;int age;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;float salary;</p><p class=\"ql-align-justify\">};</p><p class=\"ql-align-justify\">const union employee e1;</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;strcpy(e1.name, \"K\");</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\"%s %d %f\", e1.name, e1.age, e1.salary);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 13:54:02', '2021-02-23 13:54:02'),
('2744ee9f-4688-4f81-9c27-fb83fa76e67c', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is incorrect?</span></p>\n', '2021-02-23 15:29:40', '2021-02-23 15:29:40'),
('27e6274d-827d-46a4-a9e6-94862ef003e4', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '<p>What will be the output of the program?<p><br></p><p>public class Test&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static int y;</p><p>&nbsp;&nbsp;public static void foo(int x)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"foo \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;y = x;</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;public static int bar(int z)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"bar \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return y = z;</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;public static void main(String [] args )&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int t = 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert t &gt; 0 : bar(7);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert t &gt; 1 : foo(8); /* Line 18 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"done \");</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 03:00:52', '2021-02-25 03:00:52'),
('28343bad-2ee2-498f-81b3-2cd9f90ddfa1', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '<p>public interface Foo&nbsp;<p>{&nbsp;</p><p>&nbsp;&nbsp;int k = 4; /* Line 3 */</p><p>}</p><p>Which three piece of codes are equivalent to line 3?</p><p>final int k = 4;</p><p>public int k = 4;</p><p>static int k = 4;</p><p>abstract int k = 4;</p><p>volatile int k = 4;</p><p>protected int k = 4;</p></p>\n', '2021-02-24 19:52:35', '2021-02-24 19:52:35'),
('2a80b448-834d-48ee-b7ca-c90f34cae525', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The Cryptography can provide</span></p>\n', '2021-02-20 20:21:16', '2021-02-20 20:21:16'),
('2aa3a438-9382-499b-82ed-30c279f3651d', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class Bitwise&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x = 11 &amp; 9;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int y = x ^ 3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println( y | 12 );</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-24 20:12:54', '2021-02-24 20:12:54'),
('2aaadbba-6513-4195-8c86-b88eae5aa6e5', '137cb6ee-d459-4a0d-956d-94b26c97a592', '<p>What is the unique correct answer about Spring AOP support?</p>\n', '2021-02-20 17:56:16', '2021-02-20 17:56:16'),
('2d33ff1a-da20-456b-802c-c7a96872bb14', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following is an invalid visibility label while inheriting a class?</span></p>\n', '2021-02-23 14:53:44', '2021-02-23 14:53:44'),
('2e4d385c-81da-42ef-b06d-60b6cd30f85c', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p class=\"ql-align-justify\">Which of the following operators cannot be overloaded?</p>\n', '2021-02-23 14:53:12', '2021-02-23 14:53:12'),
('2f55f179-55b6-4e54-bc03-ab78558c28ba', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p>What do the following declaration signify?<p><br></p><p>int (*pf)();</p></p>\n', '2021-02-23 14:36:37', '2021-02-23 14:36:37'),
('308839d1-bb63-4629-977c-faf1a8a0aa7f', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '<p>What configuration is supported by the LocalSessionFactoryBean?</p>\n', '2021-02-20 18:51:07', '2021-02-20 18:51:07'),
('30f09c42-1ad0-4478-b022-867f637ec317', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p>What will be the output of the program ?<p><br></p><p>#include&lt;stdio.h&gt;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int arr[1]={10};</p><p>&nbsp;&nbsp;printf(\"%dn\", 0[arr]);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:36:14', '2021-02-23 13:36:14'),
('3144b4d7-e4a8-4df1-b596-6cbaa0459097', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">How many rounds does the AES-192 perform?</span></p>\n', '2021-02-22 12:58:31', '2021-02-22 12:58:31'),
('3157f4cb-1542-40cb-ac7c-7c392a96222e', '677ec257-eaf6-438f-9897-4efc22c379a5', '<p><span style=\"color: rgb(58, 58, 58);\">Caesar Cipher is an example of</span></p>\n', '2021-02-21 18:20:25', '2021-02-21 18:20:25'),
('318a93cc-0630-437a-8306-aff5163e696f', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '<p><span style=\"color: rgb(0, 0, 0);\">What is the numerical range of a char?</span></p>\n', '2021-02-24 19:51:16', '2021-02-24 19:51:16'),
('31b7ded0-5c4b-4c4c-a8f1-aa337b8cb46e', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '<p>public class Test&nbsp;<p>{&nbsp;</p><p>&nbsp;&nbsp;public void foo()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert false; /* Line 5 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert false; /* Line 6 */</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;public void bar()</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;while(true)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assert false; /* Line 12 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert false;&nbsp;/* Line 14 */</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p><p><br></p><p>What causes compilation to fail?</p></p>\n', '2021-02-25 03:01:35', '2021-02-25 03:01:35'),
('323fe7ec-17cc-4cf5-94b8-44a3a2941d5e', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following gets called when an object goes out of scope?</span></p>\n', '2021-02-23 15:27:37', '2021-02-23 15:27:37'),
('3272b79a-d9dc-48da-b35f-389d22c9d540', '677ec257-eaf6-438f-9897-4efc22c379a5', '<p><span style=\"color: rgb(58, 58, 58);\">If all letters have the same chance of being chosen, the IC is approximately</span></p>\n', '2021-02-21 18:32:33', '2021-02-21 18:32:33'),
('32be3e83-1e43-45a6-8df1-989761afd66e', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p>What will be the output of the program?<p><br></p><p>#include</p><p>#define PRINT(i) printf(\"%d,\",i)</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int x=2, y=3, z=4;</p><p>&nbsp;&nbsp;PRINT(x);</p><p>&nbsp;&nbsp;PRINT(y);</p><p>&nbsp;&nbsp;PRINT(z);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:23:46', '2021-02-23 14:23:46'),
('34ceb489-65b7-42ad-a670-ce40cfef106d', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p><span style=\"color: rgb(0, 0, 0);\">Suppose that you would like to create an instance of a new Map that has an iteration order that is the same as the iteration order of an existing instance of a Map. Which concrete implementation of the Map interface should be used for the new instance?</span></p>\n', '2021-02-25 02:52:43', '2021-02-25 02:52:43'),
('35d93b30-fa1e-4cfd-85d8-4d233bdd43fc', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statements is incorrect?</span></p>\n', '2021-02-23 15:13:45', '2021-02-23 15:13:45'),
('36118c14-761f-458d-96f4-b01706f8d03e', '137cb6ee-d459-4a0d-956d-94b26c97a592', '<p>Using the Spring AOP framework, what is the visibility of the method matches by the following join point?<p>@Pointcut(\"execution(**(..))\")</p><p>private void anyOperation() {};</p></p>\n', '2021-02-20 18:00:54', '2021-02-20 18:00:54'),
('37155d05-5e33-43e7-82ed-5350b5610c85', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">&ldquo;When bogus reconfiguration commands are used to affect routers and switches to degrade network performance.&rdquo; Which type of Wireless network threat would you classify this under?</span></p>\n', '2021-02-21 19:23:32', '2021-02-21 19:23:32'),
('3750c3b3-5ad8-48ca-9efe-b818013d4866', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p><span style=\"color: rgb(0, 0, 0);\">Which collection class allows you to associate its elements with key values, and allows you to retrieve objects in FIFO (first-in, first-out) sequence?</span></p>\n', '2021-02-25 02:48:19', '2021-02-25 02:48:19'),
('37aee43a-1c00-4102-a8e4-c5118a7c7099', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '<p><span style=\"color: rgb(0, 0, 0);\">Which is true about a method-local inner class?</span></p>\n', '2021-02-25 03:09:26', '2021-02-25 03:09:26'),
('38b623ae-fa30-4f87-a680-64352230bdd4', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p>What will be the output of the program ?<p><br></p><p>#include</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;char str[20] = \"Hello\";</p><p>&nbsp;&nbsp;char *const p=str;</p><p>&nbsp;&nbsp;*p=\'M\';</p><p>&nbsp;&nbsp;printf(\"%sn\", str);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:14:53', '2021-02-23 14:14:53'),
('399f009c-57ac-4b26-9274-263263cf10b6', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p>What will be the output of the program ?<p><br></p><p>#include</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;char *str;</p><p>&nbsp;&nbsp;str = \"%s\";</p><p>&nbsp;&nbsp;printf(str, \"Kn\");</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:14:19', '2021-02-23 14:14:19'),
('3b6cd918-13cb-4c31-aaf9-454f9e4d13c1', '677ec257-eaf6-438f-9897-4efc22c379a5', '<p><span style=\"color: rgb(58, 58, 58);\">Use Caesar&rsquo;s Cipher to decipher the following</span><p><span style=\"color: rgb(58, 58, 58);\">HQFUBSWHG WHAW</span></p></p>\n', '2021-02-21 18:17:34', '2021-02-21 18:17:34'),
('3b9036c1-9afc-4e6e-b5b5-9c38f46c5c81', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p>D<span style=\"color: rgb(0, 0, 0);\">ata Encryption Standard (DES), was designed by</span></p>\n', '2021-02-20 20:01:33', '2021-02-20 20:01:33'),
('3c270c94-de39-4667-90fb-333d922156f4', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p>What will the SWAP macro in the following program be expanded to on preprocessing? will the code compile?<p><br></p><p>#include&lt;stdio.h&gt;</p><p>#define SWAP(a, b, c)(c t; t=a, a=b, b=t)</p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int x=10, y=20;</p><p>&nbsp;&nbsp;SWAP(x, y, int);</p><p>&nbsp;&nbsp;printf(\"%d %dn\", x, y);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:28:36', '2021-02-23 14:28:36'),
('3c5cee0d-9753-4d7c-af76-d62e1a93d63b', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">VPN stands for &ndash;</span></p>\n', '2021-02-21 19:29:33', '2021-02-21 19:29:33'),
('3c900839-f3ac-4fa3-a9dd-e8d29b16f097', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '<p>Why is it a best practice to mark transaction as read-only when code does not write anything to the database?</p>\n', '2021-02-20 19:02:54', '2021-02-20 19:02:54'),
('3d0d8409-4376-4330-9b1e-7fa0457f7b3b', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">&ldquo;When communication is unknowingly going through an adversary/intermediate.&rdquo; Which type of Wireless network threat would you classify this under?</span></p>\n', '2021-02-21 19:24:17', '2021-02-21 19:24:17'),
('3d464d28-b913-4dd0-8c4d-c7bbb248cd5b', '659ba20a-23ef-46e3-937b-fe2413577197', '<p>Dividing (11001001) by (100111) gives remainder &ndash;</p>\n', '2021-02-21 10:12:51', '2021-02-21 10:12:51'),
('3d7bf805-d7fa-47d3-a62f-b0dfe5d18950', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following is not the member of class?</span></p>\n', '2021-02-23 14:46:12', '2021-02-23 14:46:12'),
('3d7f4959-cc33-4ec7-a0df-be440f033e68', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">Like DES, AES also uses Feistel Structure.</span></p>\n', '2021-02-22 12:56:58', '2021-02-22 12:56:58'),
('3ec25e9b-4cf1-47e9-9cc2-c0b44b22c57d', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p><span style=\"color: rgb(0, 0, 0);\">How many bytes are occupied by near, far and huge pointers (DOS)?</span></p>\n', '2021-02-23 14:19:10', '2021-02-23 14:19:10'),
('3ed553e3-2750-4efc-a1f2-9d365f86547c', '76724e02-ddca-4592-80f3-b06b389013b9', '<p><span style=\"color: rgb(58, 58, 58);\">Which one of the following is not an application hash functions?</span></p>\n', '2021-02-22 12:50:40', '2021-02-22 12:50:40'),
('4086e69d-a1ce-49e1-944e-0ac3c0ab5e12', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p>class X implements Runnable&nbsp;<p>{&nbsp;</p><p>&nbsp;&nbsp;public static void main(String args[])&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/* Missing code? */</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;public void run() {}&nbsp;</p><p>}</p><p><br></p><p>Which of the following line of code is suitable to start a thread?</p></p>\n', '2021-02-24 20:05:11', '2021-02-24 20:05:11'),
('4087e203-cbbc-4382-8a71-7124b31c1059', '2ac55e0a-9465-497e-a756-0cee16244c10', '<p>What will be the output of the program?<p><br></p><p>int i = 1, j = 10;&nbsp;</p><p>do&nbsp;</p><p>{</p><p>&nbsp;&nbsp;if(i &gt; j)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;j--;&nbsp;</p><p>} while (++i &lt; 5);&nbsp;</p><p>System.out.println(\"i = \" + i + \" and j = \" + j);</p></p>\n', '2021-02-25 03:15:48', '2021-02-25 03:15:48'),
('41a58626-c56c-43ef-a3ec-0494b8ab70c0', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class Test&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x=20;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;String sup = (x &lt; 15) ? \"small\" : (x &lt; 22)? \"tiny\" : \"huge\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(sup);</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 02:38:04', '2021-02-25 02:38:04'),
('423d0c00-55e9-421f-bb94-60d723008a53', '659ba20a-23ef-46e3-937b-fe2413577197', '<p>In brute force attack, on average half of all possible keys must be tried to achieve success.</p>\n', '2021-02-21 10:10:43', '2021-02-21 10:10:43'),
('447549cc-b15f-461d-848d-6c082c980fea', '2ac55e0a-9465-497e-a756-0cee16244c10', '<p>What will be the output of the program?<p><br></p><p>int i = l, j = -1;&nbsp;</p><p>switch (i)&nbsp;</p><p>{</p><p>&nbsp;&nbsp;case 0, 1: j = 1; /* Line 4 */</p><p>&nbsp;&nbsp;case 2: j = 2;&nbsp;</p><p>&nbsp;&nbsp;default: j = 0;&nbsp;</p><p>}&nbsp;</p><p>System.out.println(\"j = \" + j);</p></p>\n', '2021-02-25 03:16:30', '2021-02-25 03:16:30'),
('4799b43f-71bf-4de0-b429-dd1b5b7fc6b1', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:15:52', '2021-02-23 15:15:52'),
('49477fde-d1a5-4438-afd9-39a623f787c3', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class Test&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Test p = new Test();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;p.start();</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;void start()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;boolean b1 = false;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;boolean b2 = fix(b1);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(b1 + \" \" + b2);</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;boolean fix(boolean b1)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;b1 = true;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return b1;</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 02:41:18', '2021-02-25 02:41:18'),
('4ae3ce39-fa01-4a89-ac5c-388656909464', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">SSID stands for &ndash;</span></p>\n', '2021-02-21 19:26:07', '2021-02-21 19:26:07'),
('4b2d3b92-3853-4e20-bbab-ed52d9362f81', '659ba20a-23ef-46e3-937b-fe2413577197', '<p><span style=\"color: rgb(58, 58, 58);\">Reduce the following big-O natations:</span><p><br></p><p><span style=\"color: rgb(58, 58, 58);\">O[ ax</span><sup style=\"color: rgb(58, 58, 58);\">7</sup><span style=\"color: rgb(58, 58, 58);\">&nbsp;+ 3 x</span><sup style=\"color: rgb(58, 58, 58);\">3</sup><span style=\"color: rgb(58, 58, 58);\">&nbsp;+ sin(x)] =</span></p></p>\n', '2021-02-21 10:18:39', '2021-02-21 10:18:39'),
('4b724f8d-7f59-4503-b92f-ff444be4a93f', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p class=\"ql-align-justify\">Which constructor function is designed to copy objects of the same class type?</p>\n', '2021-02-23 15:30:55', '2021-02-23 15:30:55'),
('4c513303-bc22-4e1d-a6d8-59d29d89f615', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p>What will be the output of the program ?<p><br></p><p>#include&lt;stdio.h&gt;</p><p>void fun(int **p);</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int a[3][4] = {1, 2, 3, 4, 4, 3, 2, 8, 7, 8, 9, 0};</p><p>&nbsp;&nbsp;int *ptr;</p><p>&nbsp;&nbsp;ptr = &amp;a[0][0];</p><p>&nbsp;&nbsp;fun(&amp;ptr);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p><p>void fun(int **p)</p><p>{</p><p>&nbsp;&nbsp;printf(\"%dn\", **p);</p><p>}</p></p>\n', '2021-02-23 13:38:05', '2021-02-23 13:38:05'),
('4c8e4bb8-c80b-4f69-b94f-3c556f2c4f21', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p><span style=\"color: rgb(0, 0, 0);\">What will happen if in a C program you assign a value to an array element whose subscript exceeds the size of array?</span></p>\n', '2021-02-23 13:41:47', '2021-02-23 13:41:47'),
('4d5539a5-da8a-4f45-9783-ef8fd852e303', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">It is a __________ error to pass arguments to a destructor.</span></p>\n', '2021-02-23 15:25:05', '2021-02-23 15:25:05'),
('4deb4223-67d8-4fb2-be7c-3c0cb7631017', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '<p>What will be the output of the program in TurboC?<p><br></p><p>#include&lt;stdio.h&gt;</p><p>int fun(int **ptr);</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int i=10, j=20;</p><p>&nbsp;&nbsp;const int *ptr = &amp;i;</p><p>&nbsp;&nbsp;printf(\" i = %5X\", ptr);</p><p>&nbsp;&nbsp;printf(\" ptr = %d\", *ptr);</p><p>&nbsp;&nbsp;ptr = &amp;j;</p><p>&nbsp;&nbsp;printf(\" j = %5X\", ptr);</p><p>&nbsp;&nbsp;printf(\" ptr = %d\", *ptr);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:51:59', '2021-02-23 13:51:59'),
('4ee9a575-073c-4f4d-972b-730e5a37c1b3', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '<p><span style=\"color: rgb(0, 0, 0);\">Which statement is true about a static nested class?</span></p>\n', '2021-02-25 03:08:46', '2021-02-25 03:08:46'),
('4ef74cda-cbad-47a3-9f31-2af0a0039cdd', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">Which of the 4 operations are false for each round in the AES algorithm</span><p><br></p><p><span style=\"color: rgb(58, 58, 58);\"><span class=\"ql-cursor\">&#65279;</span>i) Substitute Bytes</span></p><p><span style=\"color: rgb(58, 58, 58);\">ii) Shift Columns</span></p><p><span style=\"color: rgb(58, 58, 58);\">iii) Mix Rows</span></p><p><span style=\"color: rgb(58, 58, 58);\">iv) XOR Round Key</span></p></p>\n', '2021-02-22 13:06:03', '2021-02-22 13:06:03'),
('5192d827-d122-4384-808b-cda84660cb82', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following function declaration is/are incorrect?</span></p>\n', '2021-02-23 15:19:11', '2021-02-23 15:19:11'),
('524eebd2-6eb0-47f2-9664-ea0c206837cf', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class BitShift&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x = 0x80000000;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(x + \" and&nbsp;\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;x = x &gt;&gt;&gt; 31;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(x);</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 02:39:37', '2021-02-25 02:39:37'),
('52f03634-86b9-4b8c-813d-88eba7eab87c', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span class=\"ql-cursor\">&#65279;</span><span style=\"color: rgb(0, 0, 0);\">Which one of the following options is correct?</span></p>\n', '2021-02-23 15:01:30', '2021-02-23 15:01:30'),
('5319fc80-c527-4b05-a622-5abc5fd0b7e6', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '<p>Does Spring provides programmatic transaction management?</p>\n', '2021-02-20 18:48:47', '2021-02-20 18:48:47'),
('531a7e26-8941-497a-b2b1-7932aa79e8e5', '659ba20a-23ef-46e3-937b-fe2413577197', '<p>If the sender and receiver use different keys, the system is referred to as conventional cipher system.</p>\n', '2021-02-21 10:11:28', '2021-02-21 10:11:28'),
('533ddb28-1a7e-4d65-9261-89385b0b4187', '137cb6ee-d459-4a0d-956d-94b26c97a592', '<p>Select method\'s signatures that match with the following pointcut:<p>execution(* com.test.service..*.*(*))</p></p>\n', '2021-02-20 18:04:14', '2021-02-20 18:04:14'),
('561422fd-1a46-425d-9431-9ee58b197054', '659ba20a-23ef-46e3-937b-fe2413577197', '<p><span style=\"color: rgb(58, 58, 58);\">The estimated computations required to crack a password of 6 characters from the 26 letter alphabet is-</span></p>\n', '2021-02-21 10:17:13', '2021-02-21 10:17:13'),
('575dd3fc-abfe-4e72-8625-e88ba3f8f30c', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include&lt;stdio.h&gt;</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;char far *near *ptr1;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;char far *far *ptr2;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;char far *huge *ptr3;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\"%d, %d, %dn\", sizeof(ptr1), sizeof(ptr2), sizeof(ptr3));</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 14:32:27', '2021-02-23 14:32:27'),
('578da245-d329-468f-9a1f-b88d0c6a631e', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p><span style=\"color: rgb(0, 0, 0);\">What would be the equivalent pointer expression for referring the array element a[i][j][k][l]</span></p>\n', '2021-02-23 14:17:57', '2021-02-23 14:17:57'),
('584b5e7f-ad40-4f23-8543-120500a58384', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">For the AES-128 algorithm there are __________ similar rounds and _________ round is different.</span></p>\n', '2021-02-22 13:03:01', '2021-02-22 13:03:01'),
('5a307b74-35cb-4282-9095-f9b477970c1a', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">&ldquo;When there is a lack of a central point of control.&rdquo; Which type of Wireless network threat would you classify this under?</span></p>\n', '2021-02-21 19:21:59', '2021-02-21 19:21:59'),
('5a960629-a10b-4e13-9cc5-09f3524a473d', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct with respect to the use of friend keyword inside a class?</span></p>\n', '2021-02-23 15:09:19', '2021-02-23 15:09:19'),
('5ef52068-1d5b-448d-93af-216fffd427ef', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:41:25', '2021-02-23 15:41:25'),
('5f44caf1-f485-4b74-984f-2f34a56aba35', '677ec257-eaf6-438f-9897-4efc22c379a5', '<p><span style=\"color: rgb(58, 58, 58);\">On Encrypting &ldquo;cryptography&rdquo; using Vignere Cipher System using the keyword &ldquo;LUCKY&rdquo; we get cipher text</span><p><br></p><p><span style=\"color: rgb(58, 58, 58);\"><span class=\"ql-cursor\">&#65279;</span>Cipher text:= Ci = Pi + ki mod m (mod 26).</span></p></p>\n', '2021-02-21 18:27:31', '2021-02-21 18:27:31'),
('6026287c-3c29-4b96-93ad-93a679e106b4', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">Wired networks are far more susceptible to eavesdropping and jamming than wireless networks.</span></p>\n', '2021-02-21 19:20:31', '2021-02-21 19:20:31'),
('619875da-75a2-420e-8efb-ab888e5a9d37', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p class=\"ql-align-justify\">Which of the following will not directly cause a thread to stop?</p>\n', '2021-02-24 19:59:22', '2021-02-24 19:59:22'),
('61a0aeb4-2451-4177-8177-4cfbb94280b3', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p class=\"ql-align-justify\">Which of the following statements are correct about 6 used in the program?<p class=\"ql-align-justify\">int num[6];</p><p class=\"ql-align-justify\">num[6]=21;</p></p>\n', '2021-02-23 13:33:45', '2021-02-23 13:33:45'),
('6346cb62-d6b5-4452-8ca3-444c07612229', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p>What does the following declaration mean?<p>int (*ptr)[10];</p></p>\n', '2021-02-23 13:41:03', '2021-02-23 13:41:03'),
('64e9e93f-d24d-42c8-8b38-8321b974f9fd', '2ac55e0a-9465-497e-a756-0cee16244c10', '<p>What will be the output of the program?<p><br></p><p>public class If2&nbsp;</p><p>{</p><p>&nbsp;&nbsp;static boolean b1, b2;</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x = 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if ( !b1 ) /* Line 7 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( !b2 ) /* Line 9 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b1 = true;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( 5 &gt; 6 )&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( !b1 )&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x + 10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if ( b2 = true ) /* Line 19 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x + 100;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if ( b1 | b2 ) /* Line 21 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x + 1000;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(x);</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 03:13:39', '2021-02-25 03:13:39'),
('65b6193b-2d89-4d74-840c-e4e9734e72ef', '5118424b-7611-415a-ae13-a1659bb974c0', '<p>Which four can be thrown using the throw statement?<p><br></p><p>Error</p><p>Event</p><p>Object</p><p>Throwable</p><p>Exception</p><p>RuntimeException</p></p>\n', '2021-02-23 18:22:25', '2021-02-23 18:22:25'),
('65b919ee-839d-49b5-a4d4-51d7fb7312bf', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p>What do the following declaration signify?<p><br></p><p>int *ptr[30];</p></p>\n', '2021-02-23 14:38:31', '2021-02-23 14:38:31'),
('6621a40a-7e9b-448d-8e23-8bc853b9b6b8', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p>Which two of the following methods are defined in class Thread?<p><br></p><p>start()</p><p>wait()</p><p>notify()</p><p>run()</p><p>terminate()</p></p>\n', '2021-02-24 20:03:45', '2021-02-24 20:03:45'),
('66d2b74a-54af-4cbc-acde-d45a3a011afc', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class PassA&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;PassA p = new PassA();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;p.start();</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;void start()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;long [] a1 = {3,4,5};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;long [] a2 = fix(a1);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(a1[0] + a1[1] + a1[2] + \" \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(a2[0] + a2[1] + a2[2]);</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;long [] fix(long [] a3)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;a3[1] = 7;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return a3;</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 02:42:00', '2021-02-25 02:42:00'),
('66e7e4bc-b04c-4678-a151-00f60806adf4', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '<p>public class Test&nbsp;<p>{&nbsp;</p><p>&nbsp;&nbsp;public void foo()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert false; /* Line 5 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert false; /* Line 6 */</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;public void bar()</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;while(true)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assert false; /* Line 12 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert false;&nbsp;/* Line 14 */</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">What causes compilation to fail?</span></p></p>\n', '2021-02-25 02:56:43', '2021-02-25 02:56:43'),
('66fbdb8a-db97-49ad-94aa-8ba92956bb22', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p class=\"ql-align-justify\">Which one of the following is the correct way to declare a pure virtual function?</p>\n', '2021-02-23 14:50:44', '2021-02-23 14:50:44'),
('6b8dd378-7455-44cd-8784-518d341655bc', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p>What will be the output of the program ?<p><br></p><p>#include&lt;stdio.h&gt;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;static char *s[] = {\"black\", \"white\", \"pink\", \"violet\"};</p><p>&nbsp;&nbsp;char **ptr[] = {s+3, s+2, s+1, s}, ***p;</p><p>&nbsp;&nbsp;p = ptr;</p><p>&nbsp;&nbsp;++p;</p><p>&nbsp;&nbsp;printf(\"%s\", **p+1);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:15:53', '2021-02-23 14:15:53'),
('6bcd2e5d-4ecc-4f7c-9673-6a4c4c822c2b', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">In Cryptography, when text is treated at the bit level, each character is replaced by</span></p>\n', '2021-02-20 20:18:18', '2021-02-20 20:18:18'),
('6d1d18af-a086-4496-887b-0df172bee5f8', '137cb6ee-d459-4a0d-956d-94b26c97a592', '<p>Which one is the correct statement about AOP proxy?</p>\n', '2021-02-20 17:51:23', '2021-02-20 17:51:23'),
('6e2f24da-aa99-49dd-9b95-0899bad785fd', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">In Rotation Cipher, keyless rotation the number of rotations is</span></p>\n', '2021-02-20 20:05:26', '2021-02-20 20:05:26'),
('6e5146f8-bb17-481b-9748-dd3c300dae40', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '<p>What will be the output of the program?<p><br></p><p>#include&lt;stdio.h&gt;</p><p>int fun(int **ptr);</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int i=10;</p><p>&nbsp;&nbsp;const int *ptr = &amp;i;</p><p>&nbsp;&nbsp;fun(&amp;ptr);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p><p>int fun(int **ptr)</p><p>{</p><p>&nbsp;&nbsp;int j = 223;</p><p>&nbsp;&nbsp;int *temp = &amp;j;</p><p>&nbsp;&nbsp;printf(\"Before changing ptr = %5xn\", *ptr);</p><p>&nbsp;&nbsp;const *ptr = temp;</p><p>&nbsp;&nbsp;printf(\"After changing ptr = %5xn\", *ptr);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:53:20', '2021-02-23 13:53:20'),
('6f59cdd9-2569-4096-9893-20ee4a99663a', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following will directly stop the execution of a Thread?</span></p>\n', '2021-02-24 20:02:34', '2021-02-24 20:02:34'),
('700ecdf9-0656-4644-a3f1-ff8b4ee795e0', '9a2a718e-7e68-4837-aa55-68febbc0136e', '<p><span style=\"color: rgb(0, 0, 0);\">What allows the programmer to destroy an object x?</span></p>\n', '2021-02-24 19:44:10', '2021-02-24 19:44:10');
INSERT INTO `quiz_questions` (`id`, `exam_id`, `question`, `created_at`, `updated_at`) VALUES
('708b65f3-0eb2-4769-a9c2-5f3dbdcb8aab', '5118424b-7611-415a-ae13-a1659bb974c0', '<p>What will be the output of the program?<p><br></p><p>public class Test&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;public static void aMethod() throws Exception&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;try /* Line 5 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Exception(); /* Line 7 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;finally /* Line 9 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"finally \"); /* Line 11 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;public static void main(String args[])&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aMethod();&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;catch (Exception e) /* Line 20 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"exception \");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"finished\"); /* Line 24 */</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p></p>\n', '2021-02-23 19:36:32', '2021-02-23 19:36:32'),
('71b0ecfc-c30b-441f-a9ce-813b5cc64f01', '9a2a718e-7e68-4837-aa55-68febbc0136e', '<p>class X2&nbsp;<p>{</p><p>&nbsp;&nbsp;public X2 x;</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;X2 x2 = new X2();&nbsp;/* Line 6 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;X2 x3 = new X2();&nbsp;/* Line 7 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;x2.x = x3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;x3.x = x2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;x2 = new X2();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;x3 = x2; /* Line 11 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;doComplexStuff();</p><p>&nbsp;&nbsp;}</p><p>}</p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">after line 11 runs, how many objects are eligible for garbage collection?</span></p></p>\n', '2021-02-24 19:44:57', '2021-02-24 19:44:57'),
('71cf4a33-0a65-44f0-b029-6c50b38dd9c5', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">The 4&times;4 byte matrices in the AES algorithm are called</span></p>\n', '2021-02-22 13:00:02', '2021-02-22 13:00:02'),
('7218096a-30cf-47fa-bdb6-4d3197c445b9', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p>What will be the output of the program?<p><br></p><p>#include&lt;stdio.h&gt;</p><p>#define MAN(x, y) ((x)&gt;(y)) ? (x):(y);</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int i=10, j=5, k=0;</p><p>&nbsp;&nbsp;k = MAN(++i, j++);</p><p>&nbsp;&nbsp;printf(\"%d, %d, %dn\", i, j, k);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:27:22', '2021-02-23 14:27:22'),
('725a330a-d38d-47e2-bc2c-f7a7465fa114', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '<p>What data access technology is not supported by the Spring framework?</p>\n', '2021-02-20 19:17:43', '2021-02-20 19:17:43'),
('729b473d-5d24-4a02-abf2-e46e675289b6', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '<p>class Foo&nbsp;<p>{</p><p>&nbsp;&nbsp;class Bar{ }</p><p>}</p><p>class Test&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main (String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Foo f = new Foo();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/* Line 10: Missing statement ? */</p><p>&nbsp;&nbsp;}</p><p>}</p><p><br></p><p>which statement, inserted at line 10, creates an instance of Bar?</p></p>\n', '2021-02-25 03:07:19', '2021-02-25 03:07:19'),
('7481f7dc-1ab2-4fd4-9820-aa937343e56b', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">How can we make a class abstract?</span></p>\n', '2021-02-23 15:11:40', '2021-02-23 15:11:40'),
('74ef9396-e72e-43dc-8039-a466f427ee2a', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following also known as an instance of a class?</span></p>\n', '2021-02-23 15:07:37', '2021-02-23 15:07:37'),
('755f4ada-0a94-4e78-a843-b24ba53f51c4', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">In symmetric-key cryptography, the key locks and unlocks the box is</span></p>\n', '2021-02-20 20:07:51', '2021-02-20 20:07:51'),
('75e2ff6b-2c73-41f7-a043-3a15115802e4', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statements is correct?</span></p>\n', '2021-02-23 15:05:39', '2021-02-23 15:05:39'),
('760594b4-9cbe-429a-94d2-5c8ce028b9b8', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class SSBool&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;boolean b1 = true;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;boolean b2 = false;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;boolean b3 = true;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if ( b1 &amp; b2 | b2 &amp; b3 | b2 ) /* Line 8 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"ok \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if ( b1 &amp; b2 | b2 &amp; b3 | b2 | b1 ) /*Line 10*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"dokey\");</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-24 20:12:22', '2021-02-24 20:12:22'),
('765ce8ef-18e7-465e-86cd-226efbb1b1ee', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '<p>Which three are valid declarations of a char?<p><br></p><p>char c1 = 064770;</p><p>char c2 = \'face\';</p><p>char c3 = 0xbeef;</p><p>char c4 = u0022;</p><p>char c5 = \'iface\';</p><p>char c6 = \'uface\';</p></p>\n', '2021-02-24 19:51:58', '2021-02-24 19:51:58'),
('76d0fc55-6800-4fb7-a851-6af402f10d85', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include</p><p class=\"ql-align-justify\">typedef void v;</p><p class=\"ql-align-justify\">typedef int i;</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;v fun(i, i);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;fun(2, 3);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p><p class=\"ql-align-justify\">v fun(i a, i b)</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;i s=2;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;float i;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\"%d,\", sizeof(i));</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\" %d\", a*b*s);</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 14:30:51', '2021-02-23 14:30:51'),
('77f984fe-9782-4a1c-a8ee-20591ea67f9c', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p><span style=\"color: rgb(0, 0, 0);\">The operator used to get value at address stored in a pointer variable is</span></p>\n', '2021-02-23 14:16:32', '2021-02-23 14:16:32'),
('7904cb02-22a4-4e63-ba11-7852f41343a0', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class Test&nbsp;</p><p>{</p><p>&nbsp;&nbsp;static int s;</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Test p = new Test();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;p.start();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s);</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;void start()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x = 7;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;twice(x);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(x + \" \");</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;void twice(int x)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;x = x*2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;s = x;</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-24 20:11:46', '2021-02-24 20:11:46'),
('790ed3fe-84db-406f-8398-f7bd0a9363e0', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p>F<span style=\"color: rgb(0, 0, 0);\">or RSA to work, the value of P must be less than the value of</span></p>\n', '2021-02-20 19:59:25', '2021-02-20 19:59:25'),
('7966aecd-baa5-4807-b467-60e29664d74f', '9a2a718e-7e68-4837-aa55-68febbc0136e', '<p>public class X&nbsp;<p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;X x = new X();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;X x2 = m1(x); /* Line 6 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;X x4 = new X();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;x2 = x4; /* Line 8 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;doComplexStuff();</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;static X m1(X mx)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;mx = new X();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return mx;</p><p>&nbsp;&nbsp;}</p><p>}</p><p><br></p><p>After line 8 runs. how many objects are eligible for garbage collection?</p></p>\n', '2021-02-24 19:46:09', '2021-02-24 19:46:09'),
('79b212f4-c0d0-4d74-b06f-eaecdd1ca27a', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The cipher feedback (CFB) mode was created for those situations in which we need to send or receive r bits of</span></p>\n', '2021-02-20 20:17:48', '2021-02-20 20:17:48'),
('7a31c9b3-872b-419b-a706-fe04ca0b7a85', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class Test&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x= 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int y= 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;for (int z = 0; z &lt; 5; z++)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (( ++x &gt; 2 ) || (++y &gt; 2))&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;System.out.println(x + \" \" + y);</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 00:08:58', '2021-02-25 00:08:58'),
('7c58fc55-56bd-40f2-b71e-9a7ebe5ac56e', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following concepts means determining at runtime what method to invoke?</span></p>\n', '2021-02-23 14:45:39', '2021-02-23 14:45:39'),
('7c8397ee-c948-4bc1-894c-f5a309d72197', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is incorrect?</span><span class=\"ql-cursor\">&#65279;</span></p>\n', '2021-02-23 15:16:34', '2021-02-23 15:16:34'),
('7d751a6e-5233-4ba8-9e1a-a8333509d844', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The cipher which uses the exclusive-or operation as defined in computer science is called</span></p>\n', '2021-02-20 20:20:26', '2021-02-20 20:20:26'),
('7e30eb56-b62a-412a-9f9b-a7354b2167ca', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '<p>What will be the output of the program?<p><br></p><p>public class Test&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;public static void main(String[] args)&nbsp;</p><p>&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x = 0;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert (x &gt; 0) ? \"assertion failed\" : \"assertion passed\" ;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"finished\");&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p></p>\n', '2021-02-25 03:02:18', '2021-02-25 03:02:18'),
('7e4ce2c3-017f-433b-920f-65412d4d6b62', '5118424b-7611-415a-ae13-a1659bb974c0', '<p>What will be the output of the program?<p><br></p><p>public class RTExcept&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void throwit ()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"throwit \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;throw new RuntimeException();</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"hello \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throwit();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;catch (Exception re )&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"caught \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"finally \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"after \");</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-23 19:37:25', '2021-02-23 19:37:25'),
('7e826e02-3c47-421e-b261-c86b37f0d65a', '9a2a718e-7e68-4837-aa55-68febbc0136e', '<p>class Bar { }&nbsp;<p>class Test&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;Bar doBar()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Bar b = new Bar(); /* Line 6 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return b; /* Line 7 */</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;public static void main (String args[])&nbsp;</p><p>&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Test t = new Test();&nbsp;/* Line 11 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Bar newBar = t.doBar();&nbsp;/* Line 12 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"newBar\");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;newBar = new Bar(); /* Line 14 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"finishing\"); /* Line 15 */</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p><p><br></p><p>At what point is the Bar object, created on line 6, eligible for garbage collection?</p></p>\n', '2021-02-24 19:47:38', '2021-02-24 19:47:38'),
('7ea903f4-db9a-402e-8f35-b14e1beb5468', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '<p>public class Test2&nbsp;<p>{</p><p>&nbsp;&nbsp;public static int x;</p><p>&nbsp;&nbsp;public static int foo(int y)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return y * 2;</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int z = 5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert z &gt; 0; /* Line 11 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert z &gt; 2: foo(z); /* Line 12 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if ( z &lt; 7 )</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assert z &gt; 4; /* Line 14 */</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;switch (z)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 4: System.out.println(\"4 \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 5: System.out.println(\"5 \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default: assert z &lt; 10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;if ( z &lt; 10 )</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assert z &gt; 4: z++; /* Line 22 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(z);</p><p>&nbsp;&nbsp;}</p><p>}</p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">which line is an example of an inappropriate use of assertions?</span></p></p>\n', '2021-02-25 02:55:55', '2021-02-25 02:55:55'),
('7ed8d220-751e-4618-8245-95e7ad8ca941', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The relationship between a character in the plaintext to a character is</span></p>\n', '2021-02-20 20:15:26', '2021-02-20 20:15:26'),
('7f2b1a60-53c9-4d8f-85e0-5f6e16b2e3cf', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p class=\"ql-align-justify\">What do the following declaration signify?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int *f();</p></p>\n', '2021-02-23 14:35:12', '2021-02-23 14:35:12'),
('7fc1dedb-287b-46ef-9fe0-e5019870c208', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '<p><span style=\"color: rgb(0, 0, 0);\">Which statement is true?</span></p>\n', '2021-02-25 02:58:21', '2021-02-25 02:58:21'),
('7fd064b7-792b-435b-ac13-dcfd81888a5a', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">Mobile Device security falls under 3 categories. Which of these is not a valid Mobile Device security category?</span></p>\n', '2021-02-21 19:28:03', '2021-02-21 19:28:03'),
('80116422-6102-41fe-a39d-72ea96de9433', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p class=\"ql-align-justify\">Declare the following statement?<p class=\"ql-align-justify\">\"A pointer to a function which receives an int pointer and returns float pointer\".</p></p>\n', '2021-02-23 14:35:54', '2021-02-23 14:35:54'),
('80be3ee9-500d-4ae2-9c82-c560e2be3d57', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The keys used in cryptography are</span></p>\n', '2021-02-20 20:08:27', '2021-02-20 20:08:27'),
('828e9cfd-e9c2-4fd6-9812-8fa676dfd2aa', '76724e02-ddca-4592-80f3-b06b389013b9', '<p><span style=\"color: rgb(58, 58, 58);\">The main difference in MACs and digital signatures is that, in digital signatures the hash value of the message is encrypted with a user&rsquo;s public key.</span></p>\n', '2021-02-22 12:48:48', '2021-02-22 12:48:48'),
('8290b212-9c4b-4e5b-a0aa-9bec42f61bc9', '2ac55e0a-9465-497e-a756-0cee16244c10', '<p>What will be the output of the program?<p><br></p><p>public class Switch2&nbsp;</p><p>{</p><p>&nbsp;&nbsp;final static short x = 2;</p><p>&nbsp;&nbsp;public static int y = 0;</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;for (int z=0; z &lt; 3; z++)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (z)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case x: System.out.print(\"0 \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case x-1: System.out.print(\"1 \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case x-2: System.out.print(\"2 \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 03:15:00', '2021-02-25 03:15:00'),
('82ec7648-df7f-464e-b07a-976a6624d775', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">&ldquo;When fraud access points are created to access information such as passwords.&rdquo; Which type of Wireless network threat would you classify this under?</span></p>\n', '2021-02-21 19:22:33', '2021-02-21 19:22:33'),
('8368390f-56ab-40ab-98c9-92f37e7b6925', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p><span style=\"color: rgb(0, 0, 0);\">You need to store elements in a collection that guarantees that no duplicates are stored and all elements can be accessed in natural order. Which interface provides that capability?</span></p>\n', '2021-02-25 02:50:27', '2021-02-25 02:50:27'),
('83a40812-b708-43fd-9f03-7c466ae09d0f', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p><span style=\"color: rgb(0, 0, 0);\">What is the numerical range of char?</span></p>\n', '2021-02-25 02:45:44', '2021-02-25 02:45:44'),
('84b518db-44d8-4c10-8585-790550ef409a', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following type of data member can be shared by all instances of its class?</span></p>\n', '2021-02-23 15:08:11', '2021-02-23 15:08:11'),
('84d8768c-cb94-498c-93fd-c1f89af08c90', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '<p>What will be the output of the program?<p><br></p><p>public class Foo&nbsp;</p><p>{</p><p>&nbsp;&nbsp;Foo()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"foo\");</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;</p><p>class Bar</p><p>{</p><p>&nbsp;&nbsp;Bar()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"bar\");</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;public void go()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"hi\");</p><p>&nbsp;&nbsp;}</p><p>} /* class Bar ends */</p><p><br></p><p>&nbsp;&nbsp;public static void main (String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Foo f = new Foo();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;f.makeBar();</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;void makeBar()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;(new Bar() {}).go();</p><p>&nbsp;&nbsp;}</p><p>}/* class Foo ends */</p></p>\n', '2021-02-25 03:03:54', '2021-02-25 03:03:54'),
('85d09d6c-782c-4c72-bb1a-53f1cbce37e5', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p class=\"ql-align-justify\">Which of the following statements regarding inline functions is correct?</p>\n', '2021-02-23 14:51:25', '2021-02-23 14:51:25'),
('865bd10a-abf4-46f7-b1fb-6daa2e9e9549', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p>Which three guarantee that a thread will leave the running state?<p><br></p><p>yield()</p><p>wait()</p><p>notify()</p><p>notifyAll()</p><p>sleep(1000)</p><p>aLiveThread.join()</p><p>Thread.killThread()</p></p>\n', '2021-02-24 20:03:10', '2021-02-24 20:03:10'),
('87606ac0-8a6a-4f4e-93f5-9cbfe271f447', '659ba20a-23ef-46e3-937b-fe2413577197', '<p><span style=\"color: rgb(58, 58, 58);\">An encryption scheme is unconditionally secure if the ciphertext generated does not contain enough information to determine uniquely the corresponding plaintext, no matter how much cipher text is available.</span></p>\n', '2021-02-21 10:16:40', '2021-02-21 10:16:40'),
('87961a90-d2d8-4c3e-91bc-b5866c2e4566', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '<p>What will be the output of the program?<p><br></p><p>public class TestObj&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main (String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Object o = new Object() /* Line 5 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public boolean equals(Object obj)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;/* Line 11 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(o.equals(\"Fred\"));</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 03:05:35', '2021-02-25 03:05:35'),
('88449f01-af37-4535-b9a3-352abc40aac1', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statements is correct about the constructors and destructors?</span></p>\n', '2021-02-23 15:10:25', '2021-02-23 15:10:25'),
('88c5ad2c-39da-4fd4-a87a-cce01395a388', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p class=\"ql-align-justify\">Constructor is executed when _____.</p>\n', '2021-02-23 15:06:50', '2021-02-23 15:06:50'),
('890a50c2-fb7c-4ed7-94a8-9022f4c9f551', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">For automatic objects, constructors and destructors are called each time the objects</span></p>\n', '2021-02-23 15:31:32', '2021-02-23 15:31:32'),
('899ce371-3a99-4773-a84d-641a3f2702e9', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">A constructor that accepts __________ parameters is called the default constructor.</span></p>\n', '2021-02-23 15:33:47', '2021-02-23 15:33:47'),
('89e92cdb-fe98-4c4c-98fc-f284b493c19c', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statements is true?</span></p>\n', '2021-02-25 02:54:51', '2021-02-25 02:54:51'),
('8ad8976b-ab4b-4c8d-8df5-9561c01f9f63', '9a2a718e-7e68-4837-aa55-68febbc0136e', '<p>class Test&nbsp;<p>{&nbsp;</p><p>&nbsp;&nbsp;private Demo d;&nbsp;</p><p>&nbsp;&nbsp;void start()&nbsp;</p><p>&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;d = new Demo();&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;this.takeDemo(d); /* Line 7 */</p><p>&nbsp;&nbsp;} /* Line 8 */</p><p>&nbsp;&nbsp;void takeDemo(Demo demo)&nbsp;</p><p>&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;demo = null;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;demo = new Demo();&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p><p><br></p><p>When is the Demo object eligible for garbage collection?</p></p>\n', '2021-02-24 19:46:54', '2021-02-24 19:46:54'),
('8baf05e4-839d-4000-8bec-0b060ee79010', '5118424b-7611-415a-ae13-a1659bb974c0', '<p>What will be the output of the program?<p><br></p><p>public class X&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;badMethod();&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"A\");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;catch (RuntimeException ex) /* Line 10 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"B\");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;catch (Exception ex1)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"C\");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"D\");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"E\");&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;public static void badMethod()&nbsp;</p><p>&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;throw new RuntimeException();&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p></p>\n', '2021-02-23 19:38:02', '2021-02-23 19:38:02'),
('8c4c9829-2484-4452-aaa5-ff89691ffaf9', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following approach is adapted by C++?</span></p>\n', '2021-02-23 14:45:03', '2021-02-23 14:45:03'),
('8cd6987c-0df3-4e09-a506-d616c1c3bc18', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">Wi-Fi stands for-</span></p>\n', '2021-02-21 19:20:02', '2021-02-21 19:20:02'),
('8e47c529-dc2c-431d-85dd-e681f150c82d', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p class=\"ql-align-justify\">Which of the following can be overloaded?</p>\n', '2021-02-23 15:04:57', '2021-02-23 15:04:57'),
('8eca3eb8-e9b9-4f76-9e72-c861cba69ac6', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p>What do the following declaration signify?<p><br></p><p>char **argv;</p></p>\n', '2021-02-23 14:33:45', '2021-02-23 14:33:45'),
('8fddb5aa-a4b9-42c8-94a8-d9b2efe30f91', '659ba20a-23ef-46e3-937b-fe2413577197', '<p>Divide (HAPPY)26 by (SAD)26. We get quotient &ndash;</p>\n', '2021-02-21 10:12:18', '2021-02-21 10:12:18'),
('904e4e87-425e-4368-b975-19f60d58592c', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following cannot be declared as virtual?</span></p>\n', '2021-02-23 15:26:17', '2021-02-23 15:26:17'),
('90c6a5e4-2b54-444f-a053-c64f4104454f', '659ba20a-23ef-46e3-937b-fe2413577197', '<p><span style=\"color: rgb(58, 58, 58);\">In base 26, multiplication of YES by NO gives &ndash;</span></p>\n', '2021-02-21 10:15:37', '2021-02-21 10:15:37'),
('910e0026-671e-4ea7-bedd-57997b5e5f91', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">In symmetric key cryptography, the key used by the sender and the receiver is</span></p>\n', '2021-02-20 20:03:11', '2021-02-20 20:03:11'),
('913b6120-f42a-4e9d-9dab-25e820cfc1e1', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p>What happens when we try to compile the class definition in following code snippet?<p><br></p><p>class Birds {};</p><p>class Peacock : protected Birds {};</p></p>\n', '2021-02-23 15:14:26', '2021-02-23 15:14:26'),
('91713327-0672-4bfd-b5b6-4f4b35ff9d68', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class Equals&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x = 100;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;double y = 100.1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;boolean b = (x = y); /* Line 7 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(b);</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 02:38:50', '2021-02-25 02:38:50'),
('91cda3d0-d61f-4214-b36d-9243f506ebae', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p class=\"ql-align-justify\">Which of the following is correct about the statements given below?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">All operators can be overloaded in C++.</p><p class=\"ql-align-justify\">We can change the basic meaning of an operator in C++.</p></p>\n', '2021-02-23 14:48:46', '2021-02-23 14:48:46'),
('92dc67ba-8162-4a2f-b44b-6edb7fe8cde5', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p>T<span style=\"color: rgb(0, 0, 0);\">he shift ciphers sometimes referred to as the</span></p>\n', '2021-02-20 20:22:01', '2021-02-20 20:22:01'),
('93948488-fc2b-4e4f-b8cb-ae2ec8850ab6', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '<p>Which four options describe the correct default values for array elements of the types indicated?<p><br></p><p>int -&gt; 0</p><p>String -&gt; \"null\"</p><p>Dog -&gt; null</p><p>char -&gt; \'u0000\'</p><p>float -&gt; 0.0f</p><p>boolean -&gt; true</p></p>\n', '2021-02-24 19:56:26', '2021-02-24 19:56:26'),
('946b9fc9-deab-427c-a5e0-32076d95438e', '2ac55e0a-9465-497e-a756-0cee16244c10', '<p>public void foo( boolean a, boolean b)<p>{&nbsp;</p><p>&nbsp;&nbsp;if( a )&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"A\"); /* Line 5 */</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;else if(a &amp;&amp; b) /* Line 7 */</p><p>&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println( \"A &amp;&amp; B\");&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;else /* Line 11 */</p><p>&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if ( !b )&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println( \"notB\") ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println( \"ELSE\" ) ;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p></p>\n', '2021-02-25 03:19:56', '2021-02-25 03:19:56'),
('951b91b8-2348-47b1-b60b-86060eb3b425', '137cb6ee-d459-4a0d-956d-94b26c97a592', '<p>What is a pointcut?</p>\n', '2021-02-20 18:29:25', '2021-02-20 18:29:25'),
('95eb037d-9935-4054-9dd5-148513dc49d6', '76724e02-ddca-4592-80f3-b06b389013b9', '<p><span style=\"color: rgb(58, 58, 58);\">A larger hash code cannot be decomposed into independent subcodes.</span></p>\n', '2021-02-22 12:51:30', '2021-02-22 12:51:30'),
('96e0f0b7-9758-4a0c-aff2-e126b0a812e2', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">In Asymmetric-Key Cryptography, the two keys, e and d, have a special relationship to</span></p>\n', '2021-02-20 19:50:25', '2021-02-20 19:50:25'),
('97015c85-5098-4743-831a-b4bcc1950f6d', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '<p>What will be the output of the program?<p><br></p><p>#include</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;const c = -11;</p><p>&nbsp;&nbsp;const int d = 34;</p><p>&nbsp;&nbsp;printf(\"%d, %dn\", c, d);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:43:19', '2021-02-23 13:43:19'),
('97f90d30-7e06-44d5-9f59-fd0ab34c777b', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p class=\"ql-align-justify\">Which one of the following is correct about the statements given below?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">All function calls are resolved at compile-time in Procedure Oriented Programming.</p><p class=\"ql-align-justify\">All function calls are resolved at compile-time in OOPS.</p></p>\n', '2021-02-23 14:54:27', '2021-02-23 14:54:27'),
('97fabea5-cfcf-415e-992f-938cdcadd08f', '137cb6ee-d459-4a0d-956d-94b26c97a592', '<p>What is an after returning advice?</p>\n', '2021-02-20 17:47:50', '2021-02-20 17:47:50'),
('988f7ab3-51ac-4010-a498-f5f613f105a6', '5118424b-7611-415a-ae13-a1659bb974c0', '<p>What will be the output of the program?<p><br></p><p>try&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;int x = 0;&nbsp;</p><p>&nbsp;&nbsp;int y = 5 / x;&nbsp;</p><p>}&nbsp;</p><p>catch (Exception e)&nbsp;</p><p>{</p><p>&nbsp;&nbsp;System.out.println(\"Exception\");&nbsp;</p><p>}&nbsp;</p><p>catch (ArithmeticException ae)&nbsp;</p><p>{</p><p>&nbsp;&nbsp;System.out.println(\" Arithmetic Exception\");&nbsp;</p><p>}&nbsp;</p><p>System.out.println(\"finished\");</p></p>\n', '2021-02-23 19:39:40', '2021-02-23 19:39:40'),
('9902fcb3-21d2-4cdc-b7e5-2f107d63fb57', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p><span style=\"color: rgb(0, 0, 0);\">What is the name of the method used to start a thread execution?</span></p>\n', '2021-02-24 20:07:03', '2021-02-24 20:07:03'),
('9931f538-e6c2-4951-93bf-5d1d64d26d2a', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">&ldquo;When an attacker is able to eavesdrop on network traffic and identify the MAC address of a computer with network previleges.&rdquo; Which type of Wireless network threat would you classify this under?</span></p>\n', '2021-02-21 19:25:21', '2021-02-21 19:25:21'),
('99c1fc9a-32d6-4eca-a788-6b4dd8e805fd', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p>What will be the output of the program ?<p><br></p><p>#include</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;float arr[] = {12.4, 2.3, 4.5, 6.7};</p><p>&nbsp;&nbsp;printf(\"%dn\", sizeof(arr)/sizeof(arr[0]));</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:35:46', '2021-02-23 13:35:46'),
('99d5a8bf-4fe9-4289-81ae-3ee84b62b381', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p>What will be the output of the program?<p><br></p><p>#include&lt;stdio.h&gt;</p><p>#define MESS junk</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;printf(\"MESSn\");</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:24:14', '2021-02-23 14:24:14'),
('9d7139a0-90e1-4ac9-a5fe-307aeb603c9e', '76724e02-ddca-4592-80f3-b06b389013b9', '<p><span style=\"color: rgb(58, 58, 58);\">What is a one-way password file?</span></p>\n', '2021-02-22 12:50:03', '2021-02-22 12:50:03'),
('9da40fa1-e8ea-4dee-b61c-9ffbda01d1d2', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">How many rounds does the AES-256 perform?</span></p>\n', '2021-02-22 12:58:58', '2021-02-22 12:58:58'),
('9e5d778a-b338-46fa-88f7-8e4a63601293', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following is not a type of constructor?</span></p>\n', '2021-02-23 14:46:53', '2021-02-23 14:46:53'),
('9e8583dc-1815-4287-abda-e8679e4292e6', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The man-in-the-middle attack can endanger the security of the Diffie-Hellman method if two parties are not</span></p>\n', '2021-02-20 19:49:15', '2021-02-20 19:49:15'),
('9e94b142-28cd-4a67-8df9-03d809595ae5', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following are available only in the class hierarchy chain?</span></p>\n', '2021-02-23 14:48:02', '2021-02-23 14:48:02'),
('9fc7ae8e-2313-428f-b979-3fa9ad032420', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">&ldquo;Installation of third party applications are prohibited on many company hardware devices such as laptops, mobiles, etc.&rdquo; Which Mobile Device security category of implementation does this fall under?</span></p>\n', '2021-02-21 19:28:49', '2021-02-21 19:28:49'),
('9fecd0f8-9776-47c2-afd7-10afa3fd4746', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class BoolArray&nbsp;</p><p>{</p><p>&nbsp;&nbsp;boolean [] b = new boolean[3];</p><p>&nbsp;&nbsp;int count = 0;</p><p><br></p><p>&nbsp;&nbsp;void set(boolean [] x, int i)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;x[i] = true;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;++count;</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;BoolArray ba = new BoolArray();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ba.set(ba.b, 0);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ba.set(ba.b, 2);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ba.test();</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;void test()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if ( b[0] &amp;&amp; b[1] | b[2] )</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if ( b[1] &amp;&amp; b[(++count - 2)] )</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count += 7;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"count = \" + count);</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-24 20:10:29', '2021-02-24 20:10:29'),
('a1856142-7415-43da-af24-1f8d5f73883f', '4a2db9d2-f00d-4c54-89ac-5b133200511b', '<p>dfsf</p>\n', '2021-02-22 18:19:00', '2021-02-22 18:19:00'),
('a26e01d1-ab74-4990-966a-1bba5af5de4b', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p><span style=\"color: rgb(0, 0, 0);\">A reference is declared using the _____ symbol.</span></p>\n', '2021-02-23 15:42:01', '2021-02-23 15:42:01'),
('a399587a-9d5b-4c67-b8db-196b7d8b9b45', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include&lt;stdio.h&gt;</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;int y=128;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;const int x=y;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\"%dn\", x);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 13:54:37', '2021-02-23 13:54:37'),
('a3b48928-1619-44d0-b893-5e7c8b0f9d47', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p>T<span style=\"color: rgb(0, 0, 0);\">he International Data Encryption Algorithm (IDEA) was developed by</span></p>\n', '2021-02-20 20:00:14', '2021-02-20 20:00:14'),
('a4b27f43-e63e-4083-89a6-bad1ae316ba7', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following header file includes definition of cin and cout?</span></p>\n', '2021-02-23 14:50:07', '2021-02-23 14:50:07'),
('a50d87fd-3c37-45dc-9b7e-730e4c19f426', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p>What do the following declaration signify?<p><br></p><p>char *arr[10];</p></p>\n', '2021-02-23 14:37:14', '2021-02-23 14:37:14'),
('a59bba93-b0b5-4c07-800c-5aa4380a5c10', '316d30e3-6061-4be0-af33-f4ee4aef3bfb', '<p><span style=\"color: rgb(58, 58, 58);\">SHA-1 produces a hash value of</span></p>\n', '2021-02-22 19:25:06', '2021-02-22 19:25:06'),
('a618a981-ddae-47e4-aa93-f9c1ba3b5fe3', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p>In<span style=\"color: rgb(0, 0, 0);\">&nbsp;Cryptography, the input bits are rotated to right or left in</span></p>\n', '2021-02-20 19:57:33', '2021-02-20 19:57:33'),
('a74fbf22-9c52-4858-8112-51e5e5a0b0f8', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include&lt;stdio.h&gt;</p><p class=\"ql-align-justify\">int get();</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;const int x = get();</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\"%d\", x);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p><p class=\"ql-align-justify\">int get()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 20;</p><p class=\"ql-align-justify\">}</p><p class=\"ql-align-justify\"><br></p><p><br></p></p>\n', '2021-02-23 13:50:31', '2021-02-23 13:50:31'),
('a75eb5ab-b1fd-4b9c-8559-eee5667cd4d5', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class PassS&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;PassS p = new PassS();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;p.start();</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;void start()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;String s1 = \"slip\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;String s2 = fix(s1);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s1 + \" \" + s2);</p><p>&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;String fix(String s1)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;s1 = s1 + \"stream\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(s1 + \" \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return \"stream\";</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 02:40:29', '2021-02-25 02:40:29'),
('a8334b78-4e12-4f74-9a7e-68f78a6c4e89', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following keyword is used to overload an operator?</span></p>\n', '2021-02-23 14:56:39', '2021-02-23 14:56:39'),
('a83c9ada-5b44-4255-8864-97972f262216', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '<p>public class MyOuter&nbsp;<p>{</p><p>&nbsp;&nbsp;public static class MyInner&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;public static void foo() { }</p><p>&nbsp;&nbsp;}</p><p>}</p><p><br></p><p>which statement, if placed in a class other than MyOuter or MyInner, instantiates an instance of the nested class?</p></p>\n', '2021-02-25 03:06:25', '2021-02-25 03:06:25'),
('a933686f-3aed-46fc-96d8-3bde8801091c', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Where the default value of parameter have to be specified?</span></p>\n', '2021-02-23 15:18:27', '2021-02-23 15:18:27'),
('a975a79e-80b3-4b11-87f3-84dd0d36d389', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include&lt;stdio.h&gt;</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;char huge *near *far *ptr1;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;char near *far *huge *ptr2;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;char far *huge *near *ptr3;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\"%d, %d, %dn\", sizeof(**ptr1), sizeof(ptr2), sizeof(*ptr3));</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 14:31:24', '2021-02-23 14:31:24'),
('aabd6946-5fe4-4387-8128-349497038ad4', '5118424b-7611-415a-ae13-a1659bb974c0', '<p>What will be the output of the program?<p><br></p><p>public class MyProgram&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String args[])</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"Hello world \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"Finally executing \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-23 18:24:54', '2021-02-23 18:24:54'),
('aaff4ef9-4464-418f-8dc4-c74b471adb71', '137cb6ee-d459-4a0d-956d-94b26c97a592', '<p>Considering 2 classes AccountServiceImpl and ClientServiceImpl.<p>Any of these two classes inherits from each other.</p><p>What is the result of the pointcut expressions?</p><p>execution(* *..AccountServiceImpl.update(..))</p><p>&amp;&amp; execution(* *..ClientServiceImpl.update(..))</p></p>\n', '2021-02-20 18:23:32', '2021-02-20 18:23:32'),
('ac6579d6-88ab-428a-86e2-9c8718cf93ff', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p>Which of the following are Java reserved words?<p><br></p><p>run</p><p>import</p><p>default</p><p>implement</p></p>\n', '2021-02-25 02:45:00', '2021-02-25 02:45:00'),
('ac944f01-eb77-42d2-a9a2-2db2f2fb0cf0', '137cb6ee-d459-4a0d-956d-94b26c97a592', '<p>Using the Spring AOP framework, what are the joinpoint methods of the following pointcut expressions?<p>execution(public * *(..))</p></p>\n', '2021-02-20 18:27:23', '2021-02-20 18:27:23'),
('ae069b2b-a594-4d86-8d8d-3ad8da065342', '677ec257-eaf6-438f-9897-4efc22c379a5', '<p><span style=\"color: rgb(58, 58, 58);\">Monoalphabetic ciphers are stronger than Polyalphabetic ciphers because frequency analysis is tougher on the former.</span></p>\n', '2021-02-21 18:20:55', '2021-02-21 18:20:55'),
('af6c3012-5eb0-4e91-86b0-993dd42b9fbe', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:17:51', '2021-02-23 15:17:51'),
('afd657e2-d410-4a9a-8a15-3bc291dbecea', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '<p>What will be the output of the program?<p><br></p><p>#include&lt;stdio.h&gt;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;const int i=0;</p><p>&nbsp;&nbsp;printf(\"%dn\", i++);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:49:04', '2021-02-23 13:49:04'),
('b036a1b5-69ab-441e-80eb-e46e23047797', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">Which algorithm among- MARS, Blowfish, RC6, Rijndael and Serpent -was chosen as the AES algorithm?</span></p>\n', '2021-02-22 12:58:06', '2021-02-22 12:58:06'),
('b04a8071-8156-48c7-9717-d5a85c8248d8', '2ac55e0a-9465-497e-a756-0cee16244c10', '<p>public void test(int x)&nbsp;<p>{&nbsp;</p><p>&nbsp;&nbsp;int odd = 1;&nbsp;</p><p>&nbsp;&nbsp;if(odd) /* Line 4 */</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"odd\");&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;else&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"even\");&nbsp;</p><p>&nbsp;&nbsp;}</p><p>}</p><p><br></p><p>Which statement is true?</p></p>\n', '2021-02-25 03:18:09', '2021-02-25 03:18:09'),
('b0e3c6dc-8d5f-4031-9a20-ba5e2a06e1eb', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The original message, before being transformed, is</span></p>\n', '2021-02-20 20:00:59', '2021-02-20 20:00:59'),
('b0ef3a25-c9f0-4e31-9bd9-7de6ee2710e1', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">&ldquo;A user intending to connect to one LAN may unintentionally lock onto a wireless access point from the neighboring network.&rdquo; Which type of Wireless network threat would you classify this under?</span></p>\n', '2021-02-21 19:21:20', '2021-02-21 19:21:20'),
('b1e3404b-9cc7-4035-a403-0a107c55ca8b', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '<p class=\"ql-align-justify\">What will be the output of the program (in Turbo C)?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include&lt;stdio.h&gt;</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int fun(int *f)</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;*f = 10;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;const int arr[5] = {1, 2, 3, 4, 5};</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\"Before modification arr[3] = %d\", arr[3]);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;fun(&amp;arr[3]);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\"nAfter modification arr[3] = %d\", arr[3]);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p><p><br></p></p>\n', '2021-02-23 13:49:53', '2021-02-23 13:49:53'),
('b2643b84-3154-4279-8cbb-d9586a770e85', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p class=\"ql-align-justify\">Which of the following function / type of function cannot be overloaded?</p>\n', '2021-02-23 15:19:43', '2021-02-23 15:19:43'),
('b2b7bbcf-b532-4a21-bc96-9b52d8b4fcf9', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include&lt;stdio.h&gt;</p><p class=\"ql-align-justify\">#define MAX(a, b) (a &gt; b ? a : b)</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;int x;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;x = MAX(3+2, 2+7);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\"%dn\", x);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 14:25:13', '2021-02-23 14:25:13'),
('b33a66e1-11df-4160-bf45-11cc581c8878', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:30:16', '2021-02-23 15:30:16'),
('b340aaab-3b82-4090-9225-bb3ea0f67227', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '<p>Which three are valid declarations of a float?<p><br></p><p>float f1 = -343;</p><p>float f2 = 3.14;</p><p>float f3 = 0x12345;</p><p>float f4 = 42e7;</p><p>float f5 = 2001.0D;</p><p>float f6 = 2.81F;</p></p>\n', '2021-02-24 19:50:35', '2021-02-24 19:50:35'),
('b36c2012-4724-4174-bc77-b896cadd4578', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '<p><span style=\"color: rgb(0, 0, 0);\">Which constructs an anonymous inner class instance?</span></p>\n', '2021-02-25 03:08:03', '2021-02-25 03:08:03'),
('b48b7250-99e1-46e5-81eb-398ad924ee3d', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following are NOT provided by the compiler by default?</span></p>\n', '2021-02-23 15:25:43', '2021-02-23 15:25:43');
INSERT INTO `quiz_questions` (`id`, `exam_id`, `question`, `created_at`, `updated_at`) VALUES
('b537da2c-37cc-4bf9-a4e1-ca3de1d67b9f', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p><span style=\"color: rgb(0, 0, 0);\">Which method must be defined by a class implementing the java.lang.Runnable interface?</span></p>\n', '2021-02-24 20:02:00', '2021-02-24 20:02:00'),
('b554c4f6-5c76-48e7-9825-2e70fb136e66', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The substitutional ciphers are</span></p>\n', '2021-02-20 19:52:02', '2021-02-20 19:52:02'),
('b6980778-069a-4231-859b-78ab69bd5281', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p><span style=\"color: rgb(0, 0, 0);\">Which class does not override the equals() and hashCode() methods, inheriting them directly from class Object?</span></p>\n', '2021-02-25 02:51:56', '2021-02-25 02:51:56'),
('b769793f-14ac-4991-b7e8-4420bb0dbca6', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p>What will be the output of the program if the array begins at 65472 and each integer occupies 2 bytes?<p>#include&lt;stdio.h&gt;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int a[3][4] = {1, 2, 3, 4, 4, 3, 2, 1, 7, 8, 9, 0};</p><p>&nbsp;&nbsp;printf(\"%u, %un\", a+1, &amp;a+1);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:37:41', '2021-02-23 13:37:41'),
('b82bde27-d228-45b8-98f3-a8e38ba6a32b', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p class=\"ql-align-justify\">What do the following declaration signify?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">char *scr;</p></p>\n', '2021-02-23 14:33:04', '2021-02-23 14:33:04'),
('ba1b0113-cee8-40f2-84d5-fa92037c5108', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p>What will be the output of the program?<p><br></p><p>#include</p><p>#define MAX(a, b, c) (a&gt;b ? a&gt;c ? a : c: b&gt;c ? b : c)</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int x;</p><p>&nbsp;&nbsp;x = MAX(3+2, 2+7, 3+7);</p><p>&nbsp;&nbsp;printf(\"%dn\", x);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:23:08', '2021-02-23 14:23:08'),
('ba3276da-6cd7-4d0d-9bae-f3e6cb4a450f', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p>A<span style=\"color: rgb(0, 0, 0);\">&nbsp;substitution cipher replaces one symbol with</span></p>\n', '2021-02-20 19:55:16', '2021-02-20 19:55:16'),
('bad490d5-e282-425d-9f15-daf2d26d1a42', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include&lt;stdio.h&gt;</p><p class=\"ql-align-justify\">#define CUBE(x) (x*x*x)</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;int a, b=3;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;a = CUBE(b++);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;printf(\"%d, %dn\", a, b);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 14:26:20', '2021-02-23 14:26:20'),
('bba3169a-eab7-4e53-ad26-53da07863940', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p><span style=\"color: rgb(0, 0, 0);\">Which interface provides the capability to store objects using a key-value pair?</span></p>\n', '2021-02-25 02:49:02', '2021-02-25 02:49:02'),
('bba85f8a-b0f8-4da6-b838-9b9a099667e8', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">Which one of the following is not a cryptographic algorithm- JUPITER, Blowfish, RC6, Rijndael and Serpent?</span></p>\n', '2021-02-22 12:57:34', '2021-02-22 12:57:34'),
('bbea72ad-5557-4a75-9b10-9deb2ab52434', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statements is correct when a class is inherited publicly?</span></p>\n', '2021-02-23 15:11:00', '2021-02-23 15:11:00'),
('bc0d0e92-5a75-4a0c-b71d-c88bc12069aa', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The heart of Data Encryption Standard (DES), is the</span></p>\n', '2021-02-20 19:52:41', '2021-02-20 19:52:41'),
('bc45e0af-cdc1-4f11-ae94-d95e0935f31d', '677ec257-eaf6-438f-9897-4efc22c379a5', '<p><span style=\"color: rgb(58, 58, 58);\">On Encrypting &ldquo;thepepsiisintherefrigerator&rdquo; using Vignere Cipher System using the keyword &ldquo;HUMOR&rdquo; we get cipher text-</span><p><br></p><p><span style=\"color: rgb(58, 58, 58);\">(Hint) Cipher text:= Ci = Pi + ki mod m (mod 26).</span></p></p>\n', '2021-02-21 18:25:54', '2021-02-21 18:25:54'),
('bc97a1ca-62d7-465d-bcbc-e50439d5aa69', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '<p><span style=\"color: rgb(0, 0, 0);\">Which will legally declare, construct, and initialize an array?</span></p>\n', '2021-02-24 19:55:05', '2021-02-24 19:55:05'),
('bcfa0f27-a65a-4bb9-9704-6f62a4a1838f', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p class=\"ql-align-justify\">Which of the following is used to make an abstract class?</p>\n', '2021-02-23 15:00:01', '2021-02-23 15:00:01'),
('bd2eebab-5454-4e6b-a84e-c5178d090099', '677ec257-eaf6-438f-9897-4efc22c379a5', '<p><span style=\"color: rgb(58, 58, 58);\">Which are the most frequently found letters in the English language ?</span></p>\n', '2021-02-21 18:21:50', '2021-02-21 18:21:50'),
('bd401b0a-b28c-4a06-91b1-fcb79903419b', '659ba20a-23ef-46e3-937b-fe2413577197', '<p class=\"ql-align-justify\">Reduce the following big-O natations:<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">O[ e<sup>n</sup>&nbsp;+ an<sup>10</sup>] =</p></p>\n', '2021-02-21 10:20:06', '2021-02-21 10:20:06'),
('bd52e1aa-5478-443e-8f9e-088cbb647f4a', '659ba20a-23ef-46e3-937b-fe2413577197', '<p><span style=\"color: rgb(58, 58, 58);\">Reduce the following big-O natations:</span><p><br></p><p><span style=\"color: rgb(58, 58, 58);\">O [ n! + n</span><sup style=\"color: rgb(58, 58, 58);\">50</sup><span style=\"color: rgb(58, 58, 58);\">&nbsp;] =</span></p></p>\n', '2021-02-21 10:21:07', '2021-02-21 10:21:07'),
('bee079ca-ab87-4350-aae5-2761bb906c64', '5118424b-7611-415a-ae13-a1659bb974c0', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">public class X&nbsp;</p><p class=\"ql-align-justify\">{&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;badMethod(); /* Line 7 */</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"A\");&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;catch (Exception ex) /* Line 10 */</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"B\"); /* Line 12 */</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;finally /* Line 14 */</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"C\"); /* Line 16 */</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"D\"); /* Line 18 */</p><p class=\"ql-align-justify\">&nbsp;&nbsp;}&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;public static void badMethod()&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;throw new RuntimeException();&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;}&nbsp;</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 19:35:14', '2021-02-23 19:35:14'),
('bf8eb032-5d85-4375-b9b9-1c0acd84b8c4', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">An asymmetric-key (or public-key) cipher uses</span></p>\n', '2021-02-20 19:47:09', '2021-02-20 19:47:09'),
('c063d3e6-028b-4123-823c-0d4b0d36449c', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '<p>Which three statements are true?<p><br></p><p>Assertion checking is typically enabled when a program is deployed.</p><p>It is never appropriate to write code to handle failure of an assert statement.</p><p>Assertion checking is typically enabled during program development and testing.</p><p>Assertion checking can be selectively enabled or disabled on a per-package basis, but not on a per-class basis.</p><p>Assertion checking can be selectively enabled or disabled on both a per-package basis and a per-class basis.</p></p>\n', '2021-02-25 02:57:33', '2021-02-25 02:57:33'),
('c1538c7e-9bae-4644-8645-35f37ecf7f23', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p>R<span style=\"color: rgb(0, 0, 0);\">SA stands for</span></p>\n', '2021-02-20 20:22:46', '2021-02-20 20:22:46'),
('c237ee18-4031-4f40-83b4-9183d41b8b30', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p><span style=\"color: rgb(0, 0, 0);\">Which will contain the body of the thread?</span></p>\n', '2021-02-24 20:01:20', '2021-02-24 20:01:20'),
('c2471e9e-8556-4f79-ab89-a5483142d378', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p>What will be the output of the program?<p><br></p><p>#include&lt;stdio.h&gt;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;char huge *near *far *ptr1;</p><p>&nbsp;&nbsp;char near *far *huge *ptr2;</p><p>&nbsp;&nbsp;char far *huge *near *ptr3;</p><p>&nbsp;&nbsp;printf(\"%d, %d, %dn\", sizeof(ptr1), sizeof(*ptr2), sizeof(**ptr3));</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:30:08', '2021-02-23 14:30:08'),
('c39b735b-3dd5-408a-ba24-5f6ce096f509', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>class Test&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x= 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int y= 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;for (int z = 0; z &lt; 5; z++)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (( ++x &gt; 2 ) &amp;&amp; (++y &gt; 2))&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(x + \" \" + y);</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 02:37:21', '2021-02-25 02:37:21'),
('c496f124-ba4d-4b52-bd5c-0e276dda577e', '5118424b-7611-415a-ae13-a1659bb974c0', '<p>What will be the output of the program?<p><br></p><p>public class X&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;badMethod();&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"A\");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;catch (Exception ex)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"B\");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"C\");&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"D\");&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;public static void badMethod() {}&nbsp;</p><p>}</p></p>\n', '2021-02-23 19:35:52', '2021-02-23 19:35:52'),
('c4bce0ab-3379-451d-a907-a75db166300a', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '<p>class Boo&nbsp;<p>{</p><p>&nbsp;&nbsp;Boo(String s) { }</p><p>&nbsp;&nbsp;Boo() { }</p><p>}</p><p>class Bar extends Boo&nbsp;</p><p>{</p><p>&nbsp;&nbsp;Bar() { }</p><p>&nbsp;&nbsp;Bar(String s) {super(s);}</p><p>&nbsp;&nbsp;void zoo()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;// insert code here</p><p>&nbsp;&nbsp;}</p><p>}</p><p><br></p><p>which one create an anonymous inner class from within class Bar?</p></p>\n', '2021-02-25 03:10:24', '2021-02-25 03:10:24'),
('c549266d-0fa5-411a-a88f-af7543d0a610', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following function prototype is perfectly acceptable?</span></p>\n', '2021-02-23 15:23:42', '2021-02-23 15:23:42'),
('c7291bb0-18e6-4c84-a804-a488cf4f600e', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The cryptography algorithms (ciphers) are divided into</span></p>\n', '2021-02-20 19:54:32', '2021-02-20 19:54:32'),
('c809565d-5e85-49ed-8c9d-03b6a002b687', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">In which of the following a virtual call is resolved at the time of compilation?</span></p>\n', '2021-02-23 14:52:15', '2021-02-23 14:52:15'),
('c85ea1ba-7bb7-4db0-8fb5-7ea92ecb6d4b', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '<p>public class Test2&nbsp;<p>{</p><p>&nbsp;&nbsp;public static int x;</p><p>&nbsp;&nbsp;public static int foo(int y)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return y * 2;</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int z = 5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert z &gt; 0; /* Line 11 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert z &gt; 2: foo(z); /* Line 12 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if ( z &lt; 7 )</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assert z &gt; 4; /* Line 14 */</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;switch (z)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 4: System.out.println(\"4 \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 5: System.out.println(\"5 \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default: assert z &lt; 10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;if ( z &lt; 10 )</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assert z &gt; 4: z++; /* Line 22 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(z);</p><p>&nbsp;&nbsp;}</p><p>}</p><p><br></p><p>which line is an example of an inappropriate use of assertions?</p></p>\n', '2021-02-25 02:59:19', '2021-02-25 02:59:19'),
('c875e858-e90d-4555-99d5-f028657f3ce3', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">We use Cryptography term to transforming messages to make them secure and immune to</span></p>\n', '2021-02-20 19:48:34', '2021-02-20 19:48:34'),
('c8d851f2-6f5f-443a-9587-a69d40f14942', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following access specifier is used as a default in a class definition?</span></p>\n', '2021-02-23 14:59:06', '2021-02-23 14:59:06'),
('ca8f5506-6a7e-4fd4-af12-aa29e6abde01', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p>Functions can be declared to return a reference type. There are reasons to make such a declaration/Which of the following reasons are correct?<p><br></p><p>The information being returned is a large enough object that returning a reference is more efficient than returning a copy.</p><p>The type of the function must be a R-value.</p></p>\n', '2021-02-23 15:43:58', '2021-02-23 15:43:58'),
('caf0ad30-c32e-46e7-aae1-0b34b2cf1810', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p>What will be the output of the program?<p><br></p><p>#include&lt;stdio.h&gt;</p><p>#define SQR(x)(x*x)</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int a, b=3;</p><p>&nbsp;&nbsp;a = SQR(b+2);</p><p>&nbsp;&nbsp;printf(\"%dn\", a);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:26:45', '2021-02-23 14:26:45'),
('cc400152-7308-476a-8652-e3a3ea09dd3a', '9291a534-8d59-4d95-b604-fdf399791cda', '<p>What will be the output of the program?<p><br></p><p>public class Test&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;public static void leftshift(int i, int j)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;i &lt;&lt;= j;&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;public static void main(String args[])&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int i = 4, j = 2;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;leftshift(i, j);&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.printIn(i);&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p></p>\n', '2021-02-24 20:11:03', '2021-02-24 20:11:03'),
('cd59c15f-bc1b-4ba5-b31a-989cd2d5d8bf', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p class=\"ql-align-justify\">Which of the following statement will be correct if the function has three arguments passed to it?</p>\n', '2021-02-23 15:21:39', '2021-02-23 15:21:39'),
('ce086ceb-f9ae-4931-9ee5-e78a57e80bf9', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '<p><span style=\"color: rgb(58, 58, 58);\">WPA stands for &ndash;</span></p>\n', '2021-02-21 19:32:01', '2021-02-21 19:32:01'),
('ce134668-dac4-42aa-84b9-ab024f83713b', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">AES uses a ____________ bit block size and a key size of __________ bits.</span></p>\n', '2021-02-22 12:56:39', '2021-02-22 12:56:39'),
('ce4ebe51-0e12-4727-a811-75c41915d087', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:17:14', '2021-02-23 15:17:14'),
('ce8ac650-a7ff-49e5-af0f-4a04d18be4e7', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following provides a reuse mechanism?</span></p>\n', '2021-02-23 15:02:39', '2021-02-23 15:02:39'),
('cf47b14d-a23a-41e1-8af4-4b820f70164d', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p>What will be the output of the program if the array begins 1200 in memory?<p><br></p><p>#include&lt;stdio.h&gt;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int arr[]={2, 3, 4, 1, 6};</p><p>&nbsp;&nbsp;printf(\"%u, %u, %un\", arr, &amp;arr[0], &amp;arr);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:35:09', '2021-02-23 13:35:09'),
('d01e5f86-cf60-4533-aa1c-a2053ca58ac8', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p>What will be the output of the program ?<p><br></p><p>#include&lt;stdio.h&gt;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int a[5] = {5, 1, 15, 20, 25};</p><p>&nbsp;&nbsp;int i, j, m;</p><p>&nbsp;&nbsp;i = ++a[1];</p><p>&nbsp;&nbsp;j = a[1]++;</p><p>&nbsp;&nbsp;m = a[i++];</p><p>&nbsp;&nbsp;printf(\"%d, %d, %d\", i, j, m);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:39:26', '2021-02-23 13:39:26'),
('d06bafc9-d627-4b2b-9c27-8c1710e74635', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">There is an addition of round key before the start of the AES round algorithms.</span></p>\n', '2021-02-22 13:06:35', '2021-02-22 13:06:35'),
('d0ce266f-5e20-4189-8d9a-86c2e135d8ae', '2ac55e0a-9465-497e-a756-0cee16244c10', '<p>switch(x)&nbsp;<p>{&nbsp;</p><p>&nbsp;&nbsp;default:&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"Hello\");&nbsp;</p><p>}</p><p><br></p><p>Which two are acceptable types for x?</p><p>byte</p><p>long</p><p>char</p><p>float</p><p>Short</p><p>Long</p></p>\n', '2021-02-25 03:18:57', '2021-02-25 03:18:57'),
('d16c1a0f-0f5c-418d-a664-4df03e59d63b', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p class=\"ql-align-justify\">public class MyRunnable implements Runnable&nbsp;<p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;public void run()&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;// some code here</p><p class=\"ql-align-justify\">&nbsp;&nbsp;}</p><p class=\"ql-align-justify\">}</p><p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">which of these will create and start this thread?</p></p>\n', '2021-02-24 19:58:00', '2021-02-24 19:58:00'),
('d28935cf-4e6b-4ed5-8139-c1b1f4d9e838', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p class=\"ql-align-justify\">Which of the following statement is correct?</p>\n', '2021-02-23 15:02:08', '2021-02-23 15:02:08'),
('d2ca9fcc-b531-4f5c-8871-4492768b419a', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p class=\"ql-align-justify\">Destructor has the same name as the constructor and it is preceded by ______ .</p>\n', '2021-02-23 15:32:10', '2021-02-23 15:32:10'),
('d32d514e-7fcc-439a-afc2-a8220c2d280e', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">When are the Global objects destroyed?</span></p>\n', '2021-02-23 15:28:51', '2021-02-23 15:28:51'),
('d45b9106-7c6a-42a0-a6e0-c104a80889d4', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p>Which of the following statements is correct?<p><br></p><p>A reference is not a constant pointer.</p><p>A referenced is automatically de-referenced.</p></p>\n', '2021-02-23 15:40:40', '2021-02-23 15:40:40'),
('d52b0536-cc2e-4f1a-891a-b9d4c64d613c', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '<p><span style=\"color: rgb(0, 0, 0);\">A union that has no constructor can be initialized with another union of __________ type.</span></p>\n', '2021-02-23 15:28:15', '2021-02-23 15:28:15'),
('d63c33e1-23f7-4a12-b516-ea4b28c8fcf4', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct about the references?</span></p>\n', '2021-02-23 15:42:42', '2021-02-23 15:42:42'),
('d67ccf4b-7a89-47e5-8f8a-6eba109a8bc8', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p><span style=\"color: rgb(0, 0, 0);\">Which collection class allows you to grow or shrink its size and provides indexed access to its elements, but whose methods are not synchronized?</span></p>\n', '2021-02-25 02:51:13', '2021-02-25 02:51:13'),
('ded1a528-d5ec-4307-84bf-303c6a5b718f', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">ECB stands for</span></p>\n', '2021-02-20 20:19:52', '2021-02-20 20:19:52'),
('dee34d3d-37c5-4e82-828f-091bedae5dd9', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following keywords is used to control access to a class member?</span></p>\n', '2021-02-23 15:08:41', '2021-02-23 15:08:41'),
('defbfe25-0773-4497-9be4-ab82e5e187a0', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:22:29', '2021-02-23 15:22:29'),
('df5344ec-28fe-46fa-904a-e703dd8de6ed', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">A straight permutation cipher or a straight P-box has the same number of inputs as</span></p>\n', '2021-02-20 19:47:58', '2021-02-20 19:47:58'),
('e00f2b76-14f5-43cd-89a3-1cdc87ccdec0', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '<p>Which three are legal array declarations?<p><br></p><p>int [] myScores [];</p><p>char [] myChars;</p><p>int [6] myScores;</p><p>Dog myDogs [];</p><p>Dog myDogs [7];</p></p>\n', '2021-02-24 19:53:16', '2021-02-24 19:53:16'),
('e0260f32-3bc1-4560-b507-3dbf955822ac', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '<p>What will be the output of the program?<p><br></p><p>public abstract class AbstractTest&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public int getNum()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return 45;</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;public abstract class Bar&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;public int getNum()&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 38;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;public static void main (String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;AbstractTest t = new AbstractTest()&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public int getNum()&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 22;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;AbstractTest.Bar f = t.new Bar()&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public int getNum()&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 57;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(f.getNum() + \" \" + t.getNum());</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 03:04:44', '2021-02-25 03:04:44'),
('e0261cd8-bdce-4ed7-a43c-6c71ac89fdca', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p>What will be the output of the program?<p><br></p><p>#include&lt;stdio.h&gt;</p><p>#define FUN(i, j) i##j</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;int va1=10;</p><p>&nbsp;&nbsp;int va12=20;</p><p>&nbsp;&nbsp;printf(\"%dn\", FUN(va1, 2));</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:25:39', '2021-02-23 14:25:39'),
('e055d7f6-680c-4dee-8ad9-48d050f36c44', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">DES stands for</span></p>\n', '2021-02-20 19:53:29', '2021-02-20 19:53:29'),
('e0b8c6ef-ff9b-4364-8b03-b7d0f7ab6353', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The ciphers of today are called round ciphers because they involve</span></p>\n', '2021-02-20 20:09:11', '2021-02-20 20:09:11'),
('e0c1b186-b48d-407f-8fb3-3dd05f6f30fa', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:23:07', '2021-02-23 15:23:07'),
('e0fa7a82-435d-48e4-a40a-c8067a2cd41a', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p>Declare the following statement?<p>\"A pointer to an array of three chars\".</p></p>\n', '2021-02-23 14:37:51', '2021-02-23 14:37:51'),
('e19804a7-200b-4652-81b5-8989fc59eca1', '9a2a718e-7e68-4837-aa55-68febbc0136e', '<p>public Object m()&nbsp;<p>{&nbsp;</p><p>&nbsp;&nbsp;Object o = new Float(3.14F);&nbsp;</p><p>&nbsp;&nbsp;Object [] oa = new Object[l];</p><p>&nbsp;&nbsp;oa[0] = o; /* Line 5 */</p><p>&nbsp;&nbsp;o = null;&nbsp;/* Line 6 */</p><p>&nbsp;&nbsp;oa[0] = null; /* Line 7 */</p><p>&nbsp;&nbsp;return o; /* Line 8 */</p><p>}</p><p><br></p><p>When is the Float object, created in line 3, eligible for garbage collection?</p></p>\n', '2021-02-24 19:45:37', '2021-02-24 19:45:37'),
('e250045e-c9f3-4f71-91c9-4f64cb31adab', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '<p>What is the incorrect statement about XML declaration of the transaction manager bean?</p>\n', '2021-02-20 19:20:44', '2021-02-20 19:20:44'),
('e4064b35-e49e-404a-9bd5-d81ae5d4c0bb', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p><span style=\"color: rgb(0, 0, 0);\">If a variable is a pointer to a structure, then which of the following operator is used to access data members of the structure through the pointer variable?</span></p>\n', '2021-02-23 14:18:30', '2021-02-23 14:18:30'),
('e519b7fd-04c0-4be8-8929-99d259fb91ca', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">How many objects can be created from an abstract class</span></p>\n', '2021-02-23 15:06:09', '2021-02-23 15:06:09'),
('e555a426-2862-43d6-9848-3dd90cc431f0', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">#include&lt;stdio.h&gt;</p><p class=\"ql-align-justify\">#define MIN(x, y) (x&lt;y)? x : y;</p><p class=\"ql-align-justify\">int main()</p><p class=\"ql-align-justify\">{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;int x=3, y=4, z;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;z = MIN(x+y/2, y-1);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;if(z &gt; 0)</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%dn\", z);</p><p class=\"ql-align-justify\">&nbsp;&nbsp;return 0;</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 14:24:40', '2021-02-23 14:24:40'),
('e59f3415-988a-4ed7-b619-dedb2b98b652', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '<p>What will be the output of the program?<p><br></p><p>#include&lt;stdio.h&gt;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;const int x=5;</p><p>&nbsp;&nbsp;const int *ptrx;</p><p>&nbsp;&nbsp;ptrx = &amp;x;</p><p>&nbsp;&nbsp;*ptrx = 10;</p><p>&nbsp;&nbsp;printf(\"%dn\", x);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 13:52:39', '2021-02-23 13:52:39'),
('e640b581-70e9-4876-bed6-979e0020c257', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p>I<span style=\"color: rgb(0, 0, 0);\">n Cryptography, the original message, before being transformed, is called</span></p>\n', '2021-02-20 19:56:42', '2021-02-20 19:56:42'),
('e641806b-38f2-47e1-b314-1151ccd08d03', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p class=\"ql-align-justify\">Which of the following means \"The use of an object of one class in definition of another class\"?</p>\n', '2021-02-23 15:04:28', '2021-02-23 15:04:28'),
('e6f2f7ba-d5b0-4d18-8812-0fccbea97932', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p>Declare the following statement?<p>\"An array of three pointers to chars\".</p></p>\n', '2021-02-23 14:39:11', '2021-02-23 14:39:11'),
('e76565e1-009f-46f6-8017-efccbd01dba5', '9a2a718e-7e68-4837-aa55-68febbc0136e', '<p>class HappyGarbage01&nbsp;<p>{&nbsp;</p><p>&nbsp;&nbsp;public static void main(String args[])&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;HappyGarbage01 h = new HappyGarbage01();&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;h.methodA(); /* Line 6 */</p><p>&nbsp;&nbsp;}&nbsp;</p><p>&nbsp;&nbsp;Object methodA()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Object obj1 = new Object();&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Object [] obj2 = new Object[1];&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;obj2[0] = obj1;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;obj1 = null;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return obj2[0];&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p><p><br></p><p>Where will be the most chance of the garbage collector being invoked?</p></p>\n', '2021-02-24 19:48:23', '2021-02-24 19:48:23'),
('e7b7df13-b0ff-4b26-979f-43943e78259d', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '<p>What is the transaction behavior of the PROPAGATION_REQUIRES_NEW_MODE?</p>\n', '2021-02-20 18:56:52', '2021-02-20 18:56:52'),
('e857bb8f-9626-4b99-baf2-a840a3a43a4f', '659ba20a-23ef-46e3-937b-fe2413577197', '<p><span style=\"color: rgb(58, 58, 58);\">The time required to convert a k-bit integer to its representation in the base 10 in terms of big-O notation is</span></p>\n', '2021-02-21 10:15:06', '2021-02-21 10:15:06'),
('e956a8bb-6e95-4bcb-b330-142b1be7c859', '2999216c-4ca4-4e01-b37d-6a24879fa329', '<p><span style=\"color: rgb(0, 0, 0);\">In which header file is the NULL macro defined?</span></p>\n', '2021-02-23 14:20:30', '2021-02-23 14:20:30'),
('e9d4c9b1-c6cd-4cb0-b22f-320409c73854', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '<p>What is the default rollback policy in transaction management</p>\n', '2021-02-20 19:04:22', '2021-02-20 19:04:22'),
('ea1e9589-a40d-4098-b2d5-92069713050f', '65e408fc-4ae6-4c52-9314-723639e82a04', '<p><span style=\"color: rgb(58, 58, 58);\">What is the expanded key size of AES-192?</span></p>\n', '2021-02-22 12:59:35', '2021-02-22 12:59:35'),
('ea3508e2-270e-4ff5-9e52-2721d9719d6b', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p><span style=\"color: rgb(0, 0, 0);\">Which method registers a thread in a thread scheduler?</span></p>\n', '2021-02-24 20:00:45', '2021-02-24 20:00:45'),
('ea4928f3-b9db-409d-9b41-652a7c29a18a', '2ac55e0a-9465-497e-a756-0cee16244c10', '<p>What will be the output of the program?<p><br></p><p>public class Test&nbsp;</p><p>{</p><p>&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int I = 1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;do while ( I &lt; 1 )</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"I is \" + I);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;while ( I &gt; 1 ) ;</p><p>&nbsp;&nbsp;}</p><p>}</p></p>\n', '2021-02-25 03:12:55', '2021-02-25 03:12:55'),
('ea7802e1-52b2-4004-857d-d946cfc1c4c6', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The shift cipher is sometimes referred to as the</span></p>\n', '2021-02-20 19:51:06', '2021-02-20 19:51:06'),
('eb70aee0-3931-4e3c-982f-c39907fd0c4d', '5118424b-7611-415a-ae13-a1659bb974c0', '<p>public class ExceptionTest&nbsp;<p>{&nbsp;</p><p>&nbsp;&nbsp;class TestException extends Exception {}&nbsp;</p><p>&nbsp;&nbsp;public void runTest() throws TestException {}&nbsp;</p><p>&nbsp;&nbsp;public void test() /* Point X */&nbsp;</p><p>&nbsp;&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;runTest();&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p><p>At Point X on line 5, which code is necessary to make the code compile?</p></p>\n', '2021-02-23 18:23:17', '2021-02-23 18:23:17'),
('ec0f190a-a108-4cec-8b41-54589f088cd1', '2ac55e0a-9465-497e-a756-0cee16244c10', '<p>public class While&nbsp;<p>{</p><p>&nbsp;&nbsp;public void loop()&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x= 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;while ( 1 ) /* Line 6 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"x plus one is \" + (x + 1)); /* Line 8 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;}</p><p>}</p><p><br></p><p>Which statement is true?</p></p>\n', '2021-02-25 03:17:21', '2021-02-25 03:17:21'),
('ed608859-47c0-4427-bda0-785eec794f44', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p><span style=\"color: rgb(0, 0, 0);\">Reference is like a _____.</span></p>\n', '2021-02-23 15:37:18', '2021-02-23 15:37:18'),
('eda3cf93-9ccf-4905-a6b9-b5d242186c2d', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p>Which of the following statements is correct?<p>Once the variable and the reference are linked they are tied together.</p><p>Once the reference of a variable is declared another reference of that variable is not allowed.</p></p>\n', '2021-02-23 15:38:38', '2021-02-23 15:38:38'),
('ee9c5618-a5d6-4a19-9c86-cbbdf7473677', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(58, 58, 58);\">A substitution cipher substitutes one symbol with</span></p>\n', '2021-02-20 19:46:03', '2021-02-20 19:46:03'),
('eeca8ea1-0c10-4ad1-8d87-dfb2eaeaaac0', '659ba20a-23ef-46e3-937b-fe2413577197', '<p><span style=\"color: rgb(58, 58, 58);\">Division of (131B6C3) base 16 by (lA2F) base 16 yeilds &ndash;</span></p>\n', '2021-02-21 10:16:12', '2021-02-21 10:16:12'),
('efeca7b0-1664-4b18-b683-672fba5d00c3', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '<p>Using JdbcTemplate, what is the Spring provided class you will use for result set parsing and merging rows into a single object?</p>\n', '2021-02-20 19:22:28', '2021-02-20 19:22:28'),
('f033ba2b-7979-4a4a-8457-4c1881af4e64', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:39:22', '2021-02-23 15:39:22'),
('f1df04a8-5473-45cd-8b62-58626a2abeef', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '<p>What will be the output of the program (when you run with the -ea option) ?<p><br></p><p>public class Test&nbsp;</p><p>{&nbsp;</p><p>&nbsp;&nbsp;public static void main(String[] args)&nbsp;</p><p>&nbsp;&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;int x = 0;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;assert (x &gt; 0) : \"assertion failed\"; /* Line 6 */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"finished\");&nbsp;</p><p>&nbsp;&nbsp;}&nbsp;</p><p>}</p></p>\n', '2021-02-25 03:00:10', '2021-02-25 03:00:10'),
('f1e65d34-919d-4f09-92be-4de4485b340f', '5118424b-7611-415a-ae13-a1659bb974c0', '<p class=\"ql-align-justify\">What will be the output of the program?<p class=\"ql-align-justify\"><br></p><p class=\"ql-align-justify\">public class X&nbsp;</p><p class=\"ql-align-justify\">{&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;public static void main(String [] args)&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;badMethod();&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"A\");&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;catch (Exception ex)&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"B\");&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"C\");&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(\"D\");&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;}&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;public static void badMethod()&nbsp;</p><p class=\"ql-align-justify\">&nbsp;&nbsp;{</p><p class=\"ql-align-justify\">&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(); /* Line 22 */</p><p class=\"ql-align-justify\">&nbsp;&nbsp;}&nbsp;</p><p class=\"ql-align-justify\">}</p></p>\n', '2021-02-23 19:38:51', '2021-02-23 19:38:51'),
('f215b4e5-e1df-48c3-8c77-edd383f16a9c', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '<p>Which two are valid constructors for Thread?<p><br></p><p>Thread(Runnable r, String name)</p><p>Thread()</p><p>Thread(int priority)</p><p>Thread(Runnable r, ThreadGroup g)</p><p>Thread(Runnable r, int priority)</p></p>\n', '2021-02-24 20:06:28', '2021-02-24 20:06:28'),
('f26dcb4d-fad7-4545-9718-221c9eeee2fa', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">Cryptography, a word with Greek origins, means</span></p>\n', '2021-02-20 20:16:30', '2021-02-20 20:16:30'),
('f369b3f8-96f1-4d1f-8dac-9a75466429b1', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following statement is correct?</span></p>\n', '2021-02-23 15:36:43', '2021-02-23 15:36:43'),
('f5443a7b-decd-46e9-b5b1-d10e9d94f428', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p><span style=\"color: rgb(0, 0, 0);\">In C, if you pass an array as an argument to a function, what actually gets passed?</span></p>\n', '2021-02-23 13:40:12', '2021-02-23 13:40:12'),
('f6b546b8-4b06-4c87-b7a1-429152a17f1e', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p><span style=\"color: rgb(0, 0, 0);\">Which interface does java.util.Hashtable implement?</span></p>\n', '2021-02-25 02:49:46', '2021-02-25 02:49:46'),
('f6e76ebe-9e06-4c3f-a99c-b9290b576d17', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">In symmetric-key cryptography, the same key is used by</span></p>\n', '2021-02-20 20:06:37', '2021-02-20 20:06:37'),
('f706fdd5-ce7a-4982-89b8-db4f5984eda8', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p>Which of the following statements are correct about an array?<p>1: The array int num[26]; can store 26 elements.</p><p>2: The expression num[1] designates the very first element in the array.</p><p>3: It is necessary to initialize the array at the time of declaration.</p><p>4: The declaration num[SIZE] is allowed if SIZE is a macro.</p></p>\n', '2021-02-23 13:34:28', '2021-02-23 13:34:28'),
('f72e747a-827e-4e04-b603-7ca59887c3d4', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p class=\"ql-align-justify\">Which of the following type of class allows only one object of it to be created?</p>\n', '2021-02-23 14:47:27', '2021-02-23 14:47:27'),
('f974efc2-ad86-4d15-bf7b-45f7d74183bc', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '<p>What will be the output of the program ?<p><br></p><p>#include&lt;stdio.h&gt;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;void fun(int, int[]);</p><p>&nbsp;&nbsp;int arr[] = {1, 2, 3, 4};</p><p>&nbsp;&nbsp;int i;</p><p>&nbsp;&nbsp;fun(4, arr);</p><p>&nbsp;&nbsp;for(i=0; i&lt;4; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%d,\", arr[i]);</p><p>&nbsp;&nbsp;return 0;</p><p>}</p><p>void fun(int n, int arr[])</p><p>{</p><p>&nbsp;&nbsp;int *p=0;</p><p>&nbsp;&nbsp;int i=0;</p><p>&nbsp;&nbsp;while(i++ &lt; n)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;p = &amp;arr[i];</p><p>&nbsp;&nbsp;*p=0;</p><p>}</p></p>\n', '2021-02-23 13:38:43', '2021-02-23 13:38:43'),
('fa597df9-dd7d-4260-97b0-56cafd3a9f34', 'e397a98c-5c5e-418e-a252-c24c906e396d', '<p>Which inheritance type is used in the class given below?&nbsp;<p>class A : public X, public Y&nbsp;{}</p></p>\n', '2021-02-23 14:55:21', '2021-02-23 14:55:21'),
('fac6f8af-5dbe-4f68-859f-2e976a34ce9e', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p>I<span style=\"color: rgb(0, 0, 0);\">n Asymmetric-Key Cryptography, although RSA can be used to encrypt and decrypt actual messages, it is very slow if the message is</span></p>\n', '2021-02-20 20:02:33', '2021-02-20 20:02:33'),
('fb20dfb2-8232-482d-8c2d-56c664ecae0e', 'f489024e-a2a8-4590-8a17-5824599bc89e', '<p>In which stage the following code&nbsp;<p>#include&lt;stdio.h&gt;&nbsp;</p><p>gets replaced by the contents of the file stdio.h</p></p>\n', '2021-02-23 14:27:59', '2021-02-23 14:27:59'),
('fba871db-f705-436f-a009-399009759a03', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '<p>Which of the following statements is correct?<p>We can return a global variable by reference.</p><p>We cannot return a local variable by reference.</p></p>\n', '2021-02-23 15:37:59', '2021-02-23 15:37:59'),
('fc3f855c-31e0-40a9-8b68-9ba0c614cd8c', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '<p><span style=\"color: rgb(0, 0, 0);\">Which is valid declaration of a float?</span></p>\n', '2021-02-25 02:46:44', '2021-02-25 02:46:44'),
('fd476b5d-6858-43d6-8a38-1f015e057016', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '<p><span style=\"color: rgb(0, 0, 0);\">The Advanced Encryption Standard (AES) was designed</span></p>\n', '2021-02-20 20:18:51', '2021-02-20 20:18:51'),
('fd98ac26-a592-41d9-bc84-1afb240ba084', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p>What do the following declaration signify?<p><br></p><p><span style=\"color: rgb(0, 0, 0);\">void (*cmp)();</span></p></p>\n', '2021-02-23 14:34:35', '2021-02-23 14:34:35'),
('fe91ca63-860c-4001-a397-23a6e2ebddbd', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '<p>What will be the output of the program in DOS (Compiler - Turbo C)?<p><br></p><p>#include&lt;stdio.h&gt;</p><p>double i;</p><p><br></p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;(int)(float)(char) i;</p><p>&nbsp;&nbsp;printf(\"%d\", sizeof((int)(float)(char)i));</p><p>&nbsp;&nbsp;return 0;</p><p>}</p></p>\n', '2021-02-23 14:31:46', '2021-02-23 14:31:46'),
('feb50af5-92f8-424e-9eed-054649c25bec', '453208b8-3ea2-4a94-9d91-002fd97bffda', '<p><span style=\"color: rgb(0, 0, 0);\">Which of the following access specifies is used in a class definition by default?</span></p>\n', '2021-02-23 15:09:48', '2021-02-23 15:09:48'),
('ff3a6737-f9ef-40c7-8ed1-0b29695d0fc0', '76724e02-ddca-4592-80f3-b06b389013b9', '<p><span style=\"color: rgb(58, 58, 58);\">If the compression function is collision resistant, then so is the resultant iterated hash function.</span></p>\n', '2021-02-22 12:51:08', '2021-02-22 12:51:08'),
('ff5f02b9-c3f0-4523-98f4-020baf45e091', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '<p><span style=\"color: rgb(0, 0, 0);\">Which is a valid keyword in java?</span></p>\n', '2021-02-24 19:53:50', '2021-02-24 19:53:50');

-- --------------------------------------------------------

--
-- Table structure for table `quiz_roles`
--

CREATE TABLE `quiz_roles` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `role` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_roles`
--

INSERT INTO `quiz_roles` (`id`, `role`, `created_at`, `updated_at`) VALUES
('1', 'superadmin', NULL, NULL),
('2', 'admin', NULL, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `quiz_scores`
--

CREATE TABLE `quiz_scores` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `user_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `exam_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `computed_score` decimal(4,2) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `actual_score` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_scores`
--

INSERT INTO `quiz_scores` (`id`, `user_id`, `exam_id`, `computed_score`, `created_at`, `updated_at`, `actual_score`) VALUES
('00251259-c7a3-41f2-85a6-b74fca2e3c4d', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '1.00', '2021-03-15 00:23:18', '2021-03-15 00:23:18', 1),
('00941ecc-31b8-4832-a97e-e3a28c46cadb', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', '137cb6ee-d459-4a0d-956d-94b26c97a592', '3.00', '2021-03-06 20:34:02', '2021-03-06 20:34:02', 3),
('022b04f3-b860-4255-b635-34c5053de612', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', '9a2a718e-7e68-4837-aa55-68febbc0136e', '2.00', '2021-03-15 00:03:00', '2021-03-15 00:03:00', 2),
('031d0053-3b64-4e98-8202-e5ce716ca7f8', '2f721c43-9109-4a83-a61e-9ece679cf6a5', '2ac55e0a-9465-497e-a756-0cee16244c10', '9.00', '2021-02-26 02:13:27', '2021-02-26 02:13:27', 9),
('03cb96c8-fab2-4d4e-bd58-4d1144ea2ddd', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', '9a2a718e-7e68-4837-aa55-68febbc0136e', '5.00', '2021-03-09 20:12:23', '2021-03-09 20:12:23', 5),
('0415fb53-64c7-4d2c-b0c4-37a8007be427', '2f721c43-9109-4a83-a61e-9ece679cf6a5', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '9.00', '2021-02-26 01:24:23', '2021-02-26 01:24:23', 9),
('05c01b59-e720-44f1-9709-9452a168d75c', '6981086d-76e7-4a73-9a1f-6c5481cb1e74', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '13.00', '2021-03-12 14:28:29', '2021-03-12 14:28:29', 13),
('05f06133-0589-4347-bdea-9b4c5b95f76c', 'ebe7fea6-930b-4148-bae9-9194308ad642', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '4.00', '2021-03-13 17:22:00', '2021-03-13 17:22:00', 4),
('08461d5c-b5c3-4dd5-a690-f932cf319881', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', '137cb6ee-d459-4a0d-956d-94b26c97a592', '7.00', '2021-03-05 14:51:43', '2021-03-05 14:51:43', 7),
('08dd0d9f-f772-4837-8102-9dd774056891', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', '9a2a718e-7e68-4837-aa55-68febbc0136e', '2.00', '2021-03-03 12:16:14', '2021-03-03 12:16:14', 2),
('097b7c1f-ffd2-4759-9bf1-1313cb793694', 'e3b0ed30-a7a6-41a0-8334-747443b9e372', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '6.00', '2021-02-23 17:51:55', '2021-02-23 17:51:55', 6),
('0a42bcc0-27e6-4476-b702-ebd5745d4f9e', '82b15fc4-5448-4afb-ac55-28bf36bb51d6', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '9.00', '2021-03-15 23:25:36', '2021-03-15 23:25:36', 9),
('0b5f776b-3cd8-4c5c-9136-fa54f868ef1b', '34938ee7-128a-4d15-b577-0d2b744028f3', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '4.00', '2021-03-04 16:15:02', '2021-03-04 16:15:02', 4),
('0b7e990a-c169-4e5f-9920-9feef7174c69', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '4.00', '2021-03-03 11:44:34', '2021-03-03 11:44:34', 4),
('0c0edcc3-3b6b-40b0-945f-635bea8af454', 'c96cf72b-0c18-4509-952e-30a7d8d178b8', 'e397a98c-5c5e-418e-a252-c24c906e396d', '17.00', '2021-03-21 18:02:46', '2021-03-21 18:02:46', 17),
('0dd18fc0-8cd8-4741-b263-03c6c6154508', '220f673c-1745-4333-b528-b3ef7611a3cc', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '7.00', '2021-02-27 10:43:55', '2021-02-27 10:43:55', 7),
('0de87a9d-178a-4366-a7b5-db341e8600ea', '82b15fc4-5448-4afb-ac55-28bf36bb51d6', '2ac55e0a-9465-497e-a756-0cee16244c10', '5.00', '2021-03-06 18:10:58', '2021-03-06 18:10:58', 5),
('0e823a7c-23d7-4d77-a539-05472cda5635', '3e3615e9-2d35-4f11-b279-113315965061', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '4.00', '2021-03-03 10:00:55', '2021-03-03 10:00:55', 4),
('0f4b0266-9c02-48a2-864d-d7e91615e85d', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', '9291a534-8d59-4d95-b604-fdf399791cda', '6.00', '2021-03-05 13:41:05', '2021-03-05 13:41:05', 6),
('115cd4e2-f66f-46a6-a39c-bd4eb2b2b91a', '45576eaa-11e5-4633-ab15-9a63958ffafd', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '9.00', '2021-03-10 20:23:30', '2021-03-10 20:23:30', 9),
('125c7c33-47d4-413e-b664-d313df24a0b9', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', '5118424b-7611-415a-ae13-a1659bb974c0', '9.00', '2021-03-06 11:33:50', '2021-03-06 11:33:50', 9),
('1464368b-95ee-4889-807c-1ea799dd9e93', '79fd5d5c-9fea-4510-80cb-531b0733bdaf', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '29.00', '2021-03-04 06:38:11', '2021-03-04 06:38:11', 29),
('1491b874-63c2-4e55-aaba-69ba9d907438', 'a009d356-1c0d-419a-94dd-86703277a51e', '9a2a718e-7e68-4837-aa55-68febbc0136e', '7.00', '2021-03-10 08:29:13', '2021-03-10 08:29:13', 7),
('1595784a-7dda-4099-bd14-d31109aa5c50', 'f8ac7d93-f927-4463-9809-52406dbdff17', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '13.00', '2021-03-22 00:58:52', '2021-03-22 00:58:52', 13),
('16057a16-f4f4-4f9c-a719-a481b853c578', 'a009d356-1c0d-419a-94dd-86703277a51e', '5118424b-7611-415a-ae13-a1659bb974c0', '11.00', '2021-03-10 07:59:10', '2021-03-10 07:59:10', 11),
('169249e9-786a-4cf7-b4d5-1a138ed610b4', '2f721c43-9109-4a83-a61e-9ece679cf6a5', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '10.00', '2021-02-26 01:48:06', '2021-02-26 01:48:06', 10),
('16cad4ae-8f3e-4da8-8f88-595ee50eda0e', '34938ee7-128a-4d15-b577-0d2b744028f3', '5118424b-7611-415a-ae13-a1659bb974c0', '7.00', '2021-03-04 16:26:17', '2021-03-04 16:26:17', 7),
('179543af-fcc3-4ebe-8083-1aec968e83be', '948da038-3ce9-4b15-8ba7-bfc860504c38', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '4.00', '2021-03-04 13:00:48', '2021-03-04 13:00:48', 4),
('186068b0-ef10-416d-bb26-d08c7dacfc33', 'ebe7fea6-930b-4148-bae9-9194308ad642', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '6.00', '2021-03-13 17:30:19', '2021-03-13 17:30:19', 6),
('18c3e7f1-44bc-4865-a3b8-c84032b4a912', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', '137cb6ee-d459-4a0d-956d-94b26c97a592', '7.00', '2021-03-06 13:36:12', '2021-03-06 13:36:12', 7),
('19545314-c4c3-4d76-b9f3-45c9d87a36c1', '34938ee7-128a-4d15-b577-0d2b744028f3', '2ac55e0a-9465-497e-a756-0cee16244c10', '5.00', '2021-03-04 17:39:33', '2021-03-04 17:39:33', 5),
('1a0a082f-f7c6-4bcd-b671-6e119fcae0aa', '92848f56-bffc-415f-923c-63d6a36e6ea6', '137cb6ee-d459-4a0d-956d-94b26c97a592', '7.00', '2021-03-13 12:43:54', '2021-03-13 12:43:54', 7),
('1a1379e4-5764-4501-b424-531d8bcf9dec', '3e3615e9-2d35-4f11-b279-113315965061', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '9.00', '2021-03-03 10:45:31', '2021-03-03 10:45:31', 9),
('1d610bbd-5457-449d-848d-2ec21d626745', 'ebe7fea6-930b-4148-bae9-9194308ad642', '9a2a718e-7e68-4837-aa55-68febbc0136e', '2.00', '2021-03-13 16:10:51', '2021-03-13 16:10:51', 2),
('1dd5c0f5-9213-4778-b681-1b34e8be1578', 'c96cf72b-0c18-4509-952e-30a7d8d178b8', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '10.00', '2021-03-21 19:01:08', '2021-03-21 19:01:08', 10),
('1e1ac840-abd0-4cda-978d-dbc764fad425', '34938ee7-128a-4d15-b577-0d2b744028f3', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '5.00', '2021-03-04 17:32:29', '2021-03-04 17:32:29', 5),
('1e940fca-d6dd-46a8-a71b-2fff3ef9d0bd', '34938ee7-128a-4d15-b577-0d2b744028f3', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '10.00', '2021-03-04 16:36:26', '2021-03-04 16:36:26', 10),
('1e9cb383-0bd7-4b7d-a815-1ce8c3defa43', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '6.00', '2021-03-10 00:03:12', '2021-03-10 00:03:12', 6),
('1f652246-62fe-45e0-af10-0cb33ba37c3a', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '4.00', '2021-03-14 23:26:55', '2021-03-14 23:26:55', 4),
('1fbf9ff2-f34d-407a-8b7b-35d2ddc5a61d', 'bbd27792-79f5-42eb-9d72-c7331891ad61', '2999216c-4ca4-4e01-b37d-6a24879fa329', '11.00', '2021-02-25 23:22:45', '2021-02-25 23:22:45', 11),
('20fc3ff0-d502-44db-bcc5-e732fe0478b8', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', '9291a534-8d59-4d95-b604-fdf399791cda', '7.00', '2021-03-06 12:23:21', '2021-03-06 12:23:21', 7),
('2168f0a5-fc06-4915-9a5a-58352a6136e8', '2f721c43-9109-4a83-a61e-9ece679cf6a5', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '10.00', '2021-02-26 01:39:31', '2021-02-26 01:39:31', 10),
('219cbd39-078b-41fc-a819-87b086cc65a6', '6981086d-76e7-4a73-9a1f-6c5481cb1e74', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '13.00', '2021-03-12 13:48:48', '2021-03-12 13:48:48', 13),
('22b0f037-cd16-43ba-9a62-47f569a06482', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '15.00', '2021-03-06 21:14:16', '2021-03-06 21:14:16', 15),
('23309324-e11e-4a8d-99a8-0261377691b5', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '11.00', '2021-03-06 21:41:31', '2021-03-06 21:41:31', 11),
('240c3c01-72a2-4599-8bfe-547f6d83b7ae', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '4.00', '2021-03-06 12:45:03', '2021-03-06 12:45:03', 4),
('24e7ca07-335e-40ac-b6b6-da6ec5e13bda', 'e3b0ed30-a7a6-41a0-8334-747443b9e372', '453208b8-3ea2-4a94-9d91-002fd97bffda', '17.00', '2021-02-23 19:03:52', '2021-02-23 19:03:52', 17),
('2502f55d-864e-4493-93d8-2efbb78b96ba', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', '5118424b-7611-415a-ae13-a1659bb974c0', '12.00', '2021-03-04 21:46:35', '2021-03-04 21:46:35', 12),
('26681304-87d0-4d5a-8eda-230ffffcea09', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '5.00', '2021-03-09 20:01:33', '2021-03-09 20:01:33', 5),
('26c3e3a3-1b1b-49bc-b4e7-5490c54b9c54', '92ee3773-75ba-4f08-b706-f8febe0670b7', '9a2a718e-7e68-4837-aa55-68febbc0136e', '3.00', '2021-03-05 18:27:49', '2021-03-05 18:27:49', 3),
('281503e4-feaf-4cfa-9612-14f8e8c508af', 'bbd27792-79f5-42eb-9d72-c7331891ad61', 'f489024e-a2a8-4590-8a17-5824599bc89e', '10.00', '2021-02-26 00:31:26', '2021-02-26 00:31:26', 10),
('28549c08-7574-47f0-bc33-02f1c2437300', '220f673c-1745-4333-b528-b3ef7611a3cc', '9291a534-8d59-4d95-b604-fdf399791cda', '6.00', '2021-02-26 23:00:53', '2021-02-26 23:00:53', 6),
('29462c34-ab66-4640-9629-cc803b979c15', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', '2ac55e0a-9465-497e-a756-0cee16244c10', '6.00', '2021-02-25 23:27:01', '2021-02-25 23:27:01', 6),
('2988927c-b1b6-4ec3-8a26-d6423a4cca2d', '1f8b4446-bd59-4e75-9c13-06f7e8f8d7dc', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '37.00', '2021-02-22 18:51:53', '2021-02-22 18:51:53', 37),
('29c4495a-4582-43b7-96a8-81b82e8c32f7', '1b26d1a3-f44b-4ade-9bb0-0f4d3006f26a', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '3.00', '2021-04-08 11:26:32', '2021-04-08 11:26:32', 3),
('29eea200-403e-4c65-9689-33ddcc72d1dc', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '9.00', '2021-03-06 12:33:41', '2021-03-06 12:33:41', 9),
('2a7babec-ba30-4c5f-bc0b-b9c8f8d945d4', '2f721c43-9109-4a83-a61e-9ece679cf6a5', '5118424b-7611-415a-ae13-a1659bb974c0', '11.00', '2021-02-26 01:56:17', '2021-02-26 01:56:17', 11),
('2ab5e3dd-7d3e-42f8-af8b-4aef8e3a88cf', '0a26905a-ec7b-4e7c-9437-7523f52953cf', '4a2db9d2-f00d-4c54-89ac-5b133200511b', '5.00', '2021-02-22 18:20:16', '2021-02-22 18:20:16', 1),
('2b4e030f-c2a7-4023-87d0-a1cdbe13f90b', '560144b9-a400-431c-9b9a-a52f3c685887', '76724e02-ddca-4592-80f3-b06b389013b9', '5.00', '2021-02-22 13:58:58', '2021-02-22 13:58:58', 5),
('2e24b930-c160-4a58-b39b-a63ed5ae67a8', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '4.00', '2021-02-26 18:39:10', '2021-02-26 18:39:10', 4),
('2e787079-0ffd-4696-9f91-044f2ceed2fc', '948da038-3ce9-4b15-8ba7-bfc860504c38', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '14.00', '2021-03-04 11:58:44', '2021-03-04 11:58:44', 14),
('2f0281a5-1d7a-4c37-af58-63ba6dc4ffdc', '7e62c193-2517-4a7e-889b-a1f8c7860d72', '137cb6ee-d459-4a0d-956d-94b26c97a592', '6.00', '2021-03-07 10:57:55', '2021-03-07 10:57:55', 6),
('2fff989f-6e0d-4d42-a049-1a5b75ca3b46', '92ee3773-75ba-4f08-b706-f8febe0670b7', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '5.00', '2021-03-05 18:50:30', '2021-03-05 18:50:30', 5),
('307251c0-d9d3-4c19-89f3-226f1ae9fbc5', '2b09aefe-0c94-48b3-8ca2-a7bfce4fc229', '316d30e3-6061-4be0-af33-f4ee4aef3bfb', '12.00', '2021-02-25 19:18:36', '2021-02-25 19:18:36', 1),
('30dc1549-6d4d-4f03-ac87-637bacdcf43d', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', '9a2a718e-7e68-4837-aa55-68febbc0136e', '8.00', '2021-03-04 21:20:25', '2021-03-04 21:20:25', 8),
('314cd13c-6972-4236-bb8c-977ee85f8c36', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', '137cb6ee-d459-4a0d-956d-94b26c97a592', '3.00', '2021-03-15 21:24:46', '2021-03-15 21:24:46', 3),
('32afe498-f18b-4c90-a62c-119507dffda9', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '13.00', '2021-03-06 13:00:26', '2021-03-06 13:00:26', 13),
('32dd247b-8174-496d-ae02-779e57032f0b', '34938ee7-128a-4d15-b577-0d2b744028f3', '137cb6ee-d459-4a0d-956d-94b26c97a592', '5.00', '2021-03-04 15:52:10', '2021-03-04 15:52:10', 5),
('34c57e89-8996-4e56-9832-5f9689a92d9f', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '6.00', '2021-03-15 00:29:10', '2021-03-15 00:29:10', 6),
('34c6bddb-18eb-4940-831e-01928292a833', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '4.00', '2021-03-05 14:04:28', '2021-03-05 14:04:28', 4),
('355288df-06c0-41f0-bc5e-7b41a8b45333', '3e3615e9-2d35-4f11-b279-113315965061', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '6.00', '2021-03-03 10:20:28', '2021-03-03 10:20:28', 6),
('3576f2b8-4f78-4350-b43f-c8712b87b8b6', '0f77b32f-3f62-4c93-9a10-87fcdf680983', '677ec257-eaf6-438f-9897-4efc22c379a5', '6.00', '2021-03-21 16:50:05', '2021-03-21 16:50:05', 6),
('35da829f-48b2-48f5-b36e-cee183426d3f', '948da038-3ce9-4b15-8ba7-bfc860504c38', '5118424b-7611-415a-ae13-a1659bb974c0', '10.00', '2021-03-04 12:39:05', '2021-03-04 12:39:05', 10),
('3634617c-aa20-4f69-9669-6f7bfb305ff1', '948da038-3ce9-4b15-8ba7-bfc860504c38', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '6.00', '2021-03-04 12:18:05', '2021-03-04 12:18:05', 6),
('36622226-db60-4534-9c8e-96a96fe110c7', '45576eaa-11e5-4633-ab15-9a63958ffafd', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '6.00', '2021-03-10 20:47:55', '2021-03-10 20:47:55', 6),
('36da1205-beda-46d2-9393-bebed29620ec', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '6.00', '2021-03-06 22:28:58', '2021-03-06 22:28:58', 6),
('378f3642-da17-42a0-9a6c-54f43e492fb9', '6981086d-76e7-4a73-9a1f-6c5481cb1e74', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '11.00', '2021-03-12 14:14:45', '2021-03-12 14:14:45', 11),
('37bf074e-0901-4b11-95b5-2f61cd975760', '45576eaa-11e5-4633-ab15-9a63958ffafd', '2ac55e0a-9465-497e-a756-0cee16244c10', '7.00', '2021-03-10 20:10:10', '2021-03-10 20:10:10', 7),
('37ec7743-e9b0-4d82-b75e-7af9c4c47511', '2f721c43-9109-4a83-a61e-9ece679cf6a5', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '13.00', '2021-02-26 02:05:26', '2021-02-26 02:05:26', 13),
('3820739d-9a84-4325-bf5a-83221ac642d5', 'bdc0d91d-a94d-413f-8980-92e61ed0cf40', '677ec257-eaf6-438f-9897-4efc22c379a5', '9.00', '2021-03-12 13:35:57', '2021-03-12 13:35:57', 9),
('390ae38f-d507-4784-bb08-24eb17d8173b', 'bdc0d91d-a94d-413f-8980-92e61ed0cf40', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '31.00', '2021-03-12 12:56:57', '2021-03-12 12:56:57', 31),
('393c0de3-02e8-465f-bc22-558aeb8d7e55', '9c05cc1d-cf33-4a1f-a776-b3fceb769d24', '5118424b-7611-415a-ae13-a1659bb974c0', '10.00', '2021-03-09 15:58:36', '2021-03-09 15:58:36', 10),
('3a3e7b7d-1547-4ae6-9987-fccaa6569243', '9c05cc1d-cf33-4a1f-a776-b3fceb769d24', '5118424b-7611-415a-ae13-a1659bb974c0', '10.00', '2021-03-09 15:58:35', '2021-03-09 15:58:35', 10),
('3a6942d3-7292-4de3-9f16-5c39147a70be', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '3.00', '2021-03-06 12:07:01', '2021-03-06 12:07:01', 3),
('3aaf53e6-745a-418d-ab53-aaf03ff03b44', 'e087d4db-d77d-421b-8692-4edf545b66ae', '659ba20a-23ef-46e3-937b-fe2413577197', '9.00', '2021-03-22 11:37:58', '2021-03-22 11:37:58', 9),
('3abead1a-e47c-4ef1-be2b-a8d25990e416', '79fd5d5c-9fea-4510-80cb-531b0733bdaf', '316d30e3-6061-4be0-af33-f4ee4aef3bfb', '12.00', '2021-03-04 06:17:19', '2021-03-04 06:17:19', 1),
('3b3d486b-0d07-4c84-8dd4-275ebf535608', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '4.00', '2021-03-05 14:40:48', '2021-03-05 14:40:48', 4),
('3be59fbc-362f-4d29-aa1e-a2c8b77a3156', '7e62c193-2517-4a7e-889b-a1f8c7860d72', '5118424b-7611-415a-ae13-a1659bb974c0', '9.00', '2021-03-07 11:17:15', '2021-03-07 11:17:15', 9),
('3cbbd921-8ff7-4184-80f4-41cc2b912ac3', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '5.00', '2021-03-07 00:48:07', '2021-03-07 00:48:07', 5),
('3cc0a82a-ad82-41af-a380-467d866522d9', 'a009d356-1c0d-419a-94dd-86703277a51e', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '11.00', '2021-03-10 08:18:38', '2021-03-10 08:18:38', 11),
('3ccc151c-7d41-4cf4-b479-11c8c9a71801', '92ee3773-75ba-4f08-b706-f8febe0670b7', '9291a534-8d59-4d95-b604-fdf399791cda', '4.00', '2021-03-05 19:34:11', '2021-03-05 19:34:11', 4),
('3d944fd5-3437-4b80-b0ec-7e633cbfb892', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '5.00', '2021-03-08 21:06:02', '2021-03-08 21:06:02', 5),
('3f9de18a-710e-4f92-b462-c071a11bc4e6', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', '9291a534-8d59-4d95-b604-fdf399791cda', '7.00', '2021-03-12 14:55:02', '2021-03-12 14:55:02', 7),
('402c8fc5-05cb-4348-ac1c-0a09dac02507', 'e087d4db-d77d-421b-8692-4edf545b66ae', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '33.00', '2021-03-22 11:22:44', '2021-03-22 11:22:44', 33),
('4198ba1e-3222-4c88-b230-62d800f4c585', 'a009d356-1c0d-419a-94dd-86703277a51e', '137cb6ee-d459-4a0d-956d-94b26c97a592', '10.00', '2021-03-11 08:57:55', '2021-03-11 08:57:55', 10),
('41f902fb-156f-463c-91ad-4126a522caa8', '34938ee7-128a-4d15-b577-0d2b744028f3', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '0.00', '2021-03-04 16:04:02', '2021-03-04 16:04:02', 0),
('447c9c19-ea1f-45bd-961d-0f3f19bd8f94', '0f77b32f-3f62-4c93-9a10-87fcdf680983', '76724e02-ddca-4592-80f3-b06b389013b9', '3.00', '2021-03-21 16:55:49', '2021-03-21 16:55:49', 3),
('4561db5b-45b7-4f54-a201-6b5c9434be3a', '45576eaa-11e5-4633-ab15-9a63958ffafd', '5118424b-7611-415a-ae13-a1659bb974c0', '7.00', '2021-03-10 19:27:32', '2021-03-10 19:27:32', 7),
('46019e6e-c1a7-4a67-bd0b-89f81050d39e', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', '5118424b-7611-415a-ae13-a1659bb974c0', '7.00', '2021-03-07 01:10:26', '2021-03-07 01:10:26', 7),
('4691aa71-ca71-4e10-bb9d-d55f7ac086ce', '7e62c193-2517-4a7e-889b-a1f8c7860d72', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '15.00', '2021-03-07 12:31:45', '2021-03-07 12:31:45', 15),
('473ae5ae-9b45-4fda-bb5f-79968e9b4feb', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '6.00', '2021-03-09 20:23:05', '2021-03-09 20:23:05', 6),
('47c4e5ab-6005-407d-8d12-5e4d50048db0', '9c05cc1d-cf33-4a1f-a776-b3fceb769d24', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '2.00', '2021-03-09 16:14:06', '2021-03-09 16:14:06', 2),
('47e05289-3a5e-4e48-ba6a-e54eb7fae1ad', '948da038-3ce9-4b15-8ba7-bfc860504c38', '2ac55e0a-9465-497e-a756-0cee16244c10', '8.00', '2021-03-04 12:28:30', '2021-03-04 12:28:30', 8),
('4842c248-a7a3-4b0b-b6d1-1d5a2019eeb1', 'e3b0ed30-a7a6-41a0-8334-747443b9e372', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '11.00', '2021-02-23 19:55:18', '2021-02-23 19:55:18', 11),
('48f6d01c-8289-4065-baba-8333bc3762a2', '92848f56-bffc-415f-923c-63d6a36e6ea6', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '3.00', '2021-03-13 13:48:27', '2021-03-13 13:48:27', 3),
('4aec7178-0a2f-44a7-9a0b-3f3295040ed0', '220f673c-1745-4333-b528-b3ef7611a3cc', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '9.00', '2021-02-26 22:09:34', '2021-02-26 22:09:34', 9),
('4b4b3fd8-b5e7-474e-bf65-209714ffc7ef', '92848f56-bffc-415f-923c-63d6a36e6ea6', '9a2a718e-7e68-4837-aa55-68febbc0136e', '2.00', '2021-03-13 12:59:14', '2021-03-13 12:59:14', 2),
('4b56aa9e-e9f3-47c5-838f-897784e2f4e1', 'd0c32815-d8cc-458e-af68-bb133d9dbf50', '677ec257-eaf6-438f-9897-4efc22c379a5', '9.00', '2021-03-22 00:36:48', '2021-03-22 00:36:48', 9),
('4c81054e-3f21-4d10-8d3c-c16f6eb99dd9', '6e8ea0f6-8977-4b34-9319-cf77add8dd26', '5118424b-7611-415a-ae13-a1659bb974c0', '11.00', '2021-03-23 18:21:14', '2021-03-23 18:21:14', 11),
('4ca30e0f-988f-4006-a1e2-810b285e192d', '3e3615e9-2d35-4f11-b279-113315965061', '5118424b-7611-415a-ae13-a1659bb974c0', '5.00', '2021-03-03 09:47:24', '2021-03-03 09:47:24', 5),
('4d41cbb3-8860-474d-b7c0-f63996b55369', '3e3615e9-2d35-4f11-b279-113315965061', '9291a534-8d59-4d95-b604-fdf399791cda', '1.00', '2021-03-03 10:10:08', '2021-03-03 10:10:08', 1),
('4d425cfd-58cd-4e74-a5da-31fcf5a43152', 'c1086650-edff-4269-92e1-b9a6b3563e04', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '7.00', '2021-03-22 12:36:16', '2021-03-22 12:36:16', 7),
('4d82918b-cfb1-4645-ba03-98632ce5473b', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', '9291a534-8d59-4d95-b604-fdf399791cda', '7.00', '2021-03-08 21:22:25', '2021-03-08 21:22:25', 7),
('4d8553ee-2ef1-4759-8b6d-b4ce5099e7d4', 'a009d356-1c0d-419a-94dd-86703277a51e', '2ac55e0a-9465-497e-a756-0cee16244c10', '7.00', '2021-03-10 08:40:07', '2021-03-10 08:40:07', 7),
('4defa87e-15c7-497b-8b85-ada93de6bfc7', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', '2ac55e0a-9465-497e-a756-0cee16244c10', '3.00', '2021-03-06 11:55:06', '2021-03-06 11:55:06', 3),
('4e60930d-3732-4703-8742-37f1078613f6', '7e62c193-2517-4a7e-889b-a1f8c7860d72', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '4.00', '2021-03-07 11:24:58', '2021-03-07 11:24:58', 4),
('4e711696-61bd-469a-a963-7dee5d966f7a', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', '9291a534-8d59-4d95-b604-fdf399791cda', '7.00', '2021-03-06 12:23:21', '2021-03-06 12:23:21', 7),
('4f3a4414-3f88-4910-b8c2-58cba257d9e2', '45576eaa-11e5-4633-ab15-9a63958ffafd', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '8.00', '2021-03-10 19:48:16', '2021-03-10 19:48:16', 8),
('50579fcb-d351-4e20-8542-e9d93b397b4f', '0f77b32f-3f62-4c93-9a10-87fcdf680983', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '22.00', '2021-03-21 16:17:00', '2021-03-21 16:17:00', 22),
('51d5f80d-6bd7-420d-a94a-078f0178b725', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '4.00', '2021-03-04 20:59:42', '2021-03-04 20:59:42', 4),
('538667a3-d60c-4d55-9685-53f465eaf93f', 'e92d14ca-4a02-4e66-9944-03972086617f', '659ba20a-23ef-46e3-937b-fe2413577197', '5.00', '2021-02-23 16:56:00', '2021-02-23 16:56:00', 5),
('54afd4fb-ef54-42fb-ac94-5779efdb9827', '560144b9-a400-431c-9b9a-a52f3c685887', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '27.00', '2021-02-22 13:33:46', '2021-02-22 13:33:46', 27),
('5537f961-540a-48fb-9060-6f2fff1c139f', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '5.00', '2021-03-09 23:52:26', '2021-03-09 23:52:26', 5),
('5556716c-63db-4fe8-b815-806ad908ed9c', '79fd5d5c-9fea-4510-80cb-531b0733bdaf', '76724e02-ddca-4592-80f3-b06b389013b9', '2.00', '2021-03-23 04:17:14', '2021-03-23 04:17:14', 2),
('565e0555-a6f3-4b33-a2f0-1a2070467983', '34938ee7-128a-4d15-b577-0d2b744028f3', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '9.00', '2021-03-04 17:20:28', '2021-03-04 17:20:28', 9),
('5874a934-5d9b-4b30-acd8-cc9773e68513', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '15.00', '2021-02-25 22:47:06', '2021-02-25 22:47:06', 15),
('587afcf2-e200-49a6-9d40-4794dbe20329', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', '5118424b-7611-415a-ae13-a1659bb974c0', '6.00', '2021-03-06 20:21:01', '2021-03-06 20:21:01', 6),
('58c6c2e4-fd9f-43b5-9842-3b64fb7cc293', 'e92d14ca-4a02-4e66-9944-03972086617f', '677ec257-eaf6-438f-9897-4efc22c379a5', '6.00', '2021-02-23 17:26:52', '2021-02-23 17:26:52', 6),
('5924329e-a9f8-4396-989c-64c3500d88d6', '92ee3773-75ba-4f08-b706-f8febe0670b7', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '5.00', '2021-03-05 10:20:14', '2021-03-05 10:20:14', 5),
('5a7b1057-258b-40b1-883b-0a4948787f59', '948da038-3ce9-4b15-8ba7-bfc860504c38', '137cb6ee-d459-4a0d-956d-94b26c97a592', '7.00', '2021-03-04 13:10:45', '2021-03-04 13:10:45', 7),
('5abb673e-6b4c-42be-ad0d-932ffdf67ac2', '82b15fc4-5448-4afb-ac55-28bf36bb51d6', '5118424b-7611-415a-ae13-a1659bb974c0', '6.00', '2021-03-06 17:34:38', '2021-03-06 17:34:38', 6),
('5ad38b22-095f-4d3f-bfc7-92bce3dffc00', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '11.00', '2021-03-04 21:14:21', '2021-03-04 21:14:21', 11),
('5b1149ed-ff5c-4e96-9357-3d9fdafd939d', 'e3b0ed30-a7a6-41a0-8334-747443b9e372', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '15.00', '2021-02-23 19:14:09', '2021-02-23 19:14:09', 15),
('5e420649-f300-482d-b5ff-f69757342b2e', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '8.00', '2021-03-12 15:05:43', '2021-03-12 15:05:43', 8),
('5f23091f-9c30-4dea-b28b-eb7819920ef7', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '10.00', '2021-03-13 22:35:22', '2021-03-13 22:35:22', 10),
('60bed588-396c-4ebc-8409-2f5511bf818d', '948da038-3ce9-4b15-8ba7-bfc860504c38', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '6.00', '2021-03-04 12:50:16', '2021-03-04 12:50:16', 6),
('61aeea6b-c335-4b2e-8102-78d95a22d06f', '63ada4ff-f891-429c-a001-b0b1605d9d90', '316d30e3-6061-4be0-af33-f4ee4aef3bfb', '12.00', '2021-03-22 11:46:32', '2021-03-22 11:46:32', 1),
('623f5bec-0987-4152-984d-15cfcaae4d41', '92ee3773-75ba-4f08-b706-f8febe0670b7', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '4.00', '2021-03-05 18:42:02', '2021-03-05 18:42:02', 4),
('6593f781-5e0e-4601-a4aa-d58b213a7d90', 'e087d4db-d77d-421b-8692-4edf545b66ae', '65e408fc-4ae6-4c52-9314-723639e82a04', '11.00', '2021-03-22 11:48:47', '2021-03-22 11:48:47', 11),
('660c9b68-a5e7-489a-a4ea-9bf49f281357', '92848f56-bffc-415f-923c-63d6a36e6ea6', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '5.00', '2021-03-13 13:08:12', '2021-03-13 13:08:12', 5),
('673d0632-8ed5-4184-af31-5d2df5231fab', 'e3b0ed30-a7a6-41a0-8334-747443b9e372', 'e397a98c-5c5e-418e-a252-c24c906e396d', '23.00', '2021-02-23 19:28:55', '2021-02-23 19:28:55', 23),
('674ce6fb-1cda-48f5-94a6-a83634de6e8f', 'd0c32815-d8cc-458e-af68-bb133d9dbf50', '76724e02-ddca-4592-80f3-b06b389013b9', '7.00', '2021-03-22 00:36:55', '2021-03-22 00:36:55', 7),
('679203c3-e091-4af3-aed3-5fda4699a3fb', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', '2ac55e0a-9465-497e-a756-0cee16244c10', '10.00', '2021-03-06 21:52:52', '2021-03-06 21:52:52', 10),
('67a4728d-2b23-4bcc-9961-46035058c44d', 'c96cf72b-0c18-4509-952e-30a7d8d178b8', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '9.00', '2021-03-21 19:56:47', '2021-03-21 19:56:47', 9),
('67a867c5-1bd4-4b56-89cf-6102b685b1d7', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', '9a2a718e-7e68-4837-aa55-68febbc0136e', '5.00', '2021-03-13 22:24:11', '2021-03-13 22:24:11', 5),
('68274e52-8aac-4db3-8f6b-f0296a71ef58', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', '137cb6ee-d459-4a0d-956d-94b26c97a592', '4.00', '2021-03-09 23:42:30', '2021-03-09 23:42:30', 4),
('683ed64c-15bb-4d29-b320-2e2fbb1dbcd2', '948da038-3ce9-4b15-8ba7-bfc860504c38', '9291a534-8d59-4d95-b604-fdf399791cda', '8.00', '2021-03-04 11:45:30', '2021-03-04 11:45:30', 8),
('688c3a3a-f3ff-4911-8627-c6444efc8087', '9c05cc1d-cf33-4a1f-a776-b3fceb769d24', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '6.00', '2021-03-09 16:08:04', '2021-03-09 16:08:04', 6),
('6974ea01-d3aa-4030-977e-cde7cc643aee', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', '2ac55e0a-9465-497e-a756-0cee16244c10', '5.00', '2021-03-03 15:59:54', '2021-03-03 15:59:54', 5),
('6a4f85a7-32e3-4e1e-93a7-6994eb479374', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '11.00', '2021-03-10 00:10:10', '2021-03-10 00:10:10', 11),
('6aad6152-f75a-49d1-9fa4-87f1d2f4865f', '2b09aefe-0c94-48b3-8ca2-a7bfce4fc229', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '33.00', '2021-02-25 19:33:53', '2021-02-25 19:33:53', 33),
('6b73cb95-c862-455b-ab60-965c15b6eb24', '92ee3773-75ba-4f08-b706-f8febe0670b7', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '4.00', '2021-03-05 18:55:03', '2021-03-05 18:55:03', 4),
('6d819bef-e2ed-4eb4-b385-0163ac33cd06', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '7.00', '2021-03-08 20:43:53', '2021-03-08 20:43:53', 7),
('6de762ea-a0a8-4f09-a9b6-dddd9fb136ef', '2b09aefe-0c94-48b3-8ca2-a7bfce4fc229', '76724e02-ddca-4592-80f3-b06b389013b9', '7.00', '2021-02-25 20:24:07', '2021-02-25 20:24:07', 7),
('6e0de722-cb00-46b6-ace8-388cbade18a9', 'a009d356-1c0d-419a-94dd-86703277a51e', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '6.00', '2021-03-10 08:08:33', '2021-03-10 08:08:33', 6),
('6f78df79-a388-4c5f-9f63-39eb4d1d9a53', '82b15fc4-5448-4afb-ac55-28bf36bb51d6', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '2.00', '2021-03-06 17:59:00', '2021-03-06 17:59:00', 2),
('702705c1-35c0-486d-be68-f79531ad66eb', '92848f56-bffc-415f-923c-63d6a36e6ea6', '5118424b-7611-415a-ae13-a1659bb974c0', '6.00', '2021-03-13 12:52:45', '2021-03-13 12:52:45', 6),
('716c70b2-214e-46fa-b6e4-539cdef3bdbd', 'ebe7fea6-930b-4148-bae9-9194308ad642', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '1.00', '2021-03-13 16:32:53', '2021-03-13 16:32:53', 1),
('71b57f75-7e64-4a07-ab34-505a77d07742', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', '9291a534-8d59-4d95-b604-fdf399791cda', '12.00', '2021-03-06 21:29:41', '2021-03-06 21:29:41', 12),
('71bd18ca-a609-4a5b-b820-01c674f209bf', 'ebe7fea6-930b-4148-bae9-9194308ad642', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '3.00', '2021-03-13 17:53:39', '2021-03-13 17:53:39', 3),
('71d5f0f8-4ac3-48b6-bb92-bfe8f579d682', '6981086d-76e7-4a73-9a1f-6c5481cb1e74', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '0.00', '2021-03-12 16:32:00', '2021-03-12 16:32:00', 0),
('7216a3c0-a10c-4240-a5f6-94f6d59f0aba', '92848f56-bffc-415f-923c-63d6a36e6ea6', '2ac55e0a-9465-497e-a756-0cee16244c10', '1.00', '2021-03-13 13:57:25', '2021-03-13 13:57:25', 1),
('72a467e2-bf71-4d82-bc89-a263925a4044', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', '2ac55e0a-9465-497e-a756-0cee16244c10', '4.00', '2021-03-10 00:21:01', '2021-03-10 00:21:01', 4),
('73f52d1b-47b7-4485-a106-53768c9998b1', '2f721c43-9109-4a83-a61e-9ece679cf6a5', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '10.00', '2021-02-26 02:34:44', '2021-02-26 02:34:44', 10),
('74b290b9-b23a-4794-a8ca-9f1349d14290', 'a009d356-1c0d-419a-94dd-86703277a51e', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '5.00', '2021-03-10 12:12:01', '2021-03-10 12:12:01', 5),
('75048636-b6db-4527-98bf-199c34b4ed73', '220f673c-1745-4333-b528-b3ef7611a3cc', '2ac55e0a-9465-497e-a756-0cee16244c10', '3.00', '2021-02-26 22:29:59', '2021-02-26 22:29:59', 3),
('7738c356-3a46-421d-abd7-5ee5b9aea2c9', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', '2ac55e0a-9465-497e-a756-0cee16244c10', '2.00', '2021-03-08 20:55:23', '2021-03-08 20:55:23', 2),
('77637f30-76c2-4d2e-9b0f-11f3721a9f31', '6981086d-76e7-4a73-9a1f-6c5481cb1e74', '2999216c-4ca4-4e01-b37d-6a24879fa329', '9.00', '2021-03-12 13:59:18', '2021-03-12 13:59:18', 9),
('776a442f-29a6-4c9f-b894-2558b1055a0f', '7e62c193-2517-4a7e-889b-a1f8c7860d72', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '8.00', '2021-03-07 11:34:51', '2021-03-07 11:34:51', 8),
('77c12783-3c44-4bce-920d-b4887d8f295b', '1b26d1a3-f44b-4ade-9bb0-0f4d3006f26a', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '9.00', '2021-04-28 11:45:21', '2021-04-28 11:45:21', 9),
('78252831-e883-483e-8408-8adf46c1826a', 'e3b0ed30-a7a6-41a0-8334-747443b9e372', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '12.00', '2021-02-23 18:40:45', '2021-02-23 18:40:45', 12),
('783f1198-7aca-4265-acf9-f46a68730387', 'bdc0d91d-a94d-413f-8980-92e61ed0cf40', '76724e02-ddca-4592-80f3-b06b389013b9', '5.00', '2021-03-12 13:19:51', '2021-03-12 13:19:51', 5),
('78cf8776-b269-4aac-90f2-abbcffcedb28', '7e62c193-2517-4a7e-889b-a1f8c7860d72', '9291a534-8d59-4d95-b604-fdf399791cda', '7.00', '2021-03-07 11:57:18', '2021-03-07 11:57:18', 7),
('7920bfd2-943c-4f7b-8f53-3a4c7e90fa59', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', '9a2a718e-7e68-4837-aa55-68febbc0136e', '5.00', '2021-03-13 22:24:11', '2021-03-13 22:24:11', 5),
('79a89300-8bc6-4b1d-9372-0fc37600607c', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '6.00', '2021-03-10 00:03:14', '2021-03-10 00:03:14', 6),
('7a8c5ff8-2c20-4d5e-b6da-2de376928cd8', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '4.00', '2021-03-15 21:53:14', '2021-03-15 21:53:14', 4),
('7b4114d0-da6a-4894-8829-b5b4e287264d', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', '9a2a718e-7e68-4837-aa55-68febbc0136e', '7.00', '2021-02-26 00:32:03', '2021-02-26 00:32:03', 7),
('7b7f35fb-ffac-47c0-80e1-651eb191e3d0', '92848f56-bffc-415f-923c-63d6a36e6ea6', '9291a534-8d59-4d95-b604-fdf399791cda', '8.00', '2021-03-13 13:33:33', '2021-03-13 13:33:33', 8),
('7cf097df-ecfa-469f-a425-c6d8d3022a38', 'a70d4a0a-d8f3-498d-b805-0ff9511a9bd4', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '0.00', '2021-03-03 23:36:20', '2021-03-03 23:36:20', 0),
('7d56354c-c9fa-4a6e-9d3e-21cccf5b2e34', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '11.00', '2021-03-14 23:56:44', '2021-03-14 23:56:44', 11),
('7d6ce5b1-3c03-4616-9289-e985f4491844', 'c96cf72b-0c18-4509-952e-30a7d8d178b8', '453208b8-3ea2-4a94-9d91-002fd97bffda', '13.00', '2021-03-21 18:17:58', '2021-03-21 18:17:58', 13),
('7d844bd0-de12-4676-8cb6-f84b243f1a00', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '4.00', '2021-03-10 01:08:28', '2021-03-10 01:08:28', 4),
('7e658e7a-d04f-4d69-adcc-9ac8316797ee', '1f8b4446-bd59-4e75-9c13-06f7e8f8d7dc', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '8.00', '2021-02-22 19:44:40', '2021-02-22 19:44:40', 8),
('7fac8a6b-473f-47bf-82f8-3b4b60e7b42e', '2b09aefe-0c94-48b3-8ca2-a7bfce4fc229', '65e408fc-4ae6-4c52-9314-723639e82a04', '6.00', '2021-02-25 19:39:59', '2021-02-25 19:39:59', 6),
('7ffe246b-072b-4997-aec9-ac0306b06df6', 'bdc0d91d-a94d-413f-8980-92e61ed0cf40', '659ba20a-23ef-46e3-937b-fe2413577197', '11.00', '2021-03-12 13:07:43', '2021-03-12 13:07:43', 11),
('81d0f9a8-94e8-4aa7-99df-b8c0ef94f831', '948da038-3ce9-4b15-8ba7-bfc860504c38', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '6.00', '2021-03-04 12:50:16', '2021-03-04 12:50:16', 6),
('827c3d0a-9495-47be-9d4d-3e3519cd31f7', 'bbd27792-79f5-42eb-9d72-c7331891ad61', 'aec9a111-5cf9-4bb7-9e2d-afac7e717cdb', '12.00', '2021-02-25 23:57:56', '2021-02-25 23:57:56', 12),
('83324325-a3f3-41ea-9358-8c3fc92bdfa3', 'bbd27792-79f5-42eb-9d72-c7331891ad61', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '12.00', '2021-02-25 23:15:02', '2021-02-25 23:15:02', 12),
('84866a14-6056-46d1-8b15-13d5bb4ccad9', '948da038-3ce9-4b15-8ba7-bfc860504c38', '9a2a718e-7e68-4837-aa55-68febbc0136e', '3.00', '2021-03-04 12:07:42', '2021-03-04 12:07:42', 3),
('855d823f-015f-457a-beb3-37dad7ecea02', '7e62c193-2517-4a7e-889b-a1f8c7860d72', '2ac55e0a-9465-497e-a756-0cee16244c10', '6.00', '2021-03-07 11:07:16', '2021-03-07 11:07:16', 6),
('85b84ac9-6b05-49ae-9d68-c2bfbd4de3c1', 'ebe7fea6-930b-4148-bae9-9194308ad642', '9291a534-8d59-4d95-b604-fdf399791cda', '6.00', '2021-03-13 17:06:56', '2021-03-13 17:06:56', 6),
('89273a66-3913-4eb4-a0b4-9a3b4b2fe1a2', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '5.00', '2021-02-26 16:16:54', '2021-02-26 16:16:54', 5),
('893e67d2-fecb-464e-b1ac-2279d60f8319', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '10.00', '2021-03-06 22:09:05', '2021-03-06 22:09:05', 10),
('8a61e6c1-e9ad-4277-998e-543c49628b70', '92848f56-bffc-415f-923c-63d6a36e6ea6', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '4.00', '2021-03-13 13:43:01', '2021-03-13 13:43:01', 4),
('8a6b6908-fbc9-4e36-b56b-cc31963403a3', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', '5118424b-7611-415a-ae13-a1659bb974c0', '7.00', '2021-03-03 11:56:19', '2021-03-03 11:56:19', 7),
('8c2c41b5-af89-4713-ab14-894040d249a2', '0f77b32f-3f62-4c93-9a10-87fcdf680983', '316d30e3-6061-4be0-af33-f4ee4aef3bfb', '12.00', '2021-03-21 17:13:10', '2021-03-21 17:13:10', 1),
('8d4ed69c-cc5b-4fa0-a475-84da6ea0458e', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', '9a2a718e-7e68-4837-aa55-68febbc0136e', '3.00', '2021-03-05 14:29:43', '2021-03-05 14:29:43', 3),
('8dc33d2c-1940-4a55-94e8-4c54e5066a6f', '34938ee7-128a-4d15-b577-0d2b744028f3', '9a2a718e-7e68-4837-aa55-68febbc0136e', '4.00', '2021-03-04 17:04:46', '2021-03-04 17:04:46', 4),
('8dc7df32-98ba-4e5b-b5db-11bd030663c5', '220f673c-1745-4333-b528-b3ef7611a3cc', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '10.00', '2021-02-26 22:44:55', '2021-02-26 22:44:55', 10),
('910afa98-701c-4491-977b-1ee049c251e9', 'e087d4db-d77d-421b-8692-4edf545b66ae', '76724e02-ddca-4592-80f3-b06b389013b9', '6.00', '2021-03-22 12:12:38', '2021-03-22 12:12:38', 6),
('9111d710-0325-4706-833e-02983cdce209', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', '9291a534-8d59-4d95-b604-fdf399791cda', '11.00', '2021-03-04 22:15:38', '2021-03-04 22:15:38', 11),
('91492d08-e3ae-4425-b3cc-abbc6579d7a2', 'd0c32815-d8cc-458e-af68-bb133d9dbf50', '659ba20a-23ef-46e3-937b-fe2413577197', '13.00', '2021-03-22 00:22:08', '2021-03-22 00:22:08', 13),
('919bee84-2ec1-48c7-a266-ca6a67cc2d65', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '10.00', '2021-02-25 23:05:11', '2021-02-25 23:05:11', 10),
('91c1c475-94e1-498e-890a-748dd674a4df', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', '5118424b-7611-415a-ae13-a1659bb974c0', '8.00', '2021-02-25 22:29:18', '2021-02-25 22:29:18', 8),
('9200d064-8e63-4673-90a9-18cacd31a652', '220f673c-1745-4333-b528-b3ef7611a3cc', '9a2a718e-7e68-4837-aa55-68febbc0136e', '8.00', '2021-02-27 10:32:54', '2021-02-27 10:32:54', 8),
('9245ef84-1b96-4b9b-a8d0-5e430912b891', '0f77b32f-3f62-4c93-9a10-87fcdf680983', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '12.00', '2021-03-21 17:23:42', '2021-03-21 17:23:42', 12),
('9261ac45-b276-4385-9e53-b843bc2703a7', '92ee3773-75ba-4f08-b706-f8febe0670b7', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '11.00', '2021-03-05 19:18:53', '2021-03-05 19:18:53', 11),
('92b85545-d5af-4f2a-bf5e-644d6d930b12', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', '2ac55e0a-9465-497e-a756-0cee16244c10', '10.00', '2021-03-04 21:29:02', '2021-03-04 21:29:02', 10),
('933c1a40-49d6-44ae-b6d0-3cf2db02956f', '2f721c43-9109-4a83-a61e-9ece679cf6a5', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '7.00', '2021-02-26 02:24:44', '2021-02-26 02:24:44', 7),
('93b50924-2928-4284-999e-5c4a3d3fde10', '92848f56-bffc-415f-923c-63d6a36e6ea6', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '4.00', '2021-03-13 13:19:39', '2021-03-13 13:19:39', 4),
('94d42fa3-d5ef-4826-9fee-3b54d6413f94', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '9.00', '2021-03-05 14:20:18', '2021-03-05 14:20:18', 9),
('95ac891b-21ec-42f6-baea-81f78557b75d', 'e3b0ed30-a7a6-41a0-8334-747443b9e372', 'f489024e-a2a8-4590-8a17-5824599bc89e', '5.00', '2021-02-23 18:02:30', '2021-02-23 18:02:30', 5),
('95f43c4c-a263-463d-bb7f-5fcfdfab757c', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '10.00', '2021-03-04 21:53:46', '2021-03-04 21:53:46', 10),
('96d5996b-7d45-4c36-8f2d-fa0e62f957bb', 'bdc0d91d-a94d-413f-8980-92e61ed0cf40', '65e408fc-4ae6-4c52-9314-723639e82a04', '8.00', '2021-03-12 13:15:39', '2021-03-12 13:15:39', 8),
('96f21c7d-03ea-4b31-8302-c60b54e101e2', '220f673c-1745-4333-b528-b3ef7611a3cc', '5118424b-7611-415a-ae13-a1659bb974c0', '8.00', '2021-02-26 23:16:28', '2021-02-26 23:16:28', 8),
('97f02187-a40e-422b-8fdb-9fe357af4935', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', '5118424b-7611-415a-ae13-a1659bb974c0', '6.00', '2021-03-08 20:34:05', '2021-03-08 20:34:05', 6),
('9830945f-f051-47ad-86e6-24b8ee3608ee', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', '9a2a718e-7e68-4837-aa55-68febbc0136e', '3.00', '2021-03-07 00:59:07', '2021-03-07 00:59:07', 3),
('994c66e6-af80-4e93-85bc-beb348449a33', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', '9291a534-8d59-4d95-b604-fdf399791cda', '7.00', '2021-03-03 23:18:14', '2021-03-03 23:18:14', 7),
('9953bda8-df27-44ff-9ec8-37913c81d4d4', 'e92d14ca-4a02-4e66-9944-03972086617f', '76724e02-ddca-4592-80f3-b06b389013b9', '7.00', '2021-02-23 17:16:10', '2021-02-23 17:16:10', 7),
('9966b035-7770-484d-a73d-507ed1a58427', '63ada4ff-f891-429c-a001-b0b1605d9d90', '659ba20a-23ef-46e3-937b-fe2413577197', '1.00', '2021-03-22 12:33:48', '2021-03-22 12:33:48', 1),
('9ad39cbf-f061-402e-824e-6842f0e23783', 'a009d356-1c0d-419a-94dd-86703277a51e', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '12.00', '2021-03-10 10:52:44', '2021-03-10 10:52:44', 12),
('9b021d22-cac7-4694-ad43-e113b4091917', '7e62c193-2517-4a7e-889b-a1f8c7860d72', '9a2a718e-7e68-4837-aa55-68febbc0136e', '6.00', '2021-03-07 12:03:56', '2021-03-07 12:03:56', 6),
('9b49287e-27eb-45fe-8fef-7b95f475df6b', 'd0c32815-d8cc-458e-af68-bb133d9dbf50', '316d30e3-6061-4be0-af33-f4ee4aef3bfb', '12.00', '2021-03-21 23:55:31', '2021-03-21 23:55:31', 1),
('9c1424e3-1895-451f-bde8-4dfe22700e42', '3e3615e9-2d35-4f11-b279-113315965061', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '4.00', '2021-03-03 10:08:11', '2021-03-03 10:08:11', 4),
('9d018333-05d4-487e-b8f4-1fe7be6642a0', '3e3615e9-2d35-4f11-b279-113315965061', '2ac55e0a-9465-497e-a756-0cee16244c10', '4.00', '2021-03-03 09:39:19', '2021-03-03 09:39:19', 4),
('9dcec88e-8f6d-4cca-8855-99f553dd72a9', 'd0c32815-d8cc-458e-af68-bb133d9dbf50', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '14.00', '2021-03-22 00:44:12', '2021-03-22 00:44:12', 14),
('9e321b9e-f11b-4649-b5b7-04324cdd84c6', 'bdc0d91d-a94d-413f-8980-92e61ed0cf40', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '11.00', '2021-03-12 13:28:57', '2021-03-12 13:28:57', 11),
('9e7c5141-c7f9-43b0-b661-3e4a450e6207', '1f8b4446-bd59-4e75-9c13-06f7e8f8d7dc', '76724e02-ddca-4592-80f3-b06b389013b9', '2.00', '2021-02-22 18:57:03', '2021-02-22 18:57:03', 2),
('a18dfc5a-f2a3-459a-a847-85479891a120', '1b26d1a3-f44b-4ade-9bb0-0f4d3006f26a', '9291a534-8d59-4d95-b604-fdf399791cda', '7.00', '2021-04-07 13:43:08', '2021-04-07 13:43:08', 7),
('a274f5d8-642c-445c-85ab-75aebf383436', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', '137cb6ee-d459-4a0d-956d-94b26c97a592', '7.00', '2021-03-09 19:46:53', '2021-03-09 19:46:53', 7),
('a4f36e27-1379-4aca-8db6-de05659286fd', '2f721c43-9109-4a83-a61e-9ece679cf6a5', '9a2a718e-7e68-4837-aa55-68febbc0136e', '7.00', '2021-02-26 01:31:55', '2021-02-26 01:31:55', 7),
('a576fdab-edec-4fd8-a247-12b5b10d1846', '2f721c43-9109-4a83-a61e-9ece679cf6a5', '9291a534-8d59-4d95-b604-fdf399791cda', '3.00', '2021-02-25 18:09:44', '2021-02-25 18:09:44', 3),
('a612536f-9c9f-4e54-922d-110465e9ee57', '92ee3773-75ba-4f08-b706-f8febe0670b7', '5118424b-7611-415a-ae13-a1659bb974c0', '8.00', '2021-03-05 10:30:49', '2021-03-05 10:30:49', 8),
('a68856c3-619b-463c-96b6-ef2ca47e8dff', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '10.00', '2021-03-06 22:17:51', '2021-03-06 22:17:51', 10),
('a7397365-1a86-4cb6-809a-590b600dfbee', '1f8b4446-bd59-4e75-9c13-06f7e8f8d7dc', '659ba20a-23ef-46e3-937b-fe2413577197', '9.00', '2021-02-22 19:55:39', '2021-02-22 19:55:39', 9),
('a789850b-224e-45dd-b3b7-4dd54bb59f21', '220f673c-1745-4333-b528-b3ef7611a3cc', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '9.00', '2021-02-27 11:19:36', '2021-02-27 11:19:36', 9),
('aa52b3b2-788d-4e67-b38a-da1ce1a35e7a', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '5.00', '2021-03-03 17:40:53', '2021-03-03 17:40:53', 5),
('ab587e2b-ea2e-427f-bfaf-1e53f070f24f', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', '9291a534-8d59-4d95-b604-fdf399791cda', '7.00', '2021-03-07 01:26:18', '2021-03-07 01:26:18', 7),
('abbaf0d7-f55d-49d0-9a31-25e18fc3b10d', '0f77b32f-3f62-4c93-9a10-87fcdf680983', '65e408fc-4ae6-4c52-9314-723639e82a04', '6.00', '2021-03-21 17:12:19', '2021-03-21 17:12:19', 6),
('ad20d447-c690-4a01-accb-6b7d281e3356', 'c96cf72b-0c18-4509-952e-30a7d8d178b8', 'a66a1b4a-c5ce-47db-afad-8335889439f8', '8.00', '2021-03-21 19:13:06', '2021-03-21 19:13:06', 8),
('ad29b155-c29d-455c-af51-957c860c293b', '45576eaa-11e5-4633-ab15-9a63958ffafd', '9a2a718e-7e68-4837-aa55-68febbc0136e', '5.00', '2021-03-10 19:58:41', '2021-03-10 19:58:41', 5),
('ad3727cb-c8de-44ba-ba03-a5bd3641ed78', '45576eaa-11e5-4633-ab15-9a63958ffafd', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '11.00', '2021-03-10 19:16:37', '2021-03-10 19:16:37', 11),
('ade984b6-c6b5-4041-8122-a3fd5070cd64', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', '9a2a718e-7e68-4837-aa55-68febbc0136e', '8.00', '2021-03-06 20:57:24', '2021-03-06 20:57:24', 8),
('ae13d9b4-7455-4d4c-b037-d08ee341411e', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', '2ac55e0a-9465-497e-a756-0cee16244c10', '6.00', '2021-03-11 15:34:32', '2021-03-11 15:34:32', 6),
('ae9d7cca-8b5f-4709-a198-51ca2117da3a', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '9.00', '2021-03-14 23:17:21', '2021-03-14 23:17:21', 9),
('af60d054-104f-42d9-8de4-807f5267cc7c', '3e3615e9-2d35-4f11-b279-113315965061', '9a2a718e-7e68-4837-aa55-68febbc0136e', '2.00', '2021-03-03 10:11:40', '2021-03-03 10:11:40', 2),
('af813db1-9f8d-4984-945b-d938ecb807d0', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', '137cb6ee-d459-4a0d-956d-94b26c97a592', '5.00', '2021-03-04 21:37:20', '2021-03-04 21:37:20', 5),
('b2b6dbac-9401-4f43-ac26-30631d763f9d', 'b99a5b98-84fb-47da-8a07-636e05c4fd85', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '10.00', '2021-03-06 20:46:37', '2021-03-06 20:46:37', 10),
('b321bf79-0b84-4dea-9b0c-6458fb9340e9', 'c96cf72b-0c18-4509-952e-30a7d8d178b8', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '4.00', '2021-03-21 18:45:39', '2021-03-21 18:45:39', 4),
('b388c866-f812-4839-bc41-34373ffc0a0e', '63ada4ff-f891-429c-a001-b0b1605d9d90', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '17.00', '2021-03-22 12:31:18', '2021-03-22 12:31:18', 17),
('b4552247-87e2-4b0f-98d6-4179ef812cc5', '92848f56-bffc-415f-923c-63d6a36e6ea6', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '5.00', '2021-03-13 13:36:52', '2021-03-13 13:36:52', 5),
('b50a659e-b392-4dc1-a945-c0560c171009', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '15.00', '2021-03-04 22:07:13', '2021-03-04 22:07:13', 15),
('b53427a6-c92d-43d9-a74d-e7986435e7b7', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '3.00', '2021-03-14 23:10:40', '2021-03-14 23:10:40', 3),
('b58c7170-91cd-4873-b5fc-09b781bdcb32', '82b15fc4-5448-4afb-ac55-28bf36bb51d6', '9a2a718e-7e68-4837-aa55-68febbc0136e', '3.00', '2021-03-06 17:46:25', '2021-03-06 17:46:25', 3),
('b5b9d0b1-2f89-4e5c-8abd-566b00a887fc', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', '9291a534-8d59-4d95-b604-fdf399791cda', '4.00', '2021-03-15 00:14:48', '2021-03-15 00:14:48', 4),
('b61529ba-a6fb-4ee5-9a71-0415bc527f77', '2f721c43-9109-4a83-a61e-9ece679cf6a5', '137cb6ee-d459-4a0d-956d-94b26c97a592', '9.00', '2021-02-26 02:31:27', '2021-02-26 02:31:27', 9),
('b6f7c664-5cca-42b5-9b46-0ca4397392ac', 'e3b0ed30-a7a6-41a0-8334-747443b9e372', '2999216c-4ca4-4e01-b37d-6a24879fa329', '12.00', '2021-02-23 18:54:34', '2021-02-23 18:54:34', 12),
('b76daae5-e7c6-4b9b-a771-b4c7d75baf23', '34938ee7-128a-4d15-b577-0d2b744028f3', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '5.00', '2021-03-04 17:32:28', '2021-03-04 17:32:28', 5),
('b7945cb6-ea55-4116-89e0-d4dc52ea51fd', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '11.00', '2021-03-11 15:20:10', '2021-03-11 15:20:10', 11),
('b7f5e17c-10e2-4d29-a6ea-0f5e0e5e32ca', '3e3615e9-2d35-4f11-b279-113315965061', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '4.00', '2021-03-03 09:52:19', '2021-03-03 09:52:19', 4),
('b8220fb9-3b1b-4f87-a36f-4afc8320ea17', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '4.00', '2021-03-04 12:34:13', '2021-03-04 12:34:13', 4),
('b829443c-ee62-42e8-ad0e-6daa6792d7fc', 'a009d356-1c0d-419a-94dd-86703277a51e', '9291a534-8d59-4d95-b604-fdf399791cda', '6.00', '2021-03-10 08:57:55', '2021-03-10 08:57:55', 6),
('b97f146e-46b2-48f4-a894-e257919b29ed', '220f673c-1745-4333-b528-b3ef7611a3cc', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '9.00', '2021-02-27 10:54:01', '2021-02-27 10:54:01', 9),
('b9a2f764-740f-42b4-bcc4-0d9fce5939a1', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', '5118424b-7611-415a-ae13-a1659bb974c0', '10.00', '2021-03-05 13:15:48', '2021-03-05 13:15:48', 10),
('b9cc897a-efeb-444c-be30-33125c618342', '45576eaa-11e5-4633-ab15-9a63958ffafd', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '14.00', '2021-03-10 20:37:01', '2021-03-10 20:37:01', 14),
('b9e219d7-8864-49fd-b888-7510c0820b9f', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '11.00', '2021-03-05 13:24:54', '2021-03-05 13:24:54', 11),
('ba02e1bf-4847-4641-961a-9a6542268fb0', '45576eaa-11e5-4633-ab15-9a63958ffafd', '9291a534-8d59-4d95-b604-fdf399791cda', '13.00', '2021-03-10 21:02:38', '2021-03-10 21:02:38', 13),
('ba7c7507-9f7a-4472-94bd-d5216e5b554c', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '3.00', '2021-03-03 11:33:24', '2021-03-03 11:33:24', 3),
('bacc324c-a247-4787-85e2-901e12205192', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', '2ac55e0a-9465-497e-a756-0cee16244c10', '5.00', '2021-03-14 23:49:25', '2021-03-14 23:49:25', 5),
('bb1a7f25-a518-4f70-9367-982d8966483d', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '7.00', '2021-03-15 21:36:31', '2021-03-15 21:36:31', 7),
('bb2468d7-85d9-42ab-ab00-30b77ce5cd6c', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '2.00', '2021-03-09 20:38:18', '2021-03-09 20:38:18', 2),
('bceb8bc0-ccb6-43b6-8b36-1f31d8f04850', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '6.00', '2021-03-15 22:57:01', '2021-03-15 22:57:01', 6),
('bcfb2c25-ba4d-4681-91d0-44b95d05284a', 'c96cf72b-0c18-4509-952e-30a7d8d178b8', '2999216c-4ca4-4e01-b37d-6a24879fa329', '9.00', '2021-03-21 19:43:01', '2021-03-21 19:43:01', 9),
('bf6db24e-eb56-473b-a0db-a9f3cfe4ff5e', '560144b9-a400-431c-9b9a-a52f3c685887', '65e408fc-4ae6-4c52-9314-723639e82a04', '6.00', '2021-02-22 13:47:01', '2021-02-22 13:47:01', 6),
('bf91e2cf-b54a-4449-98c3-d9e0b4054b2e', '7e62c193-2517-4a7e-889b-a1f8c7860d72', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '6.00', '2021-03-07 11:43:05', '2021-03-07 11:43:05', 6),
('c1116a8c-332d-49a7-8fe6-969ff3bde0c2', '1b26d1a3-f44b-4ade-9bb0-0f4d3006f26a', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '4.00', '2021-04-28 15:24:51', '2021-04-28 15:24:51', 4),
('c14b5bd2-5c88-4492-baa6-0ff3135e4280', '1b26d1a3-f44b-4ade-9bb0-0f4d3006f26a', '5118424b-7611-415a-ae13-a1659bb974c0', '1.00', '2021-04-07 13:27:50', '2021-04-07 13:27:50', 1),
('c1a32f8a-646e-45b1-ae42-4a8a242d1046', 'e92d14ca-4a02-4e66-9944-03972086617f', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '33.00', '2021-02-23 16:43:24', '2021-02-23 16:43:24', 33),
('c248586d-5106-4f63-9109-76e7254a4d76', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', '137cb6ee-d459-4a0d-956d-94b26c97a592', '3.00', '2021-02-26 18:46:29', '2021-02-26 18:46:29', 3),
('c62568fa-7e26-4ac8-a696-6187b0c88454', '9c05cc1d-cf33-4a1f-a776-b3fceb769d24', '137cb6ee-d459-4a0d-956d-94b26c97a592', '7.00', '2021-03-09 15:47:51', '2021-03-09 15:47:51', 7);
INSERT INTO `quiz_scores` (`id`, `user_id`, `exam_id`, `computed_score`, `created_at`, `updated_at`, `actual_score`) VALUES
('c62bf6ad-f65f-4767-bb96-b545f4232098', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '11.00', '2021-03-04 12:12:26', '2021-03-04 12:12:26', 11),
('c63c5c18-a2cc-4cfc-b5a6-13f8f52e07d5', '7e62c193-2517-4a7e-889b-a1f8c7860d72', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '10.00', '2021-03-07 12:12:20', '2021-03-07 12:12:20', 10),
('c650590c-d17b-4310-9b2b-539dbfa4bc8b', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', '9a2a718e-7e68-4837-aa55-68febbc0136e', '1.00', '2021-03-06 11:23:18', '2021-03-06 11:23:18', 1),
('c6f89fd8-4fff-4646-896e-4f5cf7cb0d0d', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', '5118424b-7611-415a-ae13-a1659bb974c0', '9.00', '2021-03-14 23:38:54', '2021-03-14 23:38:54', 9),
('c80bc289-4499-4579-8cfe-db23bb3294fd', '92ee3773-75ba-4f08-b706-f8febe0670b7', '2ac55e0a-9465-497e-a756-0cee16244c10', '5.00', '2021-03-05 18:38:07', '2021-03-05 18:38:07', 5),
('c87e9781-896f-40e3-afc7-752c4db9f935', '92ee3773-75ba-4f08-b706-f8febe0670b7', '137cb6ee-d459-4a0d-956d-94b26c97a592', '7.00', '2021-03-05 10:08:55', '2021-03-05 10:08:55', 7),
('c8e5f0eb-daf7-4e4c-8646-9a797eb7ef6a', '6e8ea0f6-8977-4b34-9319-cf77add8dd26', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '4.00', '2021-03-23 18:12:49', '2021-03-23 18:12:49', 4),
('c932f637-428d-45d0-bc02-3494849d0850', 'a009d356-1c0d-419a-94dd-86703277a51e', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '5.00', '2021-03-10 10:38:29', '2021-03-10 10:38:29', 5),
('c9869a8d-f358-44db-bd04-4bed482aa7da', 'e3b0ed30-a7a6-41a0-8334-747443b9e372', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '13.00', '2021-02-23 18:25:14', '2021-02-23 18:25:14', 13),
('cbeba911-e269-4a65-a601-c0f70df8b61c', '8e92921e-2e03-4bab-8c3b-e14a1e1ac055', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '13.00', '2021-03-09 20:58:08', '2021-03-09 20:58:08', 13),
('cd835dca-23d5-43dd-a878-6cb21b300c4d', '220f673c-1745-4333-b528-b3ef7611a3cc', '137cb6ee-d459-4a0d-956d-94b26c97a592', '9.00', '2021-02-27 11:09:28', '2021-02-27 11:09:28', 9),
('cdd04ea0-75bd-4d9a-b838-236a3091c73e', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', '2ac55e0a-9465-497e-a756-0cee16244c10', '4.00', '2021-03-10 00:21:01', '2021-03-10 00:21:01', 4),
('ce20a1bb-7ee9-4021-b54f-8d556caadbaa', '45576eaa-11e5-4633-ab15-9a63958ffafd', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '10.00', '2021-03-10 20:18:43', '2021-03-10 20:18:43', 10),
('d04e3f47-3833-4256-baa9-9e0199631388', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', '137cb6ee-d459-4a0d-956d-94b26c97a592', '7.00', '2021-03-05 14:51:41', '2021-03-05 14:51:41', 7),
('d223b17d-96b5-415c-93b1-1576889f2283', '92848f56-bffc-415f-923c-63d6a36e6ea6', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '4.00', '2021-03-13 13:12:22', '2021-03-13 13:12:22', 4),
('d33f29f7-2ba3-4a38-aada-4c7d4f2af7d5', '220f673c-1745-4333-b528-b3ef7611a3cc', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '10.00', '2021-02-26 22:18:57', '2021-02-26 22:18:57', 10),
('d4ab730a-f59f-459a-896e-8dd13d388e4c', 'e3b0ed30-a7a6-41a0-8334-747443b9e372', '54a0e622-cff8-4285-9e01-d48dd34ba7fa', '13.00', '2021-02-23 19:39:33', '2021-02-23 19:39:33', 13),
('d7854dd6-bc1d-4e2b-9b9a-5d64954288a2', '0f77b32f-3f62-4c93-9a10-87fcdf680983', '659ba20a-23ef-46e3-937b-fe2413577197', '9.00', '2021-03-21 16:40:05', '2021-03-21 16:40:05', 9),
('d7e59c0d-c1c8-473f-81ba-2da0c10410aa', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '9.00', '2021-03-05 14:20:18', '2021-03-05 14:20:18', 9),
('d82548d2-a9ba-4774-8807-39fce61c4a17', 'ebe7fea6-930b-4148-bae9-9194308ad642', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '6.00', '2021-03-13 17:34:11', '2021-03-13 17:34:11', 6),
('d8930290-220d-43e7-845e-d9dbd8848d11', 'bdc0d91d-a94d-413f-8980-92e61ed0cf40', '316d30e3-6061-4be0-af33-f4ee4aef3bfb', '0.00', '2021-03-12 12:38:31', '2021-03-12 12:38:31', 0),
('d93623cc-8410-4e35-bd56-9d683aebbe5c', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', '137cb6ee-d459-4a0d-956d-94b26c97a592', '4.00', '2021-03-04 12:23:46', '2021-03-04 12:23:46', 4),
('d9389a77-c830-4928-ada1-97f96e8bb151', 'ebe7fea6-930b-4148-bae9-9194308ad642', '5118424b-7611-415a-ae13-a1659bb974c0', '7.00', '2021-03-13 15:52:17', '2021-03-13 15:52:17', 7),
('d9fbba3e-1b24-4c71-afa4-1f112e724ce0', '79fd5d5c-9fea-4510-80cb-531b0733bdaf', '659ba20a-23ef-46e3-937b-fe2413577197', '8.00', '2021-03-23 04:06:36', '2021-03-23 04:06:36', 8),
('dafb840e-506a-4161-97ae-113cc5a53b04', '948da038-3ce9-4b15-8ba7-bfc860504c38', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '7.00', '2021-03-04 11:21:58', '2021-03-04 11:21:58', 7),
('dcb8214f-5c1c-4467-ac11-a466bce21f3d', 'e087d4db-d77d-421b-8692-4edf545b66ae', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '10.00', '2021-03-22 12:08:37', '2021-03-22 12:08:37', 10),
('dd462d47-a044-4b6c-950b-cb3ef55c343a', '3e3615e9-2d35-4f11-b279-113315965061', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '8.00', '2021-03-03 10:30:36', '2021-03-03 10:30:36', 8),
('dd74e12a-79a2-4f05-8836-946f80645600', '9a8e8dd5-5638-4d73-8364-d78df2855ac3', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '11.00', '2021-03-03 15:48:46', '2021-03-03 15:48:46', 11),
('df1e3d70-afb9-446e-b798-a99203ee8db6', 'c96cf72b-0c18-4509-952e-30a7d8d178b8', 'f489024e-a2a8-4590-8a17-5824599bc89e', '8.00', '2021-03-21 20:07:46', '2021-03-21 20:07:46', 8),
('dff090c1-84b6-4c72-b079-4de652786161', 'e087d4db-d77d-421b-8692-4edf545b66ae', '316d30e3-6061-4be0-af33-f4ee4aef3bfb', '12.00', '2021-03-22 11:00:51', '2021-03-22 11:00:51', 1),
('e0afd7f6-455c-4b8a-935b-07a10cbe4502', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '5.00', '2021-02-26 00:18:45', '2021-02-26 00:18:45', 5),
('e0d6c743-5394-4bc9-b2c9-a76af697e80c', '0a8573c4-e4a0-46a5-be15-cc6cf2337468', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '14.00', '2021-03-10 01:32:34', '2021-03-10 01:32:34', 14),
('e0e077a4-7ba0-4308-872f-bf338da26eb9', 'e087d4db-d77d-421b-8692-4edf545b66ae', '677ec257-eaf6-438f-9897-4efc22c379a5', '8.00', '2021-03-22 11:55:21', '2021-03-22 11:55:21', 8),
('e305f50f-53f0-44e2-be45-4a33668265a2', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '9.00', '2021-03-04 21:07:47', '2021-03-04 21:07:47', 9),
('e338e452-2395-438f-b106-4b630c9bbdfa', 'a009d356-1c0d-419a-94dd-86703277a51e', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '8.00', '2021-03-11 08:43:31', '2021-03-11 08:43:31', 8),
('e34a5f4e-6cc7-4e51-af63-1a7250903754', '2b09aefe-0c94-48b3-8ca2-a7bfce4fc229', '659ba20a-23ef-46e3-937b-fe2413577197', '8.00', '2021-02-25 20:03:37', '2021-02-25 20:03:37', 8),
('e5d58c79-46a4-42db-a95e-493cca0270ea', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '5.00', '2021-03-06 13:11:15', '2021-03-06 13:11:15', 5),
('e5db749e-9a69-4633-b620-092079d92800', 'edbda6fa-5005-4e1e-b441-ed4fe4097c43', '5118424b-7611-415a-ae13-a1659bb974c0', '10.00', '2021-03-13 22:13:27', '2021-03-13 22:13:27', 10),
('e65a3e31-b38c-4c9c-b834-ae1da9b70c56', 'ebe7fea6-930b-4148-bae9-9194308ad642', '2ac55e0a-9465-497e-a756-0cee16244c10', '7.00', '2021-03-13 17:44:36', '2021-03-13 17:44:36', 7),
('ea36b74e-117f-4ab5-892a-b2e8a899726b', '7e62c193-2517-4a7e-889b-a1f8c7860d72', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '11.00', '2021-03-07 12:19:34', '2021-03-07 12:19:34', 11),
('ea7deebb-8ad4-4a14-81d6-709ca5bf4a18', 'ebe7fea6-930b-4148-bae9-9194308ad642', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '7.00', '2021-03-13 16:51:50', '2021-03-13 16:51:50', 7),
('eadc00d1-9b5d-416d-982c-2a471d6d1eae', '1f8b4446-bd59-4e75-9c13-06f7e8f8d7dc', '65e408fc-4ae6-4c52-9314-723639e82a04', '8.00', '2021-02-22 19:06:11', '2021-02-22 19:06:11', 8),
('eb709a37-1eb5-4221-a004-c9a5ee0eda2b', '3e3615e9-2d35-4f11-b279-113315965061', '137cb6ee-d459-4a0d-956d-94b26c97a592', '6.00', '2021-03-03 09:29:32', '2021-03-03 09:29:32', 6),
('eb81ae42-0db3-48ff-951f-6b21e469fa51', '34938ee7-128a-4d15-b577-0d2b744028f3', '6912b5d7-3aa7-4745-8226-9fc8d6e6c7da', '8.00', '2021-03-04 17:49:43', '2021-03-04 17:49:43', 8),
('ebaeb82e-0e8a-4e13-aa7a-1aac40aab407', '1973fb08-911a-4c76-a2d1-8be79dfaa1cf', '137cb6ee-d459-4a0d-956d-94b26c97a592', '6.00', '2021-03-06 17:02:28', '2021-03-06 17:02:28', 6),
('ec8be491-3878-4c26-b227-3b8ea74b135b', '4cfa70d4-3581-4d43-91b3-36fdaaeca05b', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '7.00', '2021-03-06 11:44:40', '2021-03-06 11:44:40', 7),
('edf9ac72-d5d2-4c0e-87c5-c549311ae22c', '2b09aefe-0c94-48b3-8ca2-a7bfce4fc229', '677ec257-eaf6-438f-9897-4efc22c379a5', '8.00', '2021-02-25 20:20:50', '2021-02-25 20:20:50', 8),
('ee6d16a3-fdce-492c-b808-91e7a4998391', '34938ee7-128a-4d15-b577-0d2b744028f3', '9291a534-8d59-4d95-b604-fdf399791cda', '4.00', '2021-03-04 16:53:05', '2021-03-04 16:53:05', 4),
('ef78e678-b26a-4365-817d-e381b4a9c964', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '6.00', '2021-02-25 23:16:01', '2021-02-25 23:16:01', 6),
('efb0bea0-f066-4285-bdad-dedcdc9480bb', 'c96cf72b-0c18-4509-952e-30a7d8d178b8', '06395d29-e646-42b7-b1a4-4b5eabfb8e09', '6.00', '2021-03-21 17:40:41', '2021-03-21 17:40:41', 6),
('f04e1603-d57a-410b-8182-a899bd33114b', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', '2ac55e0a-9465-497e-a756-0cee16244c10', '6.00', '2021-03-05 13:52:25', '2021-03-05 13:52:25', 6),
('f1f997bd-640e-479d-8ecb-2254c4dc49d6', '2f721c43-9109-4a83-a61e-9ece679cf6a5', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '9.00', '2021-02-26 01:24:24', '2021-02-26 01:24:24', 9),
('f22b18c6-847b-4aec-a961-323f370550b9', 'c1086650-edff-4269-92e1-b9a6b3563e04', 'f17e0fb2-763b-42fc-8c25-aa31e5620b56', '8.00', '2021-03-22 14:37:00', '2021-03-22 14:37:00', 8),
('f324acfc-50b6-4c2e-abbf-4191d040a761', 'd9b3b4f1-390b-4a38-99ec-681d8fdf907c', '9291a534-8d59-4d95-b604-fdf399791cda', '12.00', '2021-02-26 00:07:21', '2021-02-26 00:07:21', 12),
('f395d206-8b5d-42a8-aa7d-195e997d5b05', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', 'a6e44278-29cf-4fc2-bc38-24bf06403e0f', '5.00', '2021-03-05 13:04:28', '2021-03-05 13:04:28', 5),
('f423efaa-191c-4e46-a558-8de5905ff7f8', 'c96cf72b-0c18-4509-952e-30a7d8d178b8', 'd5ae5e35-f889-43fb-bcc9-41e74ceaba40', '14.00', '2021-03-21 18:35:47', '2021-03-21 18:35:47', 14),
('f536e0b6-e39d-4f9f-8c7b-4e79ea73eb10', 'e92d14ca-4a02-4e66-9944-03972086617f', '65e408fc-4ae6-4c52-9314-723639e82a04', '9.00', '2021-02-23 17:10:19', '2021-02-23 17:10:19', 9),
('f577de64-9477-4c65-8398-6a6760f759b5', 'd0c32815-d8cc-458e-af68-bb133d9dbf50', '4c7c4664-b2a6-47e1-869f-35f1d74d9aba', '26.00', '2021-03-22 00:16:04', '2021-03-22 00:16:04', 26),
('f5e665fe-09c0-466d-8f87-dc0ae68dbfdd', '2b09aefe-0c94-48b3-8ca2-a7bfce4fc229', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '9.00', '2021-02-25 20:13:20', '2021-02-25 20:13:20', 9),
('f628a794-f693-49a6-b5e3-39dd80d7eb97', '4927b9fe-6984-4559-b738-cc3a8fa1fcef', '84503b95-9f8c-4f9e-bc82-f1ff2cba1c9c', '9.00', '2021-03-04 22:00:11', '2021-03-04 22:00:11', 9),
('f6b3497a-c03e-46eb-9775-7dd226e5498c', 'ebe7fea6-930b-4148-bae9-9194308ad642', '137cb6ee-d459-4a0d-956d-94b26c97a592', '4.00', '2021-03-13 15:33:39', '2021-03-13 15:33:39', 4),
('f6c776d4-b987-4d0e-abc2-ea1cd6207983', 'e92d14ca-4a02-4e66-9944-03972086617f', '744bc421-9e58-4752-b54a-ffd7d2bb9cc1', '14.00', '2021-02-23 17:36:37', '2021-02-23 17:36:37', 14),
('faab22d8-0a40-463c-b912-c35629c5808b', '45576eaa-11e5-4633-ab15-9a63958ffafd', '137cb6ee-d459-4a0d-956d-94b26c97a592', '9.00', '2021-03-10 19:37:34', '2021-03-10 19:37:34', 9),
('fced9513-f264-4ed2-ac8d-6758b89f54a1', 'd0c32815-d8cc-458e-af68-bb133d9dbf50', '65e408fc-4ae6-4c52-9314-723639e82a04', '12.00', '2021-03-22 00:28:14', '2021-03-22 00:28:14', 12),
('fdf191b9-cedf-493a-a662-bff13d25868d', '80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', '6c202403-a831-4b7c-8bf9-f10f6463b6e7', '6.00', '2021-03-05 15:03:14', '2021-03-05 15:03:14', 6),
('fef9a6ba-e76e-4e83-97dd-5f70903e86a5', '948da038-3ce9-4b15-8ba7-bfc860504c38', 'd13a5e0e-83b5-4526-91af-92bc76a745a3', '6.00', '2021-03-04 11:30:01', '2021-03-04 11:30:01', 6),
('ff7b5c44-f392-4fd5-a896-244608214d84', '63ada4ff-f891-429c-a001-b0b1605d9d90', '65e408fc-4ae6-4c52-9314-723639e82a04', '3.00', '2021-03-22 11:52:22', '2021-03-22 11:52:22', 3),
('ff8e2e4b-8846-439c-ab0c-3c3044dc623c', '92ee3773-75ba-4f08-b706-f8febe0670b7', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '14.00', '2021-03-05 19:05:09', '2021-03-05 19:05:09', 14),
('ffc9cf64-c44f-4f32-9669-0158f6f61802', 'bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', '137cb6ee-d459-4a0d-956d-94b26c97a592', '3.00', '2021-03-14 12:53:25', '2021-03-14 12:53:25', 3),
('ffd0890b-404b-4868-864a-d6581903fa12', '82b15fc4-5448-4afb-ac55-28bf36bb51d6', 'd900cf7e-f6df-4117-bd9b-331aef3a0dfb', '8.00', '2021-03-15 23:41:27', '2021-03-15 23:41:27', 8);

-- --------------------------------------------------------

--
-- Table structure for table `quiz_subjects`
--

CREATE TABLE `quiz_subjects` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `alias` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `subject_name` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_subjects`
--

INSERT INTO `quiz_subjects` (`id`, `alias`, `subject_name`, `created_at`, `updated_at`) VALUES
('00576857-89bf-4347-a472-57e2fbb7a3d1', 'java-05-operators-and-assignments', 'Java - 05 - Operators and Assignments', '2021-02-23 18:18:42', '2021-02-23 18:18:42'),
('01313b9f-22e8-4661-a574-20884ef4e0f8', 'c-04-c-preprocessor', 'C - 04 - C Preprocessor', '2021-02-23 03:26:15', '2021-02-23 03:26:15'),
('09cb2cfc-e71e-4591-bd3e-1845b48ae436', 'c-02-objects-and-classes', 'C++ - 02 - Objects and Classes', '2021-02-23 14:42:12', '2021-02-23 14:42:12'),
('0a6b3679-a498-4d37-aebf-a5e9c6fd8043', '00-cryptography', '00 - Cryptography', NULL, '2021-02-21 10:08:01'),
('103857aa-3e19-444a-816a-d61db7df1f9e', 'fullstack', 'Full-Stack', NULL, NULL),
('16c32c78-ee06-4f29-90a6-d3ea8b1ce63f', 'mgmt', 'Management', NULL, NULL),
('1928372e-fba5-4985-ad9e-295142b12892', 'front', 'Front-End', NULL, NULL),
('241c792c-c2df-4c6b-a2c9-fa0652392a8a', 'java-07-assertions', 'Java - 07 - Assertions', '2021-02-23 18:19:12', '2021-02-23 18:19:12'),
('27eec4f0-8e46-4213-9549-add787308a36', 'bigdata', 'Big-Data', NULL, NULL),
('2b595b31-f796-4871-8a62-142f4f4113c4', 'cloud', 'Cloud', NULL, NULL),
('2ba709ad-e718-47a3-b969-634dee694b81', 'java-08-inner-classes', 'Java - 08 - Inner Classes', '2021-02-23 18:19:25', '2021-02-23 18:19:25'),
('2e4c50d1-5518-4f39-8608-a8580cce7b6f', 'java-01-exceptions', 'Java - 01 - Exceptions', '2021-02-23 18:16:19', '2021-02-23 18:16:19'),
('32b7f4a2-5e7a-4b0d-8017-d0b6388f2ac3', '01-classical-encryption-techniques-symmetric-cipher-models', '01 - Classical Encryption Techniques - Symmetric Cipher Models', '2021-02-21 10:07:28', '2021-02-21 10:08:10'),
('3723a8a1-35d1-4eeb-887e-e0406a0d151f', 'c-05-complicated-declarations', 'C - 05 - Complicated Declarations', '2021-02-23 03:26:37', '2021-02-23 03:26:37'),
('418dd337-345d-4571-9abc-87fbcc3ec603', 'c-01-oops-concepts', 'C++ - 01 - OOPS Concepts', '2021-02-23 14:41:47', '2021-02-23 14:42:22'),
('4aef7112-05d9-4eda-adc0-ed75904421e6', 'devops', 'DevOps', NULL, NULL),
('503790d5-9265-4e78-8dce-6a98ea7dcd8a', 'hr', 'HR', NULL, NULL),
('56eaa75e-9f55-46f9-9552-5033d8753f1c', 'c-05-references', 'C++ - 05 - References', '2021-02-23 14:43:12', '2021-02-23 14:43:12'),
('5b9785a3-3f37-4b7b-8dd4-d428c3334502', 'c-03-pointers', 'C - 03 - Pointers', '2021-02-23 03:26:01', '2021-02-23 03:26:01'),
('62bc4d67-d9b8-407f-8ddb-3d9b33ff1161', 'saas', 'SAAS', NULL, NULL),
('6489b2f9-44f9-4591-bd73-04960cb89165', 'cryptography', 'Cryptography', NULL, NULL),
('659cf545-6016-464c-bb4b-ce098a3e60d3', '38-public-key-crypto-systems-hash-functions-hash-functions', '38 - Public Key Crypto systems & Hash Functions - Hash Functions', '2021-02-22 12:45:19', '2021-02-22 12:45:19'),
('66d40433-4278-499c-b6db-c6485c2ccc20', 'java-03-language-fundamentals', 'Java - 03 - Language Fundamentals', '2021-02-23 18:17:32', '2021-02-23 18:17:32'),
('687818e6-54a2-4ebe-bc47-e18a3e0582dd', 'mobile', 'Mobile', NULL, NULL),
('696f989e-c404-4130-aaab-53904f29c2c5', 'c-01-array', 'C - 01 - Array', '2021-02-23 03:24:58', '2021-02-23 03:24:58'),
('6ba1717c-a6a7-4bed-8b06-582898c70884', 'back', 'Back-End', NULL, NULL),
('6dab805a-03f1-45ad-97b4-a2c376ddf6ee', 'db', 'Database', NULL, NULL),
('736099c0-a3c8-43b8-9203-de3bdc9908de', '78-wireless-network-security-its-overview-wireless-security', '78 - Wireless Network Security & its Overview - Wireless Security', '2021-02-21 19:17:51', '2021-02-21 19:17:51'),
('74767b14-f5a2-4b8a-a824-fc430e66b317', 'sha-1', 'SHA - 1', '2021-02-22 19:23:57', '2021-02-22 19:23:57'),
('7c56d9fa-cdb8-40d3-924d-8b7c00688167', 'marketing-test', 'Marketing Test', '2021-02-22 18:18:27', '2021-02-22 18:18:27'),
('884fca6b-c74c-47c6-b08d-90622059005d', 'spring-data-access', 'Spring Data Access', '2021-02-20 18:33:32', '2021-02-20 18:33:32'),
('8ad54152-fa0a-4ced-b8fa-ae9a9a3fb3f8', 'java-06-objects-and-collections', 'Java - 06 - Objects and Collections', '2021-02-23 18:19:01', '2021-02-23 18:19:01'),
('97e3960a-250a-4950-b4ee-e9add588fd0e', 'datascience', 'Data Science', NULL, NULL),
('a71eccb4-13bf-4bf7-a72d-f599b1171e76', 'java-02-garbage-collections', 'Java - 02 - Garbage Collections', '2021-02-23 18:16:48', '2021-02-23 18:16:48'),
('a755caba-53d6-4cf4-8d7f-3641a29e3689', '02-classical-encryption-techniques-transposition-techniques', '02 - Classical Encryption Techniques - Transposition Techniques', '2021-02-21 10:08:49', '2021-02-21 10:08:49'),
('b7afe183-c5da-4215-9a58-85d990a4ce2d', 'spring-aop', 'Spring AOP', NULL, NULL),
('c4d4bd7a-5b8f-492d-9b38-9cef4b367ee4', 'java-04-threads', 'Java - 04 - Threads', '2021-02-23 18:17:47', '2021-02-23 18:17:47'),
('cc0a9e44-e255-4f5e-8c9a-f6e138780c34', 'c-03-functions', 'C++ - 03 - Functions', '2021-02-23 14:42:40', '2021-02-23 14:42:40'),
('d38f3e45-9b58-426e-9b0c-f6a7663a454f', 'c-04-constructors-and-destructors', 'C++ - 04 - Constructors and Destructors', '2021-02-23 14:43:02', '2021-02-23 14:43:02'),
('d95af45c-8027-49a6-bf65-a1fe4f114a1c', 'c-02-const', 'C - 02 - Const', '2021-02-23 03:25:47', '2021-02-23 03:25:47'),
('d99cdba4-17b7-4be9-b6fe-b3cfe30e32f5', '13-aes-algorithm-1', '13 - AES Algorithm - 1', '2021-02-22 12:55:17', '2021-02-22 12:55:17'),
('e55a00de-65c5-41dd-80fe-a36db9870bc7', 'java-09-flow-control', 'Java - 09 - Flow Control', '2021-02-23 18:19:44', '2021-02-23 18:19:44'),
('e90b3ae2-1110-4319-b2b4-672917d6474a', 'qa', 'QA', NULL, NULL),
('fe7f52b6-ebfb-4928-afa1-cc3aa7b45718', 'marketing', 'Marketing', NULL, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `quiz_users`
--

CREATE TABLE `quiz_users` (
  `id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `class_id` char(36) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `firstname` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `lastname` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `code` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `deleted_at` timestamp NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `quiz_users`
--

INSERT INTO `quiz_users` (`id`, `class_id`, `firstname`, `lastname`, `code`, `deleted_at`, `created_at`, `updated_at`) VALUES
('096cf106-c70b-4bb9-9ee7-8af591f51be1', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Gaurav', 'Gulati', '8576', NULL, '2021-03-03 03:29:12', '2021-03-03 03:29:12'),
('0a26905a-ec7b-4e7c-9437-7523f52953cf', 'f747353d-5060-47c6-bd38-5e7f4c63f181', 'Marco', 'Avila', '9577', NULL, '2021-02-22 18:19:23', '2021-02-22 18:19:23'),
('0a8573c4-e4a0-46a5-be15-cc6cf2337468', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Behnam', 'Anjomruz', '7934', NULL, '2021-03-03 03:13:14', '2021-03-03 03:13:14'),
('0f77b32f-3f62-4c93-9a10-87fcdf680983', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Amira', 'Alsarag', '6222', NULL, '2021-03-20 00:16:34', '2021-03-20 00:16:34'),
('10305433-4691-481b-b829-072f0e404c9b', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Ronda', 'Maaliki', '6883', NULL, '2021-03-22 11:21:37', '2021-03-22 11:21:37'),
('151ce0eb-b377-4b1f-888b-6d76f143c979', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Tinshu', 'Sasi', '7949', NULL, '2021-03-15 16:09:50', '2021-03-15 16:09:50'),
('1897348d-84dd-4351-a1d3-fbcd01388e42', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Sebastijan', 'Zidaric', '8697', NULL, '2021-03-08 15:03:10', '2021-03-08 15:03:10'),
('1973fb08-911a-4c76-a2d1-8be79dfaa1cf', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Ibrahim', 'Arowolo', '9316', NULL, '2021-03-03 03:08:05', '2021-03-03 03:08:05'),
('1b26d1a3-f44b-4ade-9bb0-0f4d3006f26a', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Karthik', 'Kanchinatham', '7986', NULL, '2021-03-08 15:01:29', '2021-03-08 15:01:29'),
('1bc3e117-3e7a-425c-bd3b-6f0fde839c56', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Shubham', 'Kumar', '5660', NULL, '2021-03-03 03:17:09', '2021-03-03 03:17:09'),
('1f8b4446-bd59-4e75-9c13-06f7e8f8d7dc', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Subhamay', 'Barui', '7967', NULL, '2021-02-22 14:41:41', '2021-02-22 14:41:41'),
('220f673c-1745-4333-b528-b3ef7611a3cc', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Deepak', 'Sharma', '9208', NULL, '2021-02-25 03:28:22', '2021-02-25 03:28:22'),
('2b09aefe-0c94-48b3-8ca2-a7bfce4fc229', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Cahit', 'Beyaz', '7420', NULL, '2021-02-25 12:54:23', '2021-02-25 12:54:23'),
('2f721c43-9109-4a83-a61e-9ece679cf6a5', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Diksha', 'Sahni', '9968', NULL, '2021-02-25 03:22:27', '2021-02-25 03:22:27'),
('34938ee7-128a-4d15-b577-0d2b744028f3', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Ashutosh', 'Tripathi', '7086', NULL, '2021-03-03 03:10:56', '2021-03-03 03:10:56'),
('362d8654-c79b-4bed-8875-1071283ea4c7', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Mohamad', 'Jawad', '9708', NULL, '2021-03-20 12:33:03', '2021-03-20 12:33:03'),
('3cb3e3de-0b7d-493e-ba32-090f6f78147b', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Amir', 'Fatemi', '6835', NULL, '2021-03-03 03:02:05', '2021-03-03 03:02:05'),
('3e3615e9-2d35-4f11-b279-113315965061', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Shishir', 'Pandey', '6898', NULL, '2021-03-03 03:01:07', '2021-03-03 03:01:07'),
('3f2c6c14-5aff-4aac-a01b-e0d49575581e', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Nour', 'Agha', '8195', NULL, '2021-03-12 05:59:48', '2021-03-12 05:59:48'),
('41a0e0c1-e080-4b52-b8c9-008a52a40b68', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Hanaa', 'Zahabi', '5423', NULL, '2021-03-20 03:53:51', '2021-03-20 03:53:51'),
('45576eaa-11e5-4633-ab15-9a63958ffafd', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Lohit', 'Barki', '8202', NULL, '2021-03-10 03:07:12', '2021-03-10 03:07:12'),
('4927b9fe-6984-4559-b738-cc3a8fa1fcef', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Luca', 'Caldesi', '7906', NULL, '2021-03-04 05:06:09', '2021-03-04 05:06:09'),
('4cfa70d4-3581-4d43-91b3-36fdaaeca05b', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Saheed', 'Yusuf', '9080', NULL, '2021-03-03 03:30:55', '2021-03-03 03:30:55'),
('560144b9-a400-431c-9b9a-a52f3c685887', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'amit', 'kumar', '9942', NULL, '2021-02-22 13:11:43', '2021-02-22 18:22:24'),
('63ada4ff-f891-429c-a001-b0b1605d9d90', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Ronda', 'Maaliki', '7404', NULL, '2021-03-22 11:21:57', '2021-03-22 11:21:57'),
('67fd0f7c-7187-4f09-892f-f950a622dc26', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Ivanov', 'Svilen', '5610', NULL, '2021-03-04 17:39:56', '2021-03-04 17:39:56'),
('69768740-430f-4737-aff2-f24e7f38a61b', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Ashamol', 'C M', '6919', NULL, '2021-03-03 02:56:32', '2021-03-03 02:56:32'),
('6981086d-76e7-4a73-9a1f-6c5481cb1e74', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Anand', 'Outsourcing4work', '5562', NULL, '2021-03-10 03:00:12', '2021-03-10 03:00:12'),
('6e8ea0f6-8977-4b34-9319-cf77add8dd26', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Dilip Kumar', 'Gundu', '7953', NULL, '2021-03-03 03:14:01', '2021-03-03 03:14:01'),
('74d95654-0a2e-4973-89d3-6586231ff4a8', '1587cd47-c3d8-4a68-baed-110d91af8696', 'BERNARD', 'OREVA', '9782', NULL, '2021-03-03 03:16:22', '2021-03-03 03:16:22'),
('79fd5d5c-9fea-4510-80cb-531b0733bdaf', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Bilal', 'Ashraf', '7394', NULL, '2021-03-04 04:11:56', '2021-03-04 04:11:56'),
('7e62c193-2517-4a7e-889b-a1f8c7860d72', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Venketesh', 'A', '7808', NULL, '2021-03-04 17:32:27', '2021-03-04 17:32:27'),
('80cc7cc4-08b4-4779-b11e-9f6671e1e8b2', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Nitheesh Kumar', 'Hotte', '8959', NULL, '2021-03-03 03:10:13', '2021-03-03 03:10:13'),
('82b15fc4-5448-4afb-ac55-28bf36bb51d6', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Amol', 'Patil', '8145', NULL, '2021-03-03 03:14:36', '2021-03-03 03:14:36'),
('8d629004-dbb3-4647-96a3-231a1b603521', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Mohamad', 'Jawad', '7508', NULL, '2021-03-20 12:33:23', '2021-03-20 12:33:23'),
('8e92921e-2e03-4bab-8c3b-e14a1e1ac055', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Atul', 'Rane', '6203', NULL, '2021-03-03 03:15:23', '2021-03-03 03:15:23'),
('92848f56-bffc-415f-923c-63d6a36e6ea6', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Bilguun', 'Bayarsaikhan', '6365', NULL, '2021-03-03 03:25:49', '2021-03-03 03:25:49'),
('92ee3773-75ba-4f08-b706-f8febe0670b7', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Nivin', 'John', '8536', NULL, '2021-03-03 03:27:13', '2021-03-03 03:27:13'),
('948da038-3ce9-4b15-8ba7-bfc860504c38', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Ponmudi', 'Babu', '6582', NULL, '2021-03-04 04:46:27', '2021-03-04 04:46:27'),
('9a8e8dd5-5638-4d73-8364-d78df2855ac3', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Bhabadyuti', 'Bal', '6969', NULL, '2021-03-03 03:12:13', '2021-03-03 03:12:13'),
('9c05cc1d-cf33-4a1f-a776-b3fceb769d24', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Mahmoud', 'Sakr', '9953', NULL, '2021-03-03 03:26:38', '2021-03-03 03:26:38'),
('9dec8644-aa05-4b08-82c9-9b712806d5f4', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Agusti', 'Julia', '5377', NULL, '2021-03-10 05:31:06', '2021-03-10 05:31:06'),
('a009d356-1c0d-419a-94dd-86703277a51e', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Ravi', 'Gurijala', '9918', NULL, '2021-03-03 03:08:47', '2021-03-03 03:08:47'),
('a70d4a0a-d8f3-498d-b805-0ff9511a9bd4', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Anindya', 'Mukherjee', '5753', NULL, '2021-03-03 03:04:26', '2021-03-03 03:04:26'),
('a810b4a3-23e3-4772-ac68-19e0d8a1bb6a', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Ahmad', 'Alali', '9802', NULL, '2021-03-22 10:02:59', '2021-03-22 10:02:59'),
('ac075c07-f991-4d46-9f3c-4b606f1625d4', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Vineeth', 'Vijayakumar Chitragi', '8633', NULL, '2021-03-03 03:24:20', '2021-03-03 03:24:20'),
('b99a5b98-84fb-47da-8a07-636e05c4fd85', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Evyatar', 'Enis', '8999', NULL, '2021-03-03 03:30:24', '2021-03-03 03:30:24'),
('bbd27792-79f5-42eb-9d72-c7331891ad61', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Cahit', 'Beyaz', '7412', NULL, '2021-02-25 12:58:44', '2021-02-25 12:58:44'),
('bbdf6956-3904-4747-b375-adca286682cd', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Bilal', 'Ashraf', '5521', NULL, '2021-03-04 04:14:45', '2021-03-04 04:14:45'),
('bce67fe5-4ab6-4dc0-8bab-a1c5bcc27512', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Farhad', 'Yousefi', '9139', NULL, '2021-03-08 14:58:39', '2021-03-08 14:58:39'),
('bdc0d91d-a94d-413f-8980-92e61ed0cf40', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Anand', 'outsourcing4work', '7591', NULL, '2021-03-10 02:56:19', '2021-03-10 02:56:19'),
('c1086650-edff-4269-92e1-b9a6b3563e04', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Nour', 'Sarmout', '5372', NULL, '2021-03-20 19:04:40', '2021-03-20 19:04:40'),
('c2e37e5f-854f-4ba4-9bf0-d9fbd59fcd6b', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'AGUSTI', 'Julia', '9041', NULL, '2021-03-10 05:31:32', '2021-03-10 05:31:32'),
('c96cf72b-0c18-4509-952e-30a7d8d178b8', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Amira', 'Alsarag', '6766', NULL, '2021-03-20 00:16:52', '2021-03-20 00:16:52'),
('d05c87a7-b552-4f71-9ba2-0ec58dc7fc56', '1587cd47-c3d8-4a68-baed-110d91af8696', 'BERNARD', 'OREVA', '5164', NULL, '2021-03-03 03:16:32', '2021-03-03 03:16:32'),
('d0c32815-d8cc-458e-af68-bb133d9dbf50', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Jaafar', 'Sharafeddine', '6355', NULL, '2021-03-19 10:16:54', '2021-03-19 10:16:54'),
('d9b3b4f1-390b-4a38-99ec-681d8fdf907c', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Amit', 'Mishra', '6909', NULL, '2021-02-25 03:26:05', '2021-02-25 03:26:05'),
('deae21c3-7245-42ef-afdc-100922c424e8', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Ahmad', 'Alali', '5626', NULL, '2021-03-22 10:03:18', '2021-03-22 10:03:18'),
('e087d4db-d77d-421b-8692-4edf545b66ae', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Nour', 'Sarmout', '6277', NULL, '2021-03-20 19:02:41', '2021-03-20 19:02:41'),
('e3b0ed30-a7a6-41a0-8334-747443b9e372', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Cem', 'Baskocagil', '7760', NULL, '2021-02-23 15:46:52', '2021-02-23 15:46:52'),
('e4b977be-7ad1-4f66-a76d-aaf2890ae974', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Hanaa', 'Zahabi', '5835', NULL, '2021-03-20 03:54:07', '2021-03-20 03:54:07'),
('e6f79f9c-3bc7-4588-a7d9-e4064e45fe94', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Prashant', 'Karmankar', '9193', NULL, '2021-03-03 03:27:46', '2021-03-03 03:27:46'),
('e92d14ca-4a02-4e66-9944-03972086617f', 'cd1691b1-a5c7-4fb3-953d-cc69d42a039f', 'Cem', 'Baskocagil', '7118', NULL, '2021-02-22 19:52:29', '2021-02-22 19:52:29'),
('ebe7fea6-930b-4148-bae9-9194308ad642', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Othman', 'Moussawel', '5652', NULL, '2021-03-12 06:11:53', '2021-03-12 06:11:53'),
('edbda6fa-5005-4e1e-b441-ed4fe4097c43', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Waheedul', 'Akbar', '5918', NULL, '2021-03-03 03:09:25', '2021-03-03 03:09:25'),
('f8ac7d93-f927-4463-9809-52406dbdff17', 'f747353d-5060-47c6-bd38-5e7f4c63f182', 'Jaafar', 'Sharafeddine', '9784', NULL, '2021-03-19 10:18:07', '2021-03-19 10:18:07'),
('fb6eb15d-c2f0-41ae-8323-cccd09caf1ea', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Anand', 'outsourcing4work', '6393', NULL, '2021-03-10 02:59:02', '2021-03-10 02:59:02'),
('fe859eb8-89bf-44bd-bca6-e2315bc64c06', '1587cd47-c3d8-4a68-baed-110d91af8696', 'Saurabh', 'Dubey', '5375', NULL, '2021-03-03 03:29:53', '2021-03-03 03:29:53');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `quiz_admins`
--
ALTER TABLE `quiz_admins`
  ADD PRIMARY KEY (`id`),
  ADD KEY `quiz_admins_role_id_foreign` (`role_id`);

--
-- Indexes for table `quiz_adminsubject_class`
--
ALTER TABLE `quiz_adminsubject_class`
  ADD PRIMARY KEY (`id`),
  ADD KEY `quiz_adminsubject_class_adminsubject_id_foreign` (`adminsubject_id`),
  ADD KEY `quiz_adminsubject_class_class_id_foreign` (`class_id`);

--
-- Indexes for table `quiz_admin_subject`
--
ALTER TABLE `quiz_admin_subject`
  ADD PRIMARY KEY (`id`),
  ADD KEY `quiz_admin_subject_admin_id_foreign` (`admin_id`),
  ADD KEY `quiz_admin_subject_subject_id_foreign` (`subject_id`);

--
-- Indexes for table `quiz_classes`
--
ALTER TABLE `quiz_classes`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `quiz_class_subject`
--
ALTER TABLE `quiz_class_subject`
  ADD PRIMARY KEY (`id`),
  ADD KEY `quiz_class_subject_class_id_foreign` (`class_id`),
  ADD KEY `quiz_class_subject_subject_id_foreign` (`subject_id`);

--
-- Indexes for table `quiz_exams`
--
ALTER TABLE `quiz_exams`
  ADD PRIMARY KEY (`id`),
  ADD KEY `quiz_exams_class_id_foreign` (`class_id`),
  ADD KEY `quiz_exams_subject_id_foreign` (`subject_id`);

--
-- Indexes for table `quiz_failed_jobs`
--
ALTER TABLE `quiz_failed_jobs`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `quiz_migrations`
--
ALTER TABLE `quiz_migrations`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `quiz_options`
--
ALTER TABLE `quiz_options`
  ADD PRIMARY KEY (`id`),
  ADD KEY `quiz_options_question_id_foreign` (`question_id`);

--
-- Indexes for table `quiz_questions`
--
ALTER TABLE `quiz_questions`
  ADD PRIMARY KEY (`id`),
  ADD KEY `quiz_questions_exam_id_foreign` (`exam_id`);

--
-- Indexes for table `quiz_roles`
--
ALTER TABLE `quiz_roles`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `quiz_scores`
--
ALTER TABLE `quiz_scores`
  ADD PRIMARY KEY (`id`),
  ADD KEY `quiz_scores_user_id_foreign` (`user_id`),
  ADD KEY `quiz_scores_exam_id_foreign` (`exam_id`);

--
-- Indexes for table `quiz_subjects`
--
ALTER TABLE `quiz_subjects`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `quiz_users`
--
ALTER TABLE `quiz_users`
  ADD PRIMARY KEY (`id`),
  ADD KEY `quiz_users_class_id_foreign` (`class_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `quiz_migrations`
--
ALTER TABLE `quiz_migrations`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=19;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `quiz_admins`
--
ALTER TABLE `quiz_admins`
  ADD CONSTRAINT `quiz_admins_role_id_foreign` FOREIGN KEY (`role_id`) REFERENCES `quiz_roles` (`id`);

--
-- Constraints for table `quiz_adminsubject_class`
--
ALTER TABLE `quiz_adminsubject_class`
  ADD CONSTRAINT `quiz_adminsubject_class_adminsubject_id_foreign` FOREIGN KEY (`adminsubject_id`) REFERENCES `quiz_admin_subject` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `quiz_adminsubject_class_class_id_foreign` FOREIGN KEY (`class_id`) REFERENCES `quiz_classes` (`id`) ON DELETE CASCADE;

--
-- Constraints for table `quiz_admin_subject`
--
ALTER TABLE `quiz_admin_subject`
  ADD CONSTRAINT `quiz_admin_subject_admin_id_foreign` FOREIGN KEY (`admin_id`) REFERENCES `quiz_admins` (`id`),
  ADD CONSTRAINT `quiz_admin_subject_subject_id_foreign` FOREIGN KEY (`subject_id`) REFERENCES `quiz_subjects` (`id`);

--
-- Constraints for table `quiz_class_subject`
--
ALTER TABLE `quiz_class_subject`
  ADD CONSTRAINT `quiz_class_subject_class_id_foreign` FOREIGN KEY (`class_id`) REFERENCES `quiz_classes` (`id`),
  ADD CONSTRAINT `quiz_class_subject_subject_id_foreign` FOREIGN KEY (`subject_id`) REFERENCES `quiz_subjects` (`id`);

--
-- Constraints for table `quiz_exams`
--
ALTER TABLE `quiz_exams`
  ADD CONSTRAINT `quiz_exams_class_id_foreign` FOREIGN KEY (`class_id`) REFERENCES `quiz_classes` (`id`),
  ADD CONSTRAINT `quiz_exams_subject_id_foreign` FOREIGN KEY (`subject_id`) REFERENCES `quiz_subjects` (`id`);

--
-- Constraints for table `quiz_options`
--
ALTER TABLE `quiz_options`
  ADD CONSTRAINT `quiz_options_question_id_foreign` FOREIGN KEY (`question_id`) REFERENCES `quiz_questions` (`id`) ON DELETE CASCADE;

--
-- Constraints for table `quiz_questions`
--
ALTER TABLE `quiz_questions`
  ADD CONSTRAINT `quiz_questions_exam_id_foreign` FOREIGN KEY (`exam_id`) REFERENCES `quiz_exams` (`id`) ON DELETE CASCADE;

--
-- Constraints for table `quiz_scores`
--
ALTER TABLE `quiz_scores`
  ADD CONSTRAINT `quiz_scores_exam_id_foreign` FOREIGN KEY (`exam_id`) REFERENCES `quiz_exams` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `quiz_scores_user_id_foreign` FOREIGN KEY (`user_id`) REFERENCES `quiz_users` (`id`);

--
-- Constraints for table `quiz_users`
--
ALTER TABLE `quiz_users`
  ADD CONSTRAINT `quiz_users_class_id_foreign` FOREIGN KEY (`class_id`) REFERENCES `quiz_classes` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
